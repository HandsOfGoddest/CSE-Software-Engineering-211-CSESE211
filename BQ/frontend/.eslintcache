[{"D:\\ĐẠI HỌC\\HK211\\Công nghệ phần mềm\\BTL\\App\\BQ\\frontend\\src\\index.js":"1","D:\\ĐẠI HỌC\\HK211\\Công nghệ phần mềm\\BTL\\App\\BQ\\frontend\\src\\store.js":"2","D:\\ĐẠI HỌC\\HK211\\Công nghệ phần mềm\\BTL\\App\\BQ\\frontend\\src\\App.js":"3","D:\\ĐẠI HỌC\\HK211\\Công nghệ phần mềm\\BTL\\App\\BQ\\frontend\\src\\reducers\\brandReducers.js":"4","D:\\ĐẠI HỌC\\HK211\\Công nghệ phần mềm\\BTL\\App\\BQ\\frontend\\src\\reducers\\cartReducers.js":"5","D:\\ĐẠI HỌC\\HK211\\Công nghệ phần mềm\\BTL\\App\\BQ\\frontend\\src\\reducers\\orderReducers.js":"6","D:\\ĐẠI HỌC\\HK211\\Công nghệ phần mềm\\BTL\\App\\BQ\\frontend\\src\\reducers\\userReducers.js":"7","D:\\ĐẠI HỌC\\HK211\\Công nghệ phần mềm\\BTL\\App\\BQ\\frontend\\src\\reducers\\productReducers.js":"8","D:\\ĐẠI HỌC\\HK211\\Công nghệ phần mềm\\BTL\\App\\BQ\\frontend\\src\\screens\\ProfileScreen.js":"9","D:\\ĐẠI HỌC\\HK211\\Công nghệ phần mềm\\BTL\\App\\BQ\\frontend\\src\\screens\\HomeScreen.js":"10","D:\\ĐẠI HỌC\\HK211\\Công nghệ phần mềm\\BTL\\App\\BQ\\frontend\\src\\screens\\ProductScreen.js":"11","D:\\ĐẠI HỌC\\HK211\\Công nghệ phần mềm\\BTL\\App\\BQ\\frontend\\src\\screens\\RegisterScreen.js":"12","D:\\ĐẠI HỌC\\HK211\\Công nghệ phần mềm\\BTL\\App\\BQ\\frontend\\src\\screens\\LoginScreen.js":"13","D:\\ĐẠI HỌC\\HK211\\Công nghệ phần mềm\\BTL\\App\\BQ\\frontend\\src\\screens\\CartScreen.js":"14","D:\\ĐẠI HỌC\\HK211\\Công nghệ phần mềm\\BTL\\App\\BQ\\frontend\\src\\screens\\PaymentScreen.js":"15","D:\\ĐẠI HỌC\\HK211\\Công nghệ phần mềm\\BTL\\App\\BQ\\frontend\\src\\screens\\ShippingScreen.js":"16","D:\\ĐẠI HỌC\\HK211\\Công nghệ phần mềm\\BTL\\App\\BQ\\frontend\\src\\screens\\PlaceOrderScreen.js":"17","D:\\ĐẠI HỌC\\HK211\\Công nghệ phần mềm\\BTL\\App\\BQ\\frontend\\src\\components\\Header.js":"18","D:\\ĐẠI HỌC\\HK211\\Công nghệ phần mềm\\BTL\\App\\BQ\\frontend\\src\\screens\\OrderScreen.js":"19","D:\\ĐẠI HỌC\\HK211\\Công nghệ phần mềm\\BTL\\App\\BQ\\frontend\\src\\components\\Footer.js":"20","D:\\ĐẠI HỌC\\HK211\\Công nghệ phần mềm\\BTL\\App\\BQ\\frontend\\src\\components\\getListProductOfBrand.js":"21","D:\\ĐẠI HỌC\\HK211\\Công nghệ phần mềm\\BTL\\App\\BQ\\frontend\\src\\components\\getListProductByCategoryOfBrand.js":"22","D:\\ĐẠI HỌC\\HK211\\Công nghệ phần mềm\\BTL\\App\\BQ\\frontend\\src\\components\\Message.js":"23","D:\\ĐẠI HỌC\\HK211\\Công nghệ phần mềm\\BTL\\App\\BQ\\frontend\\src\\components\\Loader.js":"24","D:\\ĐẠI HỌC\\HK211\\Công nghệ phần mềm\\BTL\\App\\BQ\\frontend\\src\\components\\Product.js":"25","D:\\ĐẠI HỌC\\HK211\\Công nghệ phần mềm\\BTL\\App\\BQ\\frontend\\src\\components\\Advertisement.js":"26","D:\\ĐẠI HỌC\\HK211\\Công nghệ phần mềm\\BTL\\App\\BQ\\frontend\\src\\components\\Category.js":"27","D:\\ĐẠI HỌC\\HK211\\Công nghệ phần mềm\\BTL\\App\\BQ\\frontend\\src\\components\\Rating.js":"28","D:\\ĐẠI HỌC\\HK211\\Công nghệ phần mềm\\BTL\\App\\BQ\\frontend\\src\\components\\FormContainer.js":"29","D:\\ĐẠI HỌC\\HK211\\Công nghệ phần mềm\\BTL\\App\\BQ\\frontend\\src\\components\\SearchBox.js":"30","D:\\ĐẠI HỌC\\HK211\\Công nghệ phần mềm\\BTL\\App\\BQ\\frontend\\src\\components\\CheckoutSteps.js":"31","D:\\ĐẠI HỌC\\HK211\\Công nghệ phần mềm\\BTL\\App\\BQ\\frontend\\src\\constants\\brandConstants.js":"32","D:\\ĐẠI HỌC\\HK211\\Công nghệ phần mềm\\BTL\\App\\BQ\\frontend\\src\\constants\\orderConstants.js":"33","D:\\ĐẠI HỌC\\HK211\\Công nghệ phần mềm\\BTL\\App\\BQ\\frontend\\src\\constants\\cartConstant.js":"34","D:\\ĐẠI HỌC\\HK211\\Công nghệ phần mềm\\BTL\\App\\BQ\\frontend\\src\\constants\\userConstants.js":"35","D:\\ĐẠI HỌC\\HK211\\Công nghệ phần mềm\\BTL\\App\\BQ\\frontend\\src\\constants\\productConstants.js":"36","D:\\ĐẠI HỌC\\HK211\\Công nghệ phần mềm\\BTL\\App\\BQ\\frontend\\src\\actions\\userActions.js":"37","D:\\ĐẠI HỌC\\HK211\\Công nghệ phần mềm\\BTL\\App\\BQ\\frontend\\src\\actions\\cartActions.js":"38","D:\\ĐẠI HỌC\\HK211\\Công nghệ phần mềm\\BTL\\App\\BQ\\frontend\\src\\actions\\orderActions.js":"39","D:\\ĐẠI HỌC\\HK211\\Công nghệ phần mềm\\BTL\\App\\BQ\\frontend\\src\\actions\\productActions.js":"40","D:\\ĐẠI HỌC\\HK211\\Công nghệ phần mềm\\BTL\\App\\BQ\\frontend\\src\\actions\\brandActions.js":"41","D:\\ĐẠI HỌC\\HK211\\Công nghệ phần mềm\\BTL\\App\\BQ\\frontend\\src\\components\\ListBrand.js":"42","D:\\ĐẠI HỌC\\HK211\\Công nghệ phần mềm\\BTL\\App\\BQ\\frontend\\src\\components\\ListCategory.js":"43","D:\\ĐẠI HỌC\\HK211\\Công nghệ phần mềm\\BTL\\App\\BQ\\frontend\\src\\screens\\AdminScreen.js":"44","D:\\ĐẠI HỌC\\HK211\\Công nghệ phần mềm\\BTL\\App\\BQ\\frontend\\src\\screens\\AdminProductScreen.js":"45","D:\\ĐẠI HỌC\\HK211\\Công nghệ phần mềm\\BTL\\App\\BQ\\frontend\\src\\screens\\AdminBrandScreen.js":"46","D:\\ĐẠI HỌC\\HK211\\Công nghệ phần mềm\\BTL\\App\\BQ\\frontend\\src\\screens\\AddBrandScreen.js":"47","D:\\ĐẠI HỌC\\HK211\\Công nghệ phần mềm\\BTL\\App\\BQ\\frontend\\src\\screens\\AddCateScreen.js":"48","D:\\ĐẠI HỌC\\HK211\\Công nghệ phần mềm\\BTL\\App\\BQ\\frontend\\src\\screens\\AddProductScreen.js":"49","D:\\ĐẠI HỌC\\HK211\\Công nghệ phần mềm\\BTL\\App\\BQ\\frontend\\src\\screens\\EditProductScreen.js":"50","D:\\ĐẠI HỌC\\HK211\\Công nghệ phần mềm\\BTL\\App\\BQ\\frontend\\src\\screens\\ForgotPassScreen.js":"51","D:\\ĐẠI HỌC\\HK211\\Công nghệ phần mềm\\BTL\\App\\BQ\\frontend\\src\\screens\\ClerkScreen.js":"52","D:\\ĐẠI HỌC\\HK211\\Công nghệ phần mềm\\BTL\\App\\BQ\\frontend\\src\\components\\OrderList.js":"53"},{"size":335,"mtime":1636956053441,"results":"54","hashOfConfig":"55"},{"size":2998,"mtime":1637938526332,"results":"56","hashOfConfig":"55"},{"size":3682,"mtime":1637938484411,"results":"57","hashOfConfig":"55"},{"size":3815,"mtime":1637858032265,"results":"58","hashOfConfig":"55"},{"size":3212,"mtime":1637639054442,"results":"59","hashOfConfig":"55"},{"size":3499,"mtime":1637938458331,"results":"60","hashOfConfig":"55"},{"size":2542,"mtime":1637917191372,"results":"61","hashOfConfig":"55"},{"size":2963,"mtime":1637827791353,"results":"62","hashOfConfig":"55"},{"size":6611,"mtime":1637942502695,"results":"63","hashOfConfig":"55"},{"size":1313,"mtime":1637938982063,"results":"64","hashOfConfig":"55"},{"size":6869,"mtime":1637906360618,"results":"65","hashOfConfig":"55"},{"size":3669,"mtime":1637638535554,"results":"66","hashOfConfig":"55"},{"size":3031,"mtime":1637936442823,"results":"67","hashOfConfig":"55"},{"size":3645,"mtime":1637978091923,"results":"68","hashOfConfig":"55"},{"size":2128,"mtime":1637944704014,"results":"69","hashOfConfig":"55"},{"size":2283,"mtime":1637943608298,"results":"70","hashOfConfig":"55"},{"size":5992,"mtime":1637944774980,"results":"71","hashOfConfig":"55"},{"size":2098,"mtime":1637638535545,"results":"72","hashOfConfig":"55"},{"size":6243,"mtime":1637212240267,"results":"73","hashOfConfig":"55"},{"size":1201,"mtime":1637827791342,"results":"74","hashOfConfig":"55"},{"size":936,"mtime":1637827791347,"results":"75","hashOfConfig":"55"},{"size":942,"mtime":1637827791346,"results":"76","hashOfConfig":"55"},{"size":252,"mtime":1636956053433,"results":"77","hashOfConfig":"55"},{"size":410,"mtime":1636956053431,"results":"78","hashOfConfig":"55"},{"size":778,"mtime":1637638535547,"results":"79","hashOfConfig":"55"},{"size":875,"mtime":1637161881691,"results":"80","hashOfConfig":"55"},{"size":1444,"mtime":1637638535544,"results":"81","hashOfConfig":"55"},{"size":1953,"mtime":1637638535547,"results":"82","hashOfConfig":"55"},{"size":381,"mtime":1637121283223,"results":"83","hashOfConfig":"55"},{"size":907,"mtime":1637161881697,"results":"84","hashOfConfig":"55"},{"size":1325,"mtime":1637138174362,"results":"85","hashOfConfig":"55"},{"size":1514,"mtime":1637829016255,"results":"86","hashOfConfig":"55"},{"size":1160,"mtime":1637938458330,"results":"87","hashOfConfig":"55"},{"size":760,"mtime":1637317351417,"results":"88","hashOfConfig":"55"},{"size":1682,"mtime":1637917191371,"results":"89","hashOfConfig":"55"},{"size":1235,"mtime":1637827791350,"results":"90","hashOfConfig":"55"},{"size":4722,"mtime":1637917191369,"results":"91","hashOfConfig":"55"},{"size":3687,"mtime":1637484905838,"results":"92","hashOfConfig":"55"},{"size":4950,"mtime":1637941215958,"results":"93","hashOfConfig":"55"},{"size":4575,"mtime":1637915137023,"results":"94","hashOfConfig":"55"},{"size":5947,"mtime":1637898191153,"results":"95","hashOfConfig":"55"},{"size":523,"mtime":1637829016251,"results":"96","hashOfConfig":"55"},{"size":569,"mtime":1637829016253,"results":"97","hashOfConfig":"55"},{"size":4086,"mtime":1637916881983,"results":"98","hashOfConfig":"55"},{"size":4855,"mtime":1637916978082,"results":"99","hashOfConfig":"55"},{"size":4509,"mtime":1637916750601,"results":"100","hashOfConfig":"55"},{"size":2509,"mtime":1637859817297,"results":"101","hashOfConfig":"55"},{"size":2636,"mtime":1637898008059,"results":"102","hashOfConfig":"55"},{"size":3395,"mtime":1637916413001,"results":"103","hashOfConfig":"55"},{"size":4241,"mtime":1637916523357,"results":"104","hashOfConfig":"55"},{"size":1898,"mtime":1637917191373,"results":"105","hashOfConfig":"55"},{"size":4424,"mtime":1637943925997,"results":"106","hashOfConfig":"55"},{"size":504,"mtime":1637938458328,"results":"107","hashOfConfig":"55"},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},"s8zzzw",{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"110"},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128"},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131"},{"filePath":"132","messages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"110"},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"137","messages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"110"},{"filePath":"140","messages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146"},{"filePath":"147","messages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"149","messages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"110"},{"filePath":"152","messages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"110"},{"filePath":"155","messages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"157","messages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"110"},{"filePath":"160","messages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"110"},{"filePath":"163","messages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"165","messages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"167","messages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"110"},{"filePath":"170","messages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"172","messages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"110"},{"filePath":"175","messages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"177","messages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"179","messages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"181","messages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"183","messages":"184","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"185","messages":"186","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"187","messages":"188","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"189","messages":"190","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"191","messages":"192","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"193","messages":"194","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"110"},{"filePath":"196","messages":"197","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"198","messages":"199","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200"},{"filePath":"201","messages":"202","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"203","messages":"204","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"205","messages":"206","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"110"},{"filePath":"208","messages":"209","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"110"},{"filePath":"211","messages":"212","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"110"},{"filePath":"214","messages":"215","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"110"},{"filePath":"217","messages":"218","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219","usedDeprecatedRules":"110"},{"filePath":"220","messages":"221","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222","usedDeprecatedRules":"110"},{"filePath":"223","messages":"224","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225","usedDeprecatedRules":"110"},{"filePath":"226","messages":"227","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228","usedDeprecatedRules":"110"},{"filePath":"229","messages":"230","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"231","usedDeprecatedRules":"110"},{"filePath":"232","messages":"233","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"234","usedDeprecatedRules":"110"},{"filePath":"235","messages":"236","errorCount":0,"fatalErrorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":"237"},{"filePath":"238","messages":"239","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"240"},"D:\\ĐẠI HỌC\\HK211\\Công nghệ phần mềm\\BTL\\App\\BQ\\frontend\\src\\index.js",[],["241","242"],"D:\\ĐẠI HỌC\\HK211\\Công nghệ phần mềm\\BTL\\App\\BQ\\frontend\\src\\store.js",[],"D:\\ĐẠI HỌC\\HK211\\Công nghệ phần mềm\\BTL\\App\\BQ\\frontend\\src\\App.js",[],"D:\\ĐẠI HỌC\\HK211\\Công nghệ phần mềm\\BTL\\App\\BQ\\frontend\\src\\reducers\\brandReducers.js",[],"D:\\ĐẠI HỌC\\HK211\\Công nghệ phần mềm\\BTL\\App\\BQ\\frontend\\src\\reducers\\cartReducers.js",["243"],"import { \r\n        CART_ADD_ITEM, \r\n        CART_REMOVE_ITEM, \r\n        CART_REMOVE_ALL_ITEM,\r\n        CART_SAVE_SHIPPING_ADDRESS,\r\n        CART_SAVE_PAYMENT_METHOD,\r\n        CART_LIST_MY_REQUEST,\r\n        CART_LIST_MY_SUCCESS,\r\n        CART_LIST_MY_FAIL,\r\n        CART_LIST_MY_RESET,\r\n        CART_UPDATE_SUCCESS,\r\n        CART_UPDATE_FAIL,\r\n        CART_UPDATE_REQUEST,\r\n        CART_UPDATE_ALL_ITEM,\r\n    } from '../constants/cartConstant'\r\n\r\n\r\n\r\nexport const cartReducer = (state = { cartItems: [], shippingAdress:{} }, action) => {\r\n    switch(action.type){\r\n        case CART_ADD_ITEM:\r\n            const item = action.payload\r\n\r\n            const existItem = state.cartItems.find(x => x.product === item.product)\r\n\r\n            if(existItem){\r\n                return {\r\n                    ...state,\r\n                    cartItems: state.cartItems.map(x => x.product === existItem.product ? item : x)\r\n                }\r\n            } else {\r\n                return {\r\n                    ...state,\r\n                    cartItems: [...state.cartItems, item]\r\n                }\r\n            }\r\n        case CART_REMOVE_ITEM:\r\n            return {\r\n                ...state,\r\n                cartItems: state.cartItems.filter(x => x.product !== action.payload),\r\n            }\r\n        case CART_SAVE_SHIPPING_ADDRESS:\r\n        return {\r\n            ...state,\r\n            shippingAddress: action.payload,\r\n        }\r\n        case CART_SAVE_PAYMENT_METHOD:\r\n        return {\r\n            ...state,\r\n            paymentMethod: action.payload,\r\n        }\r\n        case CART_REMOVE_ALL_ITEM:\r\n            return{\r\n            ...state,\r\n            cartItems: []\r\n        }\r\n        case CART_UPDATE_ALL_ITEM:\r\n            //console.log(action.payload)\r\n            const data = localStorage.getItem('cartItems')? JSON.parse(localStorage.getItem('cartItems')): []\r\n            return{\r\n            ...state,\r\n            cartItems:  action.payload\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const cartListMyReducer = (\r\n    state = { cart:[] },\r\n    action\r\n  ) => {\r\n    switch (action.type) {\r\n      case CART_LIST_MY_REQUEST:\r\n        return {\r\n          loading: true \r\n        };\r\n      case CART_LIST_MY_SUCCESS:\r\n          console.log(action.payload)\r\n        return { \r\n          loading: false, \r\n          cart: action.payload,\r\n        };\r\n  \r\n      case CART_LIST_MY_FAIL:\r\n        return {\r\n          loading: false,\r\n          error: action.payload,\r\n        };\r\n      case CART_LIST_MY_RESET:\r\n        return {\r\n            cart: []\r\n        };\r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n\r\n  export const updateCartReducer = ( state = {}, action) => {\r\n    switch(action.type){\r\n        case CART_UPDATE_REQUEST:\r\n            return{\r\n                loading: true\r\n            }\r\n        case CART_UPDATE_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true,\r\n                cart: action.payload,\r\n            }\r\n        case CART_UPDATE_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload,\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","D:\\ĐẠI HỌC\\HK211\\Công nghệ phần mềm\\BTL\\App\\BQ\\frontend\\src\\reducers\\orderReducers.js",[],"D:\\ĐẠI HỌC\\HK211\\Công nghệ phần mềm\\BTL\\App\\BQ\\frontend\\src\\reducers\\userReducers.js",[],"D:\\ĐẠI HỌC\\HK211\\Công nghệ phần mềm\\BTL\\App\\BQ\\frontend\\src\\reducers\\productReducers.js",[],"D:\\ĐẠI HỌC\\HK211\\Công nghệ phần mềm\\BTL\\App\\BQ\\frontend\\src\\screens\\ProfileScreen.js",["244","245","246","247","248","249"],"import React, { useState, useEffect } from \"react\";\r\nimport { Form, Button, Row, Col, Table } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport { getUserDetails, updateUserProfile } from \"../actions/userActions\";\r\nimport { listMyOrders, updateOrder } from \"../actions/orderActions\";\r\n\r\nconst ProfileScreen = ({ history }) => {\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [message, setMessage] = useState(null);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userDetails = useSelector((state) => state.userDetails);\r\n  const { loading, error, user } = userDetails;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const userUpdateProfile = useSelector((state) => state.userUpdateProfile);\r\n  const { success } = userUpdateProfile;\r\n\r\n  const orderListMy = useSelector((state) => state.orderListMy);\r\n  const { loading: loadingOrders, error: errorOrders, orders } = orderListMy;\r\n\r\n  const updateOrderStatus = useSelector((state) => state.updateOrderStatus);\r\n  const {success: successUpdateOrder} = updateOrderStatus\r\n\r\n  console.log(user)\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push(\"/login\");\r\n    } else {\r\n      if (!user?.name) {\r\n        dispatch(getUserDetails('profile'));\r\n        dispatch(listMyOrders())\r\n        \r\n      } else {\r\n        setName(user.name);\r\n        setEmail(user.email);\r\n      }\r\n      if(successUpdateOrder){\r\n        dispatch(listMyOrders())\r\n      }\r\n    }\r\n  }, [dispatch, history, userInfo, user,successUpdateOrder]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    if (password !== confirmPassword) {\r\n      setMessage(\"MẬT KHẨU KHÔNG KHỚP\");\r\n    } else {\r\n      dispatch(updateUserProfile({ id: user._id, name, email, password }));\r\n    }\r\n  };\r\n\r\n  const confirmHandler = (id) => {\r\n    console.log(\"cf\")\r\n    dispatch(updateOrder(id, \"Đã giao hàng\"))\r\n  };\r\n\r\n  return(\r\n    <Row style = {{marginTop:\"100px\"}}>\r\n      <Col md={3}>\r\n        <h6>USER PROFILE</h6>\r\n        {message && <Message variant=\"danger\">{message}</Message>}\r\n        {error && <Message variant=\"danger\">{error}</Message>}\r\n       {success && (\r\n          <Message variant=\"success\">\r\n          \r\n          Cập nhật thay đổi thành công</Message>\r\n        ) } \r\n        {loading && <Loader />}\r\n\r\n        <Form onSubmit={submitHandler}>\r\n          <Form.Group controlId=\"name\">\r\n            <Form.Label>Tên người dùng</Form.Label>\r\n            <Form.Control\r\n              type=\"name\"\r\n              placeholder=\"Nhập tên người dùng\"\r\n              value={name}\r\n              onChange={(e) => setName(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"email\">\r\n            <Form.Label>Địa chỉ Email</Form.Label>\r\n            <Form.Control\r\n              type=\"email\"\r\n              placeholder=\"Nhập email\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"password\">\r\n            <Form.Label>Nhập mật khẩu mới</Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              placeholder=\"Nhập mật khẩu\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"confirmPassword\">\r\n            <Form.Label>Xác nhận mật khẩu</Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              placeholder=\"Xác nhận mật khẩu\"\r\n              value={confirmPassword}\r\n              onChange={(e) => setConfirmPassword(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Button type=\"submit\" variant=\"primary\">\r\n            Cập nhật\r\n          </Button>\r\n        </Form>\r\n      </Col>\r\n      <Col md={9}>\r\n        <h2>Đơn hàng đã đặt</h2>\r\n        {loadingOrders ? <Loader/> : errorOrders ? <Message variant='danger'>{errorOrders}</Message> : (\r\n          <Table striped bordered hover responsive className='table-sm'>\r\n            <thead>\r\n              <tr>\r\n                <th>ID</th>\r\n                <th>TOTAL</th>\r\n                <th>PAID</th>\r\n                <th>DELIVERED</th>\r\n                <th></th>\r\n                <th></th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {orders.map(order => (\r\n                <tr key={order._id}>\r\n                  <td>{order._id}</td>\r\n                  <td>{order.totalPrice}</td>\r\n                  <td>{order.isPaid ? <i className='fas fa-check' style={{color: 'green'}}></i>: (\r\n                    <i className='fas fa-times' style={{color: 'red'}}></i>\r\n                  )}</td>\r\n                  <td>{order.status==\"Đã giao hàng\" ?<i className='fas fa-check' style={{color: 'green'}}></i> : (\r\n                    <i className='fas fa-times' style={{color: 'red'}}></i>\r\n                  )}</td>\r\n                  <td>\r\n                    <LinkContainer to={`/order/${order._id}`}>\r\n                      <Button type='button' variant='light' style={{color: 'gray'},{width:'50%'}}>Details</Button>\r\n                    </LinkContainer>\r\n                  </td>\r\n                  <td>\r\n                    {!order.isPaid?\r\n                    <Button type='button' variant='light' style={{color: 'gray'},{width:'100%'}}>Chưa thanh toán</Button>:\r\n                    order.status === \"Chưa xác nhận\"?\r\n                    <Button type='button'  style={{color: 'green'},{width:'100%'}} >Chưa được xác nhận</Button>:\r\n                    !(order.status === \"Đã giao hàng\")?\r\n                    <Button type='button'  style={{color: 'green'},{width:'100%'}} onClick={() => confirmHandler(order._id)}>Đã nhận hàng</Button>:\r\n                    <Button type='button' variant='light' style={{color: 'blue'},{width:'100%'}} >Đã nhận hàng</Button>\r\n                    }\r\n                    \r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        )}\r\n      </Col>\r\n    </Row>\r\n  )\r\n}\r\n\r\nexport default ProfileScreen;\r\n","D:\\ĐẠI HỌC\\HK211\\Công nghệ phần mềm\\BTL\\App\\BQ\\frontend\\src\\screens\\HomeScreen.js",["250","251","252"],"import React, { useEffect } from \"react\";\r\nimport \"./HomeScreenStyle.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Product from \"../components/Product\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport Footer from \"../components/Footer\";\r\nimport { Row, Col } from \"react-bootstrap\";\r\nimport Advertisement from \"../components/Advertisement\";\r\nimport Category from \"../components/Category\";\r\nimport { listProducts } from \"../actions/productActions\";\r\n\r\nconst HomeScreen = ({ match }) => {\r\n  const keyword = match.params.keyword\r\n  const dispatch = useDispatch();\r\n\r\n  const productList = useSelector((state) => state.productList || {});\r\n\r\n  const { loading, error, products } = productList;\r\n  \r\n  useEffect(() => {\r\n    dispatch(listProducts(keyword));\r\n  }, [dispatch, keyword]);\r\n\r\n  return (\r\n    <>\r\n      <Advertisement />\r\n      <Category />\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant=\"danger\">{error}</Message>\r\n      ) : (\r\n        <div id=\"food-list\">\r\n          {products.map((product) => (\r\n            <div key={product._id}>\r\n              <Product product={product} />\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HomeScreen;\r\n","D:\\ĐẠI HỌC\\HK211\\Công nghệ phần mềm\\BTL\\App\\BQ\\frontend\\src\\screens\\ProductScreen.js",["253","254"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  Image,\r\n  ListGroup,\r\n  Card,\r\n  Button,\r\n  Form,\r\n} from \"react-bootstrap\";\r\nimport Rating from \"../components/Rating\";\r\nimport {\r\n  listProductDetails,\r\n  createProductReview,\r\n} from \"../actions/productActions\";\r\nimport Loader from \"../components/Loader\";\r\nimport Message from \"../components/Message\";\r\n\r\nimport { PRODUCT_CREATE_REVIEW_RESET } from \"../constants/productConstants\";\r\n\r\nconst ProductScreen = ({ history, match }) => {\r\n  const [qty, setQty] = useState(1);\r\n  const [rating, setRating] = useState(0);\r\n  const [comment, setComment] = useState(\"\");\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const productDetails = useSelector((state) => state.productDetails);\r\n  const { loading, error, product } = productDetails;\r\n  \r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const productReviewCreate = useSelector((state) => state.productReviewCreate);\r\n  const { success: successProductReview, error: errorProductReview } =\r\n    productReviewCreate;\r\n\r\n  useEffect(() => {\r\n    dispatch(listProductDetails(match.params.id));\r\n  }, [dispatch, match]);\r\n\r\n  const addToCartHandler = () => {\r\n    history.push(`/cart/${match.params.id}?qty=${qty}`);\r\n  };\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    dispatch(createProductReview(match.params.id,{\r\n      rating,\r\n      comment\r\n    }))\r\n  }\r\n  return (\r\n    <>\r\n      <Link className=\"btn btn-dark my-3\" to=\"/\">\r\n        Go Back\r\n      </Link>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant=\"danger\">{error}</Message>\r\n        ) : (\r\n            <>\r\n        <Row>\r\n          <Col md={6}>\r\n            <Image src={product.image} alt={product.name} fluid />\r\n          </Col>\r\n          <Col md={3}>\r\n            <ListGroup variant=\"flush\">\r\n              <ListGroup.Item>\r\n                <h3>{product.name}</h3>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Rating\r\n                  value={product.rating}\r\n                  text={`${product.numReviews} reviews`}\r\n                />\r\n              </ListGroup.Item>\r\n              <ListGroup.Item> Price: {product.price} VND </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                {\" \"}\r\n                Description: {product.description}{\" \"}\r\n              </ListGroup.Item>\r\n            </ListGroup>\r\n          </Col>\r\n          <Col md={3}>\r\n            <Card>\r\n              <ListGroup variant=\"fush\">\r\n                <ListGroup.Item>\r\n                  <Row>\r\n                    <Col>Price: </Col>\r\n                    <Col>\r\n                      <strong>{product.price}VND</strong>\r\n                    </Col>\r\n                  </Row>\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                  <Row>\r\n                    <Col>Status: </Col>\r\n                    <Col>\r\n                      {product.countInStock > 0 ? \"In Stock\" : \"Out Of Stock\"}\r\n                    </Col>\r\n                  </Row>\r\n                </ListGroup.Item>\r\n\r\n                {product.countInStock > 0 && (\r\n                  <ListGroup.Item>\r\n                    <Row>\r\n                      <Col>Qty</Col>\r\n                      <Col>\r\n                        <Form.Control\r\n                          as=\"select\"\r\n                          value={qty}\r\n                          onChange={(e) => setQty(e.target.value)}\r\n                        >\r\n                          {[...Array(product.countInStock).keys()].map((x) => (\r\n                            <option key={x + 1} value={x + 1}>\r\n                              {x + 1}\r\n                            </option>\r\n                          ))}\r\n                        </Form.Control>\r\n                      </Col>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n                )}\r\n\r\n                <ListGroup.Item>\r\n                  <Button\r\n                    onClick={addToCartHandler}\r\n                    className=\"btn-block\"\r\n                    type=\"button\"\r\n                    disabled={product.countInStock === 0}\r\n                  >\r\n                    ADD TO CART\r\n                  </Button>\r\n                </ListGroup.Item>\r\n              </ListGroup>\r\n            </Card>\r\n          </Col>\r\n            </Row>\r\n                      <Row>\r\n            <Col md={6}>\r\n              <h2>Reviews</h2>\r\n             \r\n              {product.reviews.length === 0 && <Message>No reviews</Message>}\r\n              <ListGroup variant=\"flush\">\r\n                {product.reviews.map((review) => (\r\n                  <ListGroup.Item key={review._id}>\r\n                    <strong>{review.name}</strong>\r\n                    <Rating value={review.rating} />\r\n                    <p>{review.createdAt.substring(0, 10)}</p>\r\n                    <p>{review.comment}</p>\r\n                  </ListGroup.Item>\r\n                ))}\r\n                <ListGroup.Item>\r\n                  <h2> Write a Customer Review</h2>\r\n                  {errorProductReview && <Message variant = 'danger'>{errorProductReview}</Message>}\r\n                  {userInfo ? (\r\n                    <Form onSubmit={submitHandler}>\r\n                    <Form.Group controlId = 'rating'>\r\n                      <Form.Label>Rating</Form.Label>\r\n                      <Form.Control as='select' value = {rating} onChange={(e)=>setRating(e.target.value)}>\r\n                      <option value = ''>Select...</option>\r\n                      <option value = '1'>1-</option>\r\n                      <option value = '2'>2-</option>\r\n                      <option value = '3'>3-</option>\r\n                      <option value = '4'>4-</option>\r\n                      <option value = '5'>5-</option>\r\n                      </Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group controlId = 'comment'>\r\n                    <Form.Label>Comment</Form.Label>\r\n                    <Form.Control \r\n                    as = 'textarea'\r\n                    row = '3'\r\n                    value = {comment}\r\n                    onChange={(e) =>setComment(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                    <Button type = 'submit' variant = 'primary'>Submit</Button>\r\n                    </Form.Group>\r\n\r\n                    </Form>\r\n                  ) : (\r\n                    <Message>\r\n                      Please <Link to=\"/login\">Sign In </Link> to write a review{' '}\r\n                    </Message>\r\n                  )}\r\n                </ListGroup.Item>\r\n              </ListGroup>\r\n            </Col>\r\n          </Row>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductScreen;\r\n","D:\\ĐẠI HỌC\\HK211\\Công nghệ phần mềm\\BTL\\App\\BQ\\frontend\\src\\screens\\RegisterScreen.js",[],"D:\\ĐẠI HỌC\\HK211\\Công nghệ phần mềm\\BTL\\App\\BQ\\frontend\\src\\screens\\LoginScreen.js",["255","256","257","258","259","260"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Form, Button, Row, Col } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport { getUserDetails, login } from \"../actions/userActions\";\r\nimport { listMyCart, updateAllCart } from \"../actions/cartActions\";\r\nimport { listMyOrders } from \"../actions/orderActions\";\r\nimport { cartItemsFromStorage} from \"../store\";\r\nimport store from \"../store\";\r\n\r\nconst LoginScreen = ({ location, history }) => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { loading, error, userInfo } = userLogin;\r\n\r\n  const userDetails = useSelector((state) => state.userDetails);\r\n  const {  user } = userDetails;\r\n \r\n\r\n  const redirect = location.search ? location.search.split(\"=\")[1] : \"/\";\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      if(!loading){\r\n        dispatch(listMyCart())\r\n      }\r\n      if(userInfo.isAdmin){\r\n        history.push('/admin/brand')\r\n      }\r\n      else if (userInfo.isClerk){\r\n        history.push('/clerk')\r\n      }\r\n      else{\r\n         history.push(redirect);\r\n      }\r\n    }\r\n    \r\n  }, [dispatch, history, userInfo, redirect, user ]);\r\n\r\n  \r\n\r\n \r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(login(email, password));\r\n  };\r\n\r\n  return (\r\n    <FormContainer>\r\n      <h1> Sign In </h1>\r\n      {error && <Message variant=\"danger\">{error} </Message>}\r\n      {loading && <Loader />}\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group controlId=\"email\">\r\n          <Form.Label> Email Address </Form.Label>\r\n          <Form.Control\r\n            type=\"email\"\r\n            placeholder=\"Enter email\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"password\">\r\n          <Form.Label> Password Address </Form.Label>\r\n          <Form.Control\r\n            type=\"password\"\r\n            placeholder=\"Enter password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Button type=\"submit\" variant=\"primary\">\r\n          Sign In\r\n        </Button>\r\n      </Form>\r\n\r\n      <Row className=\"py\">\r\n        <Col>\r\n          New Customer ?{\" \"}\r\n          <Link\r\n            to={redirect ? `/register?redirect=${redirect}` : \"/register\"}\r\n          >\r\n            Register\r\n          </Link>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n      <Col>\r\n        Forgot password?{\" \"}\r\n        <Link to={`/forgotpass`}>\r\n          Reset it\r\n        </Link>\r\n        </Col>\r\n      </Row>\r\n    </FormContainer>\r\n  );\r\n};\r\n\r\nexport default LoginScreen;\r\n","D:\\ĐẠI HỌC\\HK211\\Công nghệ phần mềm\\BTL\\App\\BQ\\frontend\\src\\screens\\CartScreen.js",[],"D:\\ĐẠI HỌC\\HK211\\Công nghệ phần mềm\\BTL\\App\\BQ\\frontend\\src\\screens\\PaymentScreen.js",[],"D:\\ĐẠI HỌC\\HK211\\Công nghệ phần mềm\\BTL\\App\\BQ\\frontend\\src\\screens\\ShippingScreen.js",["261"],"import React, { useState } from 'react'\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport CheckoutSteps from '../components/CheckoutSteps';\r\nimport { saveShippingAddress } from '../actions/cartActions';\r\n\r\n\r\n\r\nconst ShippingScreen = ({ history }) => {\r\n    const cart = useSelector(state => state.cart)\r\n    const { shippingAddress} = cart\r\n\r\n    const [address, setAddress] = useState(shippingAddress.address)\r\n    const [city, setCity] = useState(shippingAddress.city)\r\n    const [postalCode, setPostalCode] = useState(shippingAddress.postalCode)\r\n    const [country, setCountry] = useState(shippingAddress.country)\r\n     \r\n    const dispatch = useDispatch()\r\n    const submitHandler = (e) => {\r\n      e.preventDefault()\r\n      dispatch(saveShippingAddress({ address, city, postalCode, country }))\r\n      history.push('/payment')\r\n    }\r\n\r\n    return (\r\n    <FormContainer>\r\n      <CheckoutSteps step1 step2/>\r\n        <h1>Shipping</h1>\r\n        <Form onSubmit={submitHandler}>\r\n        <Form.Group controlId=\"address\">\r\n          <Form.Label>Địa chỉ</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Nhập địa chỉ\"\r\n            value={address}\r\n            onChange={(e) => setAddress(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"city\">\r\n          <Form.Label>Thành phố</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Nhập thành phố\"\r\n            value={city}\r\n            onChange={(e) => setCity(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n        <h1>On The Spot</h1>\r\n        <Form.Group controlId=\"country\">\r\n          <Form.Label>Bàn</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Nhập quốc gia\"\r\n            value={country}\r\n            onChange={(e) => setCountry(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n\r\n\r\n        <Button type='submit' variant='primary'>\r\n          Continue\r\n        </Button>\r\n        \r\n        </Form>\r\n    </FormContainer>\r\n    \r\n    )}\r\n\r\nexport default ShippingScreen","D:\\ĐẠI HỌC\\HK211\\Công nghệ phần mềm\\BTL\\App\\BQ\\frontend\\src\\screens\\PlaceOrderScreen.js",[],"D:\\ĐẠI HỌC\\HK211\\Công nghệ phần mềm\\BTL\\App\\BQ\\frontend\\src\\components\\Header.js",["262","263"],"import React from \"react\";\r\nimport {Route} from 'react-router-dom'\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { Navbar, Nav, NavDropdown } from \"react-bootstrap\";\r\nimport SearchBox from \"./SearchBox\";\r\nimport { logout } from \"../actions/userActions\";\r\nimport { updateCart, removeAllCart } from \"../actions/cartActions\";\r\nimport \"./MyStyle.css\";\r\n\r\n\r\nfunction Header () {\r\n  const dispatch = useDispatch()\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n  const cart = useSelector((state) => state.cart)\r\n  const { cartItems} = cart\r\n\r\n  const logoutHandler = () => {\r\n    console.log(cartItems)\r\n    dispatch(updateCart(cartItems));\r\n    dispatch(removeAllCart());\r\n    dispatch(logout());\r\n  };\r\n\r\n  return (\r\n    <div className=\"header\">\r\n      <Link to=\"/\">\r\n        <img src=\"images/logo.png\" alt=\"logo\" className=\"logo\" />\r\n\r\n      </Link>\r\n      {/*<input type=\"text\" className=\"search-bar\" placeholder=\"Search\" />*/}\r\n      <Route render={({history}) => <SearchBox history={history}/>} />\r\n      <div className=\"space\"></div>\r\n      <Link to=\"/datban\">\r\n        <p className=\"datban\">Đặt bàn</p>\r\n      </Link>\r\n      <div className=\"cart-info\">\r\n        \r\n        <Link to=\"/cart\">\r\n          <img src=\"images/cart.png\" alt=\"\" className=\"cart\" />\r\n        </Link>\r\n      </div>\r\n      {userInfo ? (\r\n        <>\r\n        <NavDropdown title={userInfo.name} id=\"username\" >\r\n         \r\n          <NavDropdown.Item>{userInfo.name}</NavDropdown.Item>\r\n          <LinkContainer to=\"/profile\">\r\n            <NavDropdown.Item>Profile</NavDropdown.Item>\r\n          </LinkContainer>\r\n          <NavDropdown.Item onClick={logoutHandler}> Logout </NavDropdown.Item>\r\n          </NavDropdown>\r\n          </>\r\n      ) : (\r\n        <Link to=\"/login\">\r\n          <p className=\"login\">Login</p>\r\n        </Link>\r\n      )}\r\n\r\n      <img className=\"bar\" src=\"images/bar.png\" alt=\"bar\" />\r\n    </div>\r\n  );\r\n}\r\nexport default Header;","D:\\ĐẠI HỌC\\HK211\\Công nghệ phần mềm\\BTL\\App\\BQ\\frontend\\src\\screens\\OrderScreen.js",["264"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { PayPalButton } from 'react-paypal-button-v2'\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button, Row, Col, ListGroup, Image, Card } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport { getOrderDetails, payOrder } from \"../actions/orderActions\";\r\nimport { ORDER_PAY_RESET } from \"../constants/orderConstants\";\r\n\r\nconst OrderScreen = ({ match }) => {\r\n  const orderId = match.params.id;\r\n\r\n  const [sdkReady, setSdkReady] = useState(false)\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const orderDetails = useSelector((state) => state.orderDetails);\r\n  const { order, loading, error } = orderDetails;\r\n\r\n  const orderPay = useSelector((state) => state.orderPay);\r\n  const { loading:loadingPay, success:successPay } = orderPay;\r\n\r\n  console.log(\"order\",order);\r\n\r\n  if (!loading) {\r\n    //Calculate prices\r\n    const addDecimals = (num) => {\r\n      return (Math.round(num * 100) / 100).toFixed(0);\r\n    };\r\n    order.itemsPrice = addDecimals(\r\n      order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0)\r\n    );\r\n  }\r\n\r\n  useEffect(() => {\r\n    const addPayPalScript = async () => {\r\n      const { data: clientId } = await axios.get('/api/config/paypal')\r\n      const script = document.createElement('script')\r\n      script.type = 'text/javascript'\r\n      script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`\r\n      script.async = true\r\n      script.onload = () => {\r\n        setSdkReady(true)\r\n      }\r\n      document.body.appendChild(script)\r\n    }\r\n\r\n    if(!order || successPay){\r\n      dispatch({ type: ORDER_PAY_RESET })\r\n      dispatch(getOrderDetails(orderId));\r\n    } else if(!order.isPay){\r\n      if(!window.paypal){\r\n        addPayPalScript()\r\n      } else {\r\n        setSdkReady(true)\r\n      }\r\n    }\r\n  \r\n  }, [dispatch,orderId,successPay,order]);\r\n\r\n  const successPaymentHandler = (paymentResult) => {\r\n    console.log(paymentResult)\r\n    dispatch(payOrder(orderId, paymentResult))\r\n  }\r\n\r\n  return loading ? (\r\n    <Loader />\r\n  ) : error ? (\r\n    <Message variant=\"danger\">{error}</Message>\r\n  ) : (\r\n    <>\r\n      <h1>Order {order._id}</h1>\r\n      <Row>\r\n        <Col md={8}>\r\n          <ListGroup variant=\"flush\">\r\n            <ListGroup.Item>\r\n              <h2> Hóa đơn </h2>\r\n              <p>\r\n                <strong>Name: </strong> {order.user.name}\r\n              </p>\r\n              <p>\r\n                <strong>Email: </strong> <a href={`mailto:${order.user.email}`}>{order.user.email}</a>\r\n              </p>\r\n              <p>\r\n                <strong>Địa chỉ: </strong>\r\n                {order.shippingAddress.address},{order.shippingAddress.city} ,\r\n                {order.shippingAddress.postalCode},{\" \"}\r\n                {order.shippingAddress.country}\r\n              </p>\r\n              {order.isDelivered?(\r\n                  <Message variant = 'success'>Delivered on {order.deliveredAt}</Message>\r\n              ):(\r\n                  <Message variant = 'danger'>Not Delivered</Message>\r\n              )}\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2> Hình thức thanh toán</h2>\r\n              <p>\r\n              <strong>Hình thức: </strong>\r\n              {order.paymentMethod}\r\n              </p>\r\n              {order.isPaid?(\r\n                  <Message variant = 'success'>Paid on {order.paidAt}</Message>\r\n              ):(\r\n                  <Message variant = 'danger'>Not Paid</Message>\r\n              )}\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Sản phẩm mua</h2>\r\n              {order.orderItems.length === 0 ? (\r\n                <Message>Order is empty</Message>\r\n              ) : (\r\n                <ListGroup variant=\"flush\">\r\n                  {order.orderItems.map((item, index) => (\r\n                    <ListGroup.Item key={index}>\r\n                      <Row>\r\n                        <Col md={1}>\r\n                          <Image\r\n                            src={item.image}\r\n                            alt={item.name}\r\n                            fluid\r\n                            rounded\r\n                          />\r\n                        </Col>\r\n                        <Col>\r\n                          <Link to={`/product/${item.product}`}>\r\n                            {item.name}\r\n                          </Link>\r\n                        </Col>\r\n\r\n                        <Col md={4}>\r\n                          {item.qty} x{item.price} VND = {item.qty * item.price}{\" \"}\r\n                          VND\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  ))}\r\n                </ListGroup>\r\n              )}\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n        <Col md={4}>\r\n          <Card>\r\n            <ListGroup variant=\"flush\">\r\n              <ListGroup.Item>\r\n                <h2>Order Summary</h2>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col> Items </Col>\r\n                  <Col>{order.itemsPrice} VND</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col> Shipping </Col>\r\n                  <Col>{order.shippingPrice} VND</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Total</Col>\r\n                  <Col>{order.totalPrice} VND</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              {!order.isPaid && (\r\n                <ListGroup.Item>\r\n                  {loadingPay && <Loader/> }\r\n                  {!sdkReady ? <Loader/> : (\r\n                    <PayPalButton amount={order.totalPrice}\r\n                    onSuccess={successPaymentHandler}/>\r\n                  )}\r\n                </ListGroup.Item>\r\n              )}\r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default OrderScreen;","D:\\ĐẠI HỌC\\HK211\\Công nghệ phần mềm\\BTL\\App\\BQ\\frontend\\src\\components\\Footer.js",[],"D:\\ĐẠI HỌC\\HK211\\Công nghệ phần mềm\\BTL\\App\\BQ\\frontend\\src\\components\\getListProductOfBrand.js",["265","266","267"],"import React, { useEffect } from 'react'\r\nimport { Row, Col } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { listProductsOfBrand } from '../actions/brandActions'\r\nimport Product from './Product';\r\n\r\nfunction Hello({match}) {\r\n    const dispatch = useDispatch()\r\n    const productListOfBrand = useSelector(state => state.productListOfBrand)\r\n    const { loading, error, ProductsOfBrand } = productListOfBrand     //Now list is in listProductOfBrand\r\n    useEffect(() => {\r\n        dispatch(listProductsOfBrand(match.params.pathName))\r\n    }, [dispatch])\r\n    console.log(ProductsOfBrand)\r\n    return (\r\n        <div>\r\n        <Row>\r\n          {(ProductsOfBrand).map((product) => (\r\n            <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\r\n              <Product product={product} />\r\n            </Col>\r\n          ))}\r\n        </Row>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Hello\r\n","D:\\ĐẠI HỌC\\HK211\\Công nghệ phần mềm\\BTL\\App\\BQ\\frontend\\src\\components\\getListProductByCategoryOfBrand.js",["268","269","270"],"import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { listProductsOfCate } from '../actions/brandActions'\r\nimport { Row, Col } from \"react-bootstrap\";\r\nimport Product from './Product';\r\nfunction AfterPickCategory({ match }) {\r\n    const dispatch = useDispatch()\r\n    const productsListOfCate = useSelector(state => state.productsListOfCate)\r\n    const { loading, error, productsOfCate } = productsListOfCate     \r\n    useEffect(() => {\r\n        dispatch(listProductsOfCate(match.params.pathName, match.params.catePathName))\r\n    }, [dispatch])\r\n    return (\r\n        <div>\r\n        <Row>\r\n          { productsOfCate &&\r\n          productsOfCate.map((product) => (\r\n            <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\r\n              <Product product={product} />\r\n            </Col>\r\n          ))}\r\n        </Row>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AfterPickCategory\r\n","D:\\ĐẠI HỌC\\HK211\\Công nghệ phần mềm\\BTL\\App\\BQ\\frontend\\src\\components\\Message.js",[],"D:\\ĐẠI HỌC\\HK211\\Công nghệ phần mềm\\BTL\\App\\BQ\\frontend\\src\\components\\Loader.js",[],"D:\\ĐẠI HỌC\\HK211\\Công nghệ phần mềm\\BTL\\App\\BQ\\frontend\\src\\components\\Product.js",["271","272"],"import React from \"react\";\r\nimport {Link} from 'react-router-dom'\r\nimport { Card } from \"react-bootstrap\";\r\nimport Rating from './Rating'\r\nimport \"./MyStyle.css\"\r\n\r\nconst Product = ({ product }) => {\r\n  return (\r\n    <>\r\n      <Link to={`/product/${product._id}`}>\r\n        <img className=\"product-image\" src={product.image} variant=\"top\" />\r\n      </Link>\r\n        <Link to = {`/product/${product._id}`}>\r\n          <div className=\"product-name\">\r\n            <strong>{product.name}</strong>\r\n          </div>\r\n        </Link>\r\n        <div>\r\n          <Rating value = {product.rating}\r\n          text = {`${product.numReviews} reviews`}/>\r\n        </div>\r\n      <div className=\"product-price\">{product.price/1000}.000 VND </div>\r\n      </>\r\n  );\r\n};\r\n\r\nexport default Product;","D:\\ĐẠI HỌC\\HK211\\Công nghệ phần mềm\\BTL\\App\\BQ\\frontend\\src\\components\\Advertisement.js",[],"D:\\ĐẠI HỌC\\HK211\\Công nghệ phần mềm\\BTL\\App\\BQ\\frontend\\src\\components\\Category.js",["273","274","275","276","277","278","279","280","281"],"import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Card, CardGroup, Container, Row, Col } from \"react-bootstrap\";\r\n\r\nconst Category = () => {\r\n  return (\r\n    <div className=\"content\">\r\n      <div className=\"prefer\">\r\n        <p>Bạn thích gì nèo :3</p>\r\n\r\n        <div className=\"select-prefer-foods\">\r\n          <div className=\"select-prefer-food\">\r\n            <Link to={``}>\r\n              <img src=\"/images/cate_favourite.png \" />\r\n            </Link>\r\n\r\n            <Link to={``}>\r\n              <p>Best seller</p>\r\n            </Link>\r\n          </div>\r\n          <div className=\"select-prefer-food\">\r\n            <Link to={``}>\r\n              <img src=\"/images/cg_coffee_web.png \" />\r\n            </Link>\r\n\r\n            <Link to={``}>\r\n              <p>Cà phê</p>\r\n            </Link>\r\n          </div>\r\n          <div className=\"select-prefer-food\">\r\n            <Link to={``}>\r\n              <img src=\"/images/cg_frappu_web.png\" />\r\n            </Link>\r\n\r\n            <Link to={``}>\r\n              <p>Trà/Trà sữa</p>\r\n            </Link>\r\n          </div>\r\n          <div className=\"select-prefer-food\">\r\n            <Link to={``}>\r\n              <img src=\"/images/cg_tea_milk_tea_web.png \" />\r\n            </Link>\r\n\r\n            <Link to={``}>\r\n              <p>Đá xay</p>\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Category;\r\n","D:\\ĐẠI HỌC\\HK211\\Công nghệ phần mềm\\BTL\\App\\BQ\\frontend\\src\\components\\Rating.js",[],"D:\\ĐẠI HỌC\\HK211\\Công nghệ phần mềm\\BTL\\App\\BQ\\frontend\\src\\components\\FormContainer.js",[],"D:\\ĐẠI HỌC\\HK211\\Công nghệ phần mềm\\BTL\\App\\BQ\\frontend\\src\\components\\SearchBox.js",[],"D:\\ĐẠI HỌC\\HK211\\Công nghệ phần mềm\\BTL\\App\\BQ\\frontend\\src\\components\\CheckoutSteps.js",[],"D:\\ĐẠI HỌC\\HK211\\Công nghệ phần mềm\\BTL\\App\\BQ\\frontend\\src\\constants\\brandConstants.js",[],"D:\\ĐẠI HỌC\\HK211\\Công nghệ phần mềm\\BTL\\App\\BQ\\frontend\\src\\constants\\orderConstants.js",[],"D:\\ĐẠI HỌC\\HK211\\Công nghệ phần mềm\\BTL\\App\\BQ\\frontend\\src\\constants\\cartConstant.js",[],"D:\\ĐẠI HỌC\\HK211\\Công nghệ phần mềm\\BTL\\App\\BQ\\frontend\\src\\constants\\userConstants.js",[],"D:\\ĐẠI HỌC\\HK211\\Công nghệ phần mềm\\BTL\\App\\BQ\\frontend\\src\\constants\\productConstants.js",[],"D:\\ĐẠI HỌC\\HK211\\Công nghệ phần mềm\\BTL\\App\\BQ\\frontend\\src\\actions\\userActions.js",["282"],"import {\r\n  USER_LOGIN_REQUEST, \r\n  USER_LOGIN_SUCCESS, \r\n  USER_LOGIN_FAIL, \r\n  USER_LOGOUT,\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_REGISTER_FAIL,\r\n  USER_DETAILS_REQUEST,\r\n  USER_DETAILS_SUCCESS,\r\n  USER_DETAILS_FAIL,\r\n  USER_DETAILS_RESET,\r\n  USER_UPDATE_PROFILE_REQUEST,\r\n  USER_UPDATE_PROFILE_SUCCESS,\r\n  USER_UPDATE_PROFILE_FAIL,\r\n  RESET_PASS_REQUEST,\r\n  RESET_PASS_SUCCESS,\r\n  RESET_PASS_FAIL,\r\n\r\n} from \"../constants/userConstants\"\r\nimport { ORDER_LIST_MY_RESET, ORDER_PAY_RESET } from \"../constants/orderConstants\"\r\nimport axios from 'axios'\r\nimport { CART_UPDATE_REQUEST } from \"../constants/cartConstant\"\r\n\r\n\r\nexport const login = (email, password) => async(dispatch) => {\r\n    try{\r\n        dispatch({\r\n            type: USER_LOGIN_REQUEST\r\n        })\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n        const {data} = await axios.post('/api/users/login', {email, password}, config)\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n\r\n\r\n        })\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n    \r\n    }\r\n\r\n    catch(error) {\r\n        dispatch({\r\n      type: USER_LOGIN_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n    }\r\n}\r\n\r\nexport const logout = () =>(dispatch) => {\r\n    localStorage.removeItem('userInfo')\r\n    dispatch({type: USER_LOGOUT})\r\n    dispatch({type: USER_DETAILS_RESET})\r\n    dispatch({type: ORDER_LIST_MY_RESET})\r\n    dispatch({type: ORDER_PAY_RESET})\r\n}\r\n\r\n\r\nexport const register = (name,userName, email, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_REGISTER_REQUEST,\r\n    });\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.post(\r\n      \"/api/users\",\r\n      { name, userName,email, password },\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: USER_REGISTER_SUCCESS,\r\n      payload: data,\r\n    });\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_REGISTER_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_DETAILS_REQUEST,\r\n    });\r\n    \r\n    const userInfo = getState().userLogin.userInfo; \r\n    const config = {\r\n      \r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n    \r\n    const { data } = await axios.get(`/api/users/${id}`, config);\r\n   \r\n    dispatch({\r\n      type: USER_DETAILS_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_DETAILS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_REQUEST,\r\n    });\r\n    const userInfo=getState().userLogin.userInfo;\r\n   \r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.put(`/api/users/profile`, user, config);\r\n\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\n\r\nexport const resetNewPass = (inform) => async (dispatch) => {\r\n  try {\r\n      dispatch({\r\n          type: RESET_PASS_REQUEST,\r\n      });\r\n\r\n      const config = {\r\n          headers: {\r\n              \"Content-type\": \"application/json\",\r\n          }\r\n      }\r\n      const { data } = await axios.put(`/api/users/reset`, inform, config);\r\n\r\n      dispatch({\r\n          type: RESET_PASS_SUCCESS,\r\n          payload: data,\r\n      });\r\n  } catch (error) {\r\n      dispatch({\r\n          type: RESET_PASS_FAIL,\r\n          payload:\r\n              error.response && error.response.data.message\r\n                  ? error.response.data.message\r\n                  : error.message,\r\n      });\r\n  }\r\n};","D:\\ĐẠI HỌC\\HK211\\Công nghệ phần mềm\\BTL\\App\\BQ\\frontend\\src\\actions\\cartActions.js",[],"D:\\ĐẠI HỌC\\HK211\\Công nghệ phần mềm\\BTL\\App\\BQ\\frontend\\src\\actions\\orderActions.js",["283"],"import axios from 'axios'\r\nimport { \r\n    ORDER_CREATE_REQUEST,\r\n    ORDER_CREATE_SUCCESS,\r\n    ORDER_CREATE_FAIL, \r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_SUCCESS,\r\n    ORDER_DETAILS_FAIL,\r\n    ORDER_PAY_REQUEST,\r\n    ORDER_PAY_SUCCESS,\r\n    ORDER_PAY_FAIL,\r\n    ORDER_PAY_RESET,\r\n    ORDER_LIST_MY_REQUEST,\r\n    ORDER_LIST_MY_SUCCESS,\r\n    ORDER_LIST_MY_FAIL,\r\n    GET_ALL_ORDER_REQUEST,\r\n    GET_ALL_ORDER_SUCCESS,\r\n    GET_ALL_ORDER_FAIL,\r\n    UPDATE_ORDER_REQUEST,\r\n    UPDATE_ORDER_SUCCESS,\r\n    UPDATE_ORDER_FAIL,\r\n} from '../constants/orderConstants';\r\n\r\n\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n    try {\r\n      dispatch({\r\n        type: ORDER_CREATE_REQUEST,\r\n      });\r\n\r\n      const {\r\n        userLogin: {userInfo},\r\n      } = getState()\r\n    //   const userInfo=getState().userLogin.userInfo;\r\n     \r\n  \r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      };\r\n  \r\n      const { data } = await axios.post(`/api/orders`, order, config);\r\n  \r\n      dispatch({\r\n        type: ORDER_CREATE_SUCCESS,\r\n        payload: data,\r\n      });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: ORDER_CREATE_FAIL,\r\n        payload:\r\n          error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n      });\r\n    }\r\n  };\r\n\r\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_DETAILS_REQUEST,\r\n    });\r\n\r\n    const userInfo = getState().userLogin.userInfo;\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(`/api/orders/${id}`, config);\r\n    console.log(\"data\",data);\r\n    dispatch({\r\n      type: ORDER_DETAILS_SUCCESS,\r\n      payload: data,\r\n    });\r\n    \r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_DETAILS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const payOrder = (orderId, paymentResult) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_PAY_REQUEST,\r\n    });\r\n\r\n    const userInfo = getState().userLogin.userInfo;\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.put(`/api/orders/${orderId}/pay`,paymentResult, config);\r\n\r\n    dispatch({\r\n      type: ORDER_PAY_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_PAY_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const listMyOrders = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_LIST_MY_REQUEST,\r\n    });\r\n\r\n    const userInfo = getState().userLogin.userInfo;\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(`/api/orders/myorders`,config );\r\n\r\n    dispatch({\r\n      type: ORDER_LIST_MY_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_LIST_MY_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getOrderList = () => async (dispatch, getState) => {\r\n try {\r\n  dispatch({\r\n    type: GET_ALL_ORDER_REQUEST\r\n  })\r\n  const userInfo = getState().userLogin.userInfo;\r\n  const config = {\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      Authorization: `Bearer ${userInfo.token}`,\r\n    },\r\n  };\r\n  const { data } = await axios.get('/api/orders', config)\r\n  dispatch({\r\n    type: GET_ALL_ORDER_SUCCESS,\r\n    payload: data\r\n  })\r\n } catch (error) {\r\n  dispatch({\r\n    type: GET_ALL_ORDER_FAIL,\r\n    payload:\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message,\r\n  });\r\n } \r\n}\r\n\r\n\r\n\r\nexport const updateOrder = (id,status) => async (dispatch, getState) => {\r\n try {\r\n  dispatch({\r\n    type: UPDATE_ORDER_REQUEST\r\n  })\r\n  const userInfo = getState().userLogin.userInfo;\r\n  const config = {\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      Authorization: `Bearer ${userInfo.token}`,\r\n    },\r\n  };\r\n  await axios.put(`/api/orders/${id}`, {status}, config)\r\n  dispatch({\r\n    type: UPDATE_ORDER_SUCCESS\r\n  })\r\n } catch (error) {\r\n  dispatch({\r\n    type: UPDATE_ORDER_FAIL,\r\n    payload:\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message,\r\n  });\r\n } \r\n}\r\n","D:\\ĐẠI HỌC\\HK211\\Công nghệ phần mềm\\BTL\\App\\BQ\\frontend\\src\\actions\\productActions.js",[],"D:\\ĐẠI HỌC\\HK211\\Công nghệ phần mềm\\BTL\\App\\BQ\\frontend\\src\\actions\\brandActions.js",[],"D:\\ĐẠI HỌC\\HK211\\Công nghệ phần mềm\\BTL\\App\\BQ\\frontend\\src\\components\\ListBrand.js",["284","285"],"import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { listBrands } from '../actions/brandActions'\r\n\r\nfunction ListBrand() {\r\n    const dispatch = useDispatch()\r\n    const brandList = useSelector(state => state.brandList)\r\n    const { loading, error, brands } = brandList\r\n    useEffect(() => {\r\n        dispatch(listBrands())\r\n    }, [dispatch])\r\n    console.log(brands)\r\n    return (\r\n        <div>\r\n            a\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ListBrand\r\n","D:\\ĐẠI HỌC\\HK211\\Công nghệ phần mềm\\BTL\\App\\BQ\\frontend\\src\\components\\ListCategory.js",["286","287","288"],"import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { listCate } from '../actions/brandActions'\r\n\r\nfunction ListCategory({ match }) {\r\n    const dispatch = useDispatch()\r\n    const cateList = useSelector(state => state.cateList)\r\n    const { loading, error, categoryList } = cateList\r\n    useEffect(() => {\r\n        dispatch(listCate(match.params.brandPathName))\r\n    }, [dispatch])\r\n    console.log(categoryList)\r\n    return (\r\n        <div>\r\n            a\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ListCategory\r\n","D:\\ĐẠI HỌC\\HK211\\Công nghệ phần mềm\\BTL\\App\\BQ\\frontend\\src\\screens\\AdminScreen.js",["289","290","291","292","293","294","295","296"],"import React, { useState, useEffect } from \"react\";\r\nimport { Form, Button, Row, Col, Table } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport { getUserDetails} from \"../actions/userActions\";\r\nimport { listBrands, deleteBrand, addNewBrand} from \"../actions/brandActions\";\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst AdminScreen = ({ history }) => {\r\n  \r\n    const dispatch = useDispatch();\r\n  \r\n    const userDetails = useSelector((state) => state.userDetails);\r\n    const { loading, error, user } = userDetails;\r\n  \r\n    const userLogin = useSelector((state) => state.userLogin);\r\n    const { userInfo } = userLogin;\r\n\r\n    const deleteOneBrand = useSelector((state) => state.deleteOneBrand)\r\n    const {success: successDeleteBrand} = deleteOneBrand\r\n\r\n    const addOneBrand = useSelector((state) => state.addOneBrand)\r\n    const {success: successAddBrand} = addOneBrand\r\n\r\n    const brandList = useSelector((state) => state.brandList || {})\r\n    const { loading: loadingBrands, error: errorBrands, brands} = brandList\r\n\r\n    const cateList = useSelector((state) => state.cateList || {})\r\n    const { loading: loadingCates, error: errorCates, categoryList} = cateList\r\n\r\n    \r\n\r\n    useEffect(() => {\r\n      if (!userInfo) {\r\n        history.push(\"/login\");\r\n      }\r\n      else {\r\n        if (!user?.name) {\r\n          dispatch(getUserDetails('profile'));\r\n        }  \r\n        dispatch(listBrands());\r\n\r\n        \r\n        if(successDeleteBrand){\r\n            dispatch(listBrands());\r\n        }\r\n    }\r\n    }, [dispatch, history, userInfo, user, successDeleteBrand, successAddBrand]);\r\n  \r\n\r\n    const removeBrandHandler = (pathName) => {\r\n        console.log(\"delete brand\")\r\n        dispatch(deleteBrand(pathName));\r\n    }\r\n\r\n    \r\n    return(\r\n        loading?<></>:(!user?.isAdmin?<h1>BẠN KHÔNG CÓ QUYỀN TRUY CẬP VÀO TRANG NÀY !!! </h1>:(\r\n        <Row style = {{marginTop:\"100px\"}}>\r\n            <Row>\r\n            {loadingBrands ? <Loader/> : errorBrands ? <Message variant='danger'>{errorBrands}</Message> : (\r\n                <Col>\r\n                    <Row>\r\n                        <Col md={8}>\r\n                            <h2>Brands</h2>\r\n                        </Col>\r\n                        <Col md={2}>\r\n                            <button type=\"button\" className=\"btn btn-success\"><Link to={`/admin/add/brand`}>Add Brand +</Link></button>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col md={10}>\r\n                            <Table striped bordered hover responsive className='table-sm'>\r\n                            <thead>\r\n                                <tr>\r\n                                <th>ID</th>\r\n                                <th>Name Brand</th>\r\n                                <th>\r\n                                \r\n                                </th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {brands.map(brand => (\r\n                                <tr key={brand._id}>\r\n                                    <td>{brand._id}</td>\r\n                                    <td><Link to={`/admin/cate/${brand.pathName}`}>{brand.brandName}</Link></td>\r\n                                    <td>\r\n                                    <Button type='button' variant='light' onClick={() => removeBrandHandler(brand.pathName)}><i className='fas fa-trash'></i></Button>\r\n                                    </td>\r\n                                </tr>\r\n                                ))}\r\n                            </tbody>\r\n                            </Table>\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n                \r\n            )}\r\n            </Row>\r\n        </Row>\r\n        )\r\n    ))}\r\n\r\n\r\n    \r\n  \r\n  export default AdminScreen;\r\n  ","D:\\ĐẠI HỌC\\HK211\\Công nghệ phần mềm\\BTL\\App\\BQ\\frontend\\src\\screens\\AdminProductScreen.js",["297","298","299","300","301","302","303","304","305","306","307","308"],"import React, { useState, useEffect } from \"react\";\r\nimport { Form, Button, Row, Col, Table } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport { getUserDetails} from \"../actions/userActions\";\r\nimport { listBrands, listCate, listProductsOfCate} from \"../actions/brandActions\";\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst AdminScreen = ({ history, match }) => {\r\n  \r\n    const dispatch = useDispatch();\r\n  \r\n    const userDetails = useSelector((state) => state.userDetails);\r\n    const { loading, error, user } = userDetails;\r\n  \r\n    const userLogin = useSelector((state) => state.userLogin);\r\n    const { userInfo } = userLogin;\r\n\r\n    const addOneProduct = useSelector((state) => state.addOneProduct)\r\n    const {success: successAddProduct} = addOneProduct\r\n\r\n    const brandList = useSelector((state) => state.brandList || {})\r\n    const { loading: loadingBrands, error: errorBrands, brands} = brandList\r\n\r\n    const cateList = useSelector((state) => state.cateList || {})\r\n    const { loading: loadingCates, error: errorCates, categoryList} = cateList\r\n\r\n    const productList = useSelector((state => state.productsListOfCate) || {})\r\n    const { loading: loadingProducts, error: errorProducts, productsOfCate} = productList\r\n\r\n    useEffect(() => {\r\n      if (!userInfo) {\r\n        history.push(\"/login\");\r\n      }\r\n      else {\r\n        if (!user?.name) {\r\n          dispatch(getUserDetails('profile'));\r\n         \r\n        }  \r\n        dispatch(listProductsOfCate(match.params.pathname, match.params.catename))\r\n    }\r\n    }, [dispatch,match, history, userInfo, user,successAddProduct]);\r\n  \r\n\r\n    const removeProductHandler = (id) => {\r\n        console.log(\"delete product\")\r\n    }\r\n\r\n\r\n    \r\n    return(\r\n        loading?<></>:(!user?.isAdmin?<h1>BẠN KHÔNG CÓ QUYỀN TRUY CẬP VÀO TRANG NÀY !!! </h1>:(\r\n        <Row style = {{marginTop:\"100px\"}}>\r\n            <Row>\r\n            {loadingProducts ? <Loader/> : errorProducts ? <Message variant='danger'>{errorProducts}</Message> : (\r\n                <Col>\r\n                    <Row>\r\n                        <Col md={2}>\r\n                        <button type=\"button\" class=\"btn btn-success\"><Link to={`/admin/cate/${match.params.pathname}`}>Back </Link></button>\r\n                        </Col>\r\n                        <Col md={8}>\r\n                            <h2>{`Products of Category ${match.params.catename} of Brand ${match.params.pathname}`}</h2>\r\n                        </Col>\r\n                        <Col md={2}>\r\n                            <button type=\"button\" className=\"btn btn-success\"><Link to={`/admin/add/product/${match.params.catename}/${match.params.pathname}`}>Add Product + </Link></button>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col md={10}>\r\n                            <Table striped bordered hover responsive className='table-sm'>\r\n                            <thead>\r\n                                <tr>\r\n                                <th>ID</th>\r\n                                <th>Name Product</th>\r\n                                <th>Price</th>\r\n                                <th>Count In Stock</th>\r\n                                <th>Edit</th>\r\n                                <th>Delete</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {productsOfCate.map(product => (\r\n                                <tr key={product._id}>\r\n                                    <td>{product._id}</td>\r\n                                    <td>{product.name}</td>\r\n                                    <td>{product.price}</td>\r\n                                    <td>{product.countInStock}</td>\r\n                                    <td>\r\n                                    <Button type='button' variant='light' href={`/admin/edit/product/${product._id}/${match.params.pathname}`}><i className='fas fa-edit'></i></Button>\r\n                                    </td>\r\n                                    <td>\r\n                                    <Button type='button' variant='light' onClick={() => removeProductHandler(product._id)}><i className='fas fa-trash'></i></Button>\r\n                                    </td>\r\n                                </tr>\r\n                                ))}\r\n                            </tbody>\r\n                            </Table>\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n                \r\n            )}\r\n            </Row>\r\n        </Row>\r\n        )\r\n    ))}\r\n\r\n\r\n    \r\n  \r\n  export default AdminScreen;\r\n  ","D:\\ĐẠI HỌC\\HK211\\Công nghệ phần mềm\\BTL\\App\\BQ\\frontend\\src\\screens\\AdminBrandScreen.js",["309","310","311","312","313","314","315","316","317"],"import React, { useState, useEffect } from \"react\";\r\nimport { Form, Button, Row, Col, Table } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport { getUserDetails, updateUserProfile } from \"../actions/userActions\";\r\nimport {  listCate, listBrands, deleteCategory } from \"../actions/brandActions\";\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst AdminBrandScreen = ({ history, match }) => {\r\n    \r\n    const dispatch = useDispatch();\r\n\r\n    const userDetails = useSelector((state) => state.userDetails);\r\n    const { loading, error, user } = userDetails;\r\n  \r\n    const userLogin = useSelector((state) => state.userLogin);\r\n    const { userInfo } = userLogin;\r\n\r\n    const brandList = useSelector((state) => state.brandList || {})\r\n    const { loading: loadingBrands, error: errorBrands, brands} = brandList\r\n\r\n    const deleteOneCategory = useSelector((state) => state.deleteOneCategory)\r\n    const {success: successDeleteCate} = deleteOneCategory\r\n\r\n    const addOneCategory = useSelector((state) => state.addOneCategory)\r\n    const {success: successAddCate} = addOneCategory\r\n\r\n\r\n    const cateList = useSelector((state) => state.cateList || {})\r\n    const { loading: loadingCates, error: errorCates, categoryList} = cateList\r\n    console.log(categoryList)\r\n    console.log(match.params.name)\r\n\r\n    useEffect(() => {\r\n      if (!userInfo) {\r\n        history.push(\"/login\");\r\n      }\r\n      else {\r\n        if (!user?.name) {\r\n          dispatch(getUserDetails('profile'));\r\n        } \r\n        console.log('listcase')\r\n        dispatch(listCate(match.params.name))\r\n        dispatch(listBrands());\r\n        \r\n    }\r\n    }, [dispatch,match, history, userInfo, user, successDeleteCate, successAddCate]);\r\n  \r\n\r\n    const removeCateHandler = (catePathName) => {\r\n        console.log(\"delete cate\")\r\n        dispatch(deleteCategory(catePathName))\r\n    }\r\n    \r\n    return(\r\n        loadingCates?<Loader/>:(!user?.isAdmin?<h1>BẠN KHÔNG CÓ QUYỀN TRUY CẬP VÀO TRANG NÀY !!! </h1>:(\r\n        <Row style = {{marginTop:\"100px\"}}>\r\n            <Row>\r\n            {loadingCates ? <Loader/> : errorCates ? <Message variant='danger'>{errorCates}</Message> : (\r\n                <Col>\r\n                    <Row>\r\n                        <Col md={2}>\r\n                        <button type=\"button\" class=\"btn btn-success\"><Link to={'/admin/brand'}>Back </Link></button>\r\n                        </Col>\r\n                        <Col md={8}>\r\n                            <h2>{`Catagorys of ${match.params.name}`}</h2>\r\n                        </Col>\r\n                        <Col md={2}>\r\n                            <button type=\"button\" class=\"btn btn-success\"><Link to={`/admin/add/category/${match.params.name}`}>Add Category + </Link></button>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col md={10}>\r\n                            <Table striped bordered hover responsive className='table-sm'>\r\n                            <thead>\r\n                                <tr>\r\n                                <th>ID</th>\r\n                                <th>Name Category</th>\r\n                                <th>\r\n                                Delete\r\n                                </th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {categoryList && categoryList.map(cate => (\r\n                                <tr key={cate._id}>\r\n                                    <td>{cate._id}</td>\r\n                                    <td><Link to={`/admin/product/${match.params.name}/${cate.catePathName}`}>{cate.cateName}</Link></td>\r\n                                    <td>\r\n                                    <Button type='button' variant='light' onClick={() => removeCateHandler(cate.catePathName)}><i className='fas fa-trash'></i></Button>\r\n                                    </td>\r\n                                </tr>\r\n                                ))}\r\n                            </tbody>\r\n                            </Table>\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n                \r\n            )}\r\n            </Row>\r\n        </Row>\r\n        )\r\n    ))}\r\n\r\n\r\n    \r\n  \r\n  export default AdminBrandScreen;","D:\\ĐẠI HỌC\\HK211\\Công nghệ phần mềm\\BTL\\App\\BQ\\frontend\\src\\screens\\AddBrandScreen.js",["318","319","320"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Form, Button, Row, Col } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport { addNewBrand } from \"../actions/brandActions\";\r\n\r\nconst AddBranchScreen = ({ location, history }) => {\r\n  const [brandName, setBrandName] = useState(\"\");\r\n  const [pathName, setPathName] = useState(\"\");\r\n  const [image, setImage] = useState(\"\");\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { loading, error, userInfo } = userLogin;\r\n\r\n  const userDetails = useSelector((state) => state.userDetails);\r\n  const {  user } = userDetails;\r\n \r\n\r\n  const redirect = location.search ? location.search.split(\"=\")[1] : \"/\";\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n\r\n    }\r\n    \r\n  }, [dispatch, history, userInfo, redirect, user ]);\r\n\r\n  \r\n\r\n \r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(addNewBrand(\r\n      brandName,\r\n      pathName,\r\n      image\r\n    ))\r\n    history.push('/admin/brand')\r\n  };\r\n\r\n  return (\r\n    <FormContainer>\r\n      <h1>Add Brand </h1>\r\n      {error && <Message variant=\"danger\">{error} </Message>}\r\n      {loading && <Loader />}\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group controlId=\"email\">\r\n          <Form.Label> Brand Name </Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Enter brand name\"\r\n            onChange={(e) => setBrandName(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"email\">\r\n          <Form.Label> Brand pathName </Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Enter pathbrand name\"\r\n            onChange={(e) => setPathName(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"Image\">\r\n          <Form.Label> Image URL </Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Enter image url\"\r\n            onChange={(e) => setImage(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Button type=\"submit\" variant=\"primary\">\r\n          Confirm\r\n        </Button>\r\n      </Form>\r\n    </FormContainer>\r\n  );\r\n};\r\n\r\nexport default AddBranchScreen;\r\n","D:\\ĐẠI HỌC\\HK211\\Công nghệ phần mềm\\BTL\\App\\BQ\\frontend\\src\\screens\\AddCateScreen.js",["321","322","323","324"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Form, Button, Row, Col } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport { addNewBrand, addNewCate } from \"../actions/brandActions\";\r\n\r\nconst AddCateScreen = ({ location, history, match }) => {\r\n  const [cateName, setCateName] = useState(\"\");\r\n  const [catePathName, setCatePathName] = useState(\"\");\r\n  const [image, setImage] = useState(\"\");\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { loading, error, userInfo } = userLogin;\r\n\r\n  const userDetails = useSelector((state) => state.userDetails);\r\n  const {  user } = userDetails;\r\n \r\n\r\n  const redirect = location.search ? location.search.split(\"=\")[1] : \"/\";\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n\r\n    }\r\n    \r\n  }, [dispatch, history, userInfo, redirect, user ]);\r\n\r\n  \r\n\r\n \r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(addNewCate(\r\n      cateName,\r\n      catePathName,\r\n      match.params.pathname,\r\n      image\r\n    ))\r\n    console.log(match.params.pathname)\r\n    history.push(`/admin/cate/${match.params.pathname}`)\r\n  };\r\n\r\n  return (\r\n    <FormContainer>\r\n      <h1>Add Category </h1>\r\n      {error && <Message variant=\"danger\">{error} </Message>}\r\n      {loading && <Loader />}\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group controlId=\"text\">\r\n          <Form.Label> Category Name </Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Enter brand name\"\r\n            onChange={(e) => setCateName(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"text\">\r\n          <Form.Label> Category pathName </Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Enter pathbrand name\"\r\n            onChange={(e) => setCatePathName(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"Image\">\r\n          <Form.Label> Image URL </Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Enter image url\"\r\n            onChange={(e) => setImage(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Button type=\"submit\" variant=\"primary\">\r\n          Confirm\r\n        </Button>\r\n      </Form>\r\n    </FormContainer>\r\n  );\r\n};\r\n\r\nexport default AddCateScreen;\r\n","D:\\ĐẠI HỌC\\HK211\\Công nghệ phần mềm\\BTL\\App\\BQ\\frontend\\src\\screens\\AddProductScreen.js",["325"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Form, Button, Image } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport { addNewProduct } from \"../actions/productActions\";\r\n\r\n\r\nconst AddProductScreen = ({ location, history, match }) => {\r\n  const [name, setName] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [image, setImage] = useState(\"\");\r\n  const [price, setPrice] = useState(\"\");\r\n  const [countInStock, setCountInStock] = useState(\"\");\r\n\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { loading, error, userInfo } = userLogin;\r\n\r\n  const userDetails = useSelector((state) => state.userDetails);\r\n  const {  user } = userDetails;\r\n \r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n\r\n    }\r\n    \r\n  }, [dispatch, history, userInfo, user ]);\r\n\r\n  \r\n\r\n \r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    console.log(match.params.catename)\r\n    dispatch(addNewProduct(name, image, description, price, countInStock, match.params.pathname, match.params.catename))\r\n    console.log(match.params.pathname)\r\n    history.push(`/admin/product/${match.params.pathname}/${match.params.catename}`)\r\n  };\r\n\r\n  return (\r\n    <FormContainer>\r\n      <h1>Add Product </h1>\r\n      {error && <Message variant=\"danger\">{error} </Message>}\r\n      {loading && <Loader />}\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group controlId=\"text\">\r\n          <Form.Label> Product Name </Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Enter brand name\"\r\n            onChange={(e) => setName(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"text\">\r\n          <Form.Label>Description</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Enter Description for product\"\r\n            onChange={(e) => setDescription(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"Image\">\r\n          <Form.Label> Image URL </Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Enter image url\"\r\n            onChange={(e) => setImage(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n        <br></br>\r\n        <Image src={image} alt={name} fluid rounded></Image>\r\n        <br></br>\r\n        <Form.Group controlId=\"text\">\r\n          <Form.Label> Price </Form.Label>\r\n          <Form.Control\r\n            type=\"number\"\r\n            placeholder=\"Enter Price\"\r\n            onChange={(e) => setPrice(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"text\">\r\n          <Form.Label>Count In Stock </Form.Label>\r\n          <Form.Control\r\n            type=\"number\"\r\n            placeholder=\"Enter Count In Stock\"\r\n            onChange={(e) => setCountInStock(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Button type=\"submit\" variant=\"primary\">\r\n          Confirm\r\n        </Button>\r\n      </Form>\r\n    </FormContainer>\r\n  );\r\n};\r\n\r\nexport default AddProductScreen;\r\n","D:\\ĐẠI HỌC\\HK211\\Công nghệ phần mềm\\BTL\\App\\BQ\\frontend\\src\\screens\\EditProductScreen.js",["326","327","328","329","330"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Form, Button, Image } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport { addNewProduct, listProductDetails, updateProduct } from \"../actions/productActions\";\r\n\r\n\r\nconst EditProductScreen = ({ history, match }) => {\r\n  const [name, setName] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  const [image, setImage] = useState('');\r\n  const [price, setPrice] = useState('');\r\n  const [countInStock, setCountInStock] = useState('');\r\n\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { loading, error, userInfo } = userLogin;\r\n\r\n  const userDetails = useSelector((state) => state.userDetails);\r\n  const { user } = userDetails;\r\n\r\n  const productDetails = useSelector((state) => state.productDetails);\r\n  const { loading: loadingPr, product } = productDetails;\r\n\r\n\r\n  console.log(product)\r\n\r\n  useEffect(() => {\r\n    dispatch(listProductDetails(match.params.id))\r\n  }, [dispatch, history]);\r\n\r\n  useEffect(() => {\r\n    if (product) {\r\n      setName(product.name);\r\n      setDescription(product.description);\r\n      setImage(product.image);\r\n      setPrice(product.price);\r\n      setCountInStock(product.countInStock);\r\n    }\r\n  }, [product])\r\n\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    console.log(match.params.catename)\r\n    dispatch(updateProduct(\r\n      match.params.id,\r\n      {\r\n        name: name,\r\n        image: image,\r\n        description: description,\r\n        price: price,\r\n        countInStock: countInStock,\r\n      }\r\n    ))\r\n    history.push(`/admin/product/${match.params.pathname}/${product.category}`)\r\n  };\r\n\r\n  return (\r\n    loadingPr ? <></> :\r\n      <FormContainer>\r\n        <h1>Edit Product </h1>\r\n        {error && <Message variant=\"danger\">{error} </Message>}\r\n        {loading && <Loader />}\r\n        <Form onSubmit={submitHandler}>\r\n          <Form.Group controlId=\"text\">\r\n            <Form.Label> Product Name </Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"Enter brand name\"\r\n              value={name}\r\n              onChange={(e) => setName(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n          <br></br>\r\n          <Form.Group controlId=\"text\">\r\n            <Form.Label>Description</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"Enter Description for product\"\r\n              value={description}\r\n              onChange={(e) => setDescription(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n          <br></br>\r\n          <Form.Group controlId=\"Image\">\r\n            <Form.Label> Image URL </Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"Enter image url\"\r\n              value={image}\r\n              onChange={(e) => setImage(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <br></br>\r\n          <Image src={image} alt={name} fluid rounded></Image>\r\n          <br></br>\r\n\r\n          <Form.Group controlId=\"text\">\r\n            <Form.Label> Price </Form.Label>\r\n            <Form.Control\r\n              type=\"number\"\r\n              placeholder=\"Enter Price\"\r\n              value={price}\r\n              onChange={(e) => setPrice(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n          <br></br>\r\n          <Form.Group controlId=\"text\">\r\n            <Form.Label>Count In Stock </Form.Label>\r\n            <Form.Control\r\n              type=\"number\"\r\n              placeholder=\"Enter Count In Stock\"\r\n              value={countInStock}\r\n              onChange={(e) => setCountInStock(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n          <br></br>\r\n          <Button type=\"submit\" variant=\"primary\">\r\n            Confirm\r\n          </Button>\r\n        </Form>\r\n      </FormContainer>\r\n  );\r\n};\r\n\r\nexport default EditProductScreen;\r\n","D:\\ĐẠI HỌC\\HK211\\Công nghệ phần mềm\\BTL\\App\\BQ\\frontend\\src\\screens\\ForgotPassScreen.js",["331","332","333","334"],"import React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { resetNewPass } from '../actions/userActions'\r\nimport { Link } from 'react-router-dom'\r\nfunction ForgotPassScreen() {\r\n    const dispatch = useDispatch()\r\n    const [email, setEmail] = useState('')\r\n    const [userName, setUsername] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n\r\n    const resetPass = useSelector(state => state.resetPass)\r\n    const {loading, error, success} = resetPass\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        if (password != confirmPassword) {\r\n        }\r\n        else {\r\n            dispatch(resetNewPass({userName, email, password}))\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n            <form>\r\n                <input className=\"ForgotPassimpBx\" type=\"text\" required placeholder=\"Username\" \r\n                onChange={(e) => setUsername(e.target.value)}/>\r\n                <input className=\"ForgotPassimpBx\" type=\"email\" placeholder=\"Email\"\r\n                required onChange={(e) => setEmail(e.target.value)}></input>\r\n                <input className=\"ForgotPassimpBx\" type=\"password\" placeholder=\"New password\"\r\n                required onChange={(e) => setPassword(e.target.value)}></input>\r\n                <input className=\"ForgotPassimpBx\" type=\"password\" placeholder=\"Confirm new password\"\r\n                required onChange={(e) => setConfirmPassword(e.target.value)}></input>\r\n            </form>\r\n            <button type=\"submit\" className=\"ForgotPasstoggle-btn1\" \r\n                onClick={(e) => handleSubmit(e)}>Reset</button>\r\n            <Link to='/login'>\r\n                <button type=\"button\" className=\"ForgotPasstoggle-btn2\">Cancel</button>\r\n            </Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ForgotPassScreen\r\n","D:\\ĐẠI HỌC\\HK211\\Công nghệ phần mềm\\BTL\\App\\BQ\\frontend\\src\\screens\\ClerkScreen.js",["335","336","337","338","339","340","341","342","343","344","345","346","347","348","349","350","351","352","353","354","355","356","357"],"import React, { useState, useEffect } from \"react\";\r\nimport { Form, Button, Row, Col, Table } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport { getUserDetails, updateUserProfile } from \"../actions/userActions\";\r\nimport { getOrderList, listMyOrders, updateOrder } from \"../actions/orderActions\";\r\nimport { disable } from \"colors\";\r\n\r\nconst ClerkScreen = ({ history }) => {\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [message, setMessage] = useState(null);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userDetails = useSelector((state) => state.userDetails);\r\n  const { loading, error, user } = userDetails;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const userUpdateProfile = useSelector((state) => state.userUpdateProfile);\r\n  const { success } = userUpdateProfile;\r\n\r\n  const orderList = useSelector((state) => state.orderList);\r\n  const { loading: loadingOrders, error: errorOrders, orders } = orderList;\r\n\r\n  const updateOrderStatus = useSelector((state) => state.updateOrderStatus);\r\n  const {success: successUpdateOrder} = updateOrderStatus\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push(\"/login\");\r\n    } else {\r\n      if (!user?.name) {\r\n        dispatch(getUserDetails('profile'));\r\n        dispatch(getOrderList())\r\n      }\r\n      if(successUpdateOrder){\r\n        dispatch(getOrderList())\r\n      }\r\n    }\r\n  }, [dispatch, history, userInfo, user,successUpdateOrder]);\r\n\r\n  const confirmHandler = (id) => {\r\n    console.log(\"cf\")\r\n    dispatch(updateOrder(id, \"Đã xác nhận\"))\r\n  };\r\n\r\n  const confirmPayHandler = (id) => {\r\n    console.log(\"cf\")\r\n    dispatch(updateOrder(id, \"Đã thanh toán\"))\r\n  };\r\n\r\n  return(\r\n    loading?<></>:(!user?.isClerk?<h1>BẠN KHÔNG CÓ QUYỀN TRUY CẬP VÀO TRANG NÀY !!! </h1>:(<Row style = {{marginTop:\"100px\"}}>\r\n      <Col md={12}>\r\n        <h2>QUẢN LÝ ĐƠN HÀNG</h2>\r\n        {loadingOrders ? <Loader/> : errorOrders ? <Message variant='danger'>{errorOrders}</Message> : (\r\n          <Table striped bordered hover responsive className='table-sm'>\r\n            <thead>\r\n              <tr>\r\n                <th>ID</th>\r\n                <th>TOTAL</th>\r\n                <th>PAID</th>\r\n                <th>DELIVERED</th>\r\n                <th>PAID</th>\r\n                <th>CONFIRM</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {orders.map(order => (\r\n                <tr key={order._id}>\r\n                  <td>{order._id}</td>\r\n                  <td>{order.totalPrice}</td>\r\n                  <td>{order.isPaid ? <i className='fas fa-check' style={{color: 'green'}}></i>: (\r\n                    <i className='fas fa-times' style={{color: 'red'}}></i>\r\n                  )}</td>\r\n                  <td>{order.status==\"Đã giao hàng\" ?<i className='fas fa-check' style={{color: 'green'}}></i> : (\r\n                    <i className='fas fa-times' style={{color: 'red'}}></i>\r\n                  )}</td>\r\n                  <td>\r\n                    {order.isPaid?<Button type='button' variant='light' style={{color: 'gray'},{width:'100%'}}>Đã thanh toán</Button>:\r\n                    <Button type='button'  style={{color: 'green'},{width:'100%'}} onClick={() => confirmPayHandler(order._id)}>Thanh toán</Button>\r\n                    }\r\n                  </td>\r\n                  <td>\r\n                    {!order.isPaid?<Button type='button' variant='light' style={{color: 'gray'},{width:'100%'}}>Chưa thanh toán</Button>:\r\n                    order.status === \"Chưa xác nhận\"?\r\n                    <Button type='button'  style={{color: 'green'},{width:'100%'}} onClick={() => confirmHandler(order._id)}>Xác nhận</Button>:\r\n                    <Button type='button' variant='light' style={{color: 'blue'},{width:'100%'}} >Đã xác nhận</Button>\r\n                    }\r\n                    \r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        )}\r\n      </Col>\r\n    </Row>\r\n  )\r\n  ))\r\n}\r\n\r\nexport default ClerkScreen;\r\n","D:\\ĐẠI HỌC\\HK211\\Công nghệ phần mềm\\BTL\\App\\BQ\\frontend\\src\\components\\OrderList.js",["358","359","360","361"],"import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getOrderList } from '../actions/orderActions'\r\n\r\nfunction OrderList() {\r\n    const dispatch = useDispatch()\r\n    const orderList = useSelector(state => state.orderList)\r\n    const { loading, error, orders } = OrderList\r\n    useEffect(() => {\r\n        dispatch(getOrderList())\r\n    }, [dispatch])\r\n\r\n    return (\r\n        <div>\r\n            b\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OrderList\r\n",{"ruleId":"362","replacedBy":"363"},{"ruleId":"364","replacedBy":"365"},{"ruleId":"366","severity":1,"message":"367","line":59,"column":19,"nodeType":"368","messageId":"369","endLine":59,"endColumn":23},{"ruleId":"370","severity":1,"message":"371","line":148,"column":36,"nodeType":"372","messageId":"373","endLine":148,"endColumn":38},{"ruleId":"374","severity":1,"message":"375","line":153,"column":83,"nodeType":"376","messageId":"377","endLine":153,"endColumn":84},{"ruleId":"374","severity":1,"message":"375","line":158,"column":81,"nodeType":"376","messageId":"377","endLine":158,"endColumn":82},{"ruleId":"374","severity":1,"message":"375","line":160,"column":67,"nodeType":"376","messageId":"377","endLine":160,"endColumn":68},{"ruleId":"374","severity":1,"message":"375","line":162,"column":67,"nodeType":"376","messageId":"377","endLine":162,"endColumn":68},{"ruleId":"374","severity":1,"message":"375","line":163,"column":81,"nodeType":"376","messageId":"377","endLine":163,"endColumn":82},{"ruleId":"366","severity":1,"message":"378","line":7,"column":8,"nodeType":"368","messageId":"369","endLine":7,"endColumn":14},{"ruleId":"366","severity":1,"message":"379","line":8,"column":10,"nodeType":"368","messageId":"369","endLine":8,"endColumn":13},{"ruleId":"366","severity":1,"message":"380","line":8,"column":15,"nodeType":"368","messageId":"369","endLine":8,"endColumn":18},{"ruleId":"366","severity":1,"message":"381","line":21,"column":10,"nodeType":"368","messageId":"369","endLine":21,"endColumn":37},{"ruleId":"366","severity":1,"message":"382","line":38,"column":20,"nodeType":"368","messageId":"369","endLine":38,"endColumn":40},{"ruleId":"366","severity":1,"message":"383","line":8,"column":10,"nodeType":"368","messageId":"369","endLine":8,"endColumn":24},{"ruleId":"366","severity":1,"message":"384","line":9,"column":22,"nodeType":"368","messageId":"369","endLine":9,"endColumn":35},{"ruleId":"366","severity":1,"message":"385","line":10,"column":10,"nodeType":"368","messageId":"369","endLine":10,"endColumn":22},{"ruleId":"366","severity":1,"message":"386","line":11,"column":10,"nodeType":"368","messageId":"369","endLine":11,"endColumn":30},{"ruleId":"366","severity":1,"message":"387","line":12,"column":8,"nodeType":"368","messageId":"369","endLine":12,"endColumn":13},{"ruleId":"388","severity":1,"message":"389","line":45,"column":6,"nodeType":"390","endLine":45,"endColumn":52,"suggestions":"391"},{"ruleId":"366","severity":1,"message":"392","line":16,"column":24,"nodeType":"368","messageId":"369","endLine":16,"endColumn":37},{"ruleId":"366","severity":1,"message":"393","line":6,"column":10,"nodeType":"368","messageId":"369","endLine":6,"endColumn":16},{"ruleId":"366","severity":1,"message":"394","line":6,"column":18,"nodeType":"368","messageId":"369","endLine":6,"endColumn":21},{"ruleId":"366","severity":1,"message":"395","line":5,"column":10,"nodeType":"368","messageId":"369","endLine":5,"endColumn":16},{"ruleId":"366","severity":1,"message":"396","line":10,"column":13,"nodeType":"368","messageId":"369","endLine":10,"endColumn":20},{"ruleId":"366","severity":1,"message":"397","line":10,"column":22,"nodeType":"368","messageId":"369","endLine":10,"endColumn":27},{"ruleId":"388","severity":1,"message":"398","line":13,"column":8,"nodeType":"390","endLine":13,"endColumn":18,"suggestions":"399"},{"ruleId":"366","severity":1,"message":"396","line":9,"column":13,"nodeType":"368","messageId":"369","endLine":9,"endColumn":20},{"ruleId":"366","severity":1,"message":"397","line":9,"column":22,"nodeType":"368","messageId":"369","endLine":9,"endColumn":27},{"ruleId":"388","severity":1,"message":"400","line":12,"column":8,"nodeType":"390","endLine":12,"endColumn":18,"suggestions":"401"},{"ruleId":"366","severity":1,"message":"402","line":3,"column":10,"nodeType":"368","messageId":"369","endLine":3,"endColumn":14},{"ruleId":"403","severity":1,"message":"404","line":11,"column":9,"nodeType":"405","endLine":11,"endColumn":76},{"ruleId":"366","severity":1,"message":"402","line":3,"column":10,"nodeType":"368","messageId":"369","endLine":3,"endColumn":14},{"ruleId":"366","severity":1,"message":"406","line":3,"column":16,"nodeType":"368","messageId":"369","endLine":3,"endColumn":25},{"ruleId":"366","severity":1,"message":"407","line":3,"column":27,"nodeType":"368","messageId":"369","endLine":3,"endColumn":36},{"ruleId":"366","severity":1,"message":"379","line":3,"column":38,"nodeType":"368","messageId":"369","endLine":3,"endColumn":41},{"ruleId":"366","severity":1,"message":"380","line":3,"column":43,"nodeType":"368","messageId":"369","endLine":3,"endColumn":46},{"ruleId":"403","severity":1,"message":"404","line":14,"column":15,"nodeType":"405","endLine":14,"endColumn":56},{"ruleId":"403","severity":1,"message":"404","line":23,"column":15,"nodeType":"405","endLine":23,"endColumn":55},{"ruleId":"403","severity":1,"message":"404","line":32,"column":15,"nodeType":"405","endLine":32,"endColumn":54},{"ruleId":"403","severity":1,"message":"404","line":41,"column":15,"nodeType":"405","endLine":41,"endColumn":61},{"ruleId":"366","severity":1,"message":"408","line":23,"column":10,"nodeType":"368","messageId":"369","endLine":23,"endColumn":29},{"ruleId":"366","severity":1,"message":"409","line":12,"column":5,"nodeType":"368","messageId":"369","endLine":12,"endColumn":20},{"ruleId":"366","severity":1,"message":"396","line":8,"column":13,"nodeType":"368","messageId":"369","endLine":8,"endColumn":20},{"ruleId":"366","severity":1,"message":"397","line":8,"column":22,"nodeType":"368","messageId":"369","endLine":8,"endColumn":27},{"ruleId":"366","severity":1,"message":"396","line":8,"column":13,"nodeType":"368","messageId":"369","endLine":8,"endColumn":20},{"ruleId":"366","severity":1,"message":"397","line":8,"column":22,"nodeType":"368","messageId":"369","endLine":8,"endColumn":27},{"ruleId":"388","severity":1,"message":"410","line":11,"column":8,"nodeType":"390","endLine":11,"endColumn":18,"suggestions":"411"},{"ruleId":"366","severity":1,"message":"412","line":1,"column":17,"nodeType":"368","messageId":"369","endLine":1,"endColumn":25},{"ruleId":"366","severity":1,"message":"413","line":2,"column":10,"nodeType":"368","messageId":"369","endLine":2,"endColumn":14},{"ruleId":"366","severity":1,"message":"414","line":4,"column":10,"nodeType":"368","messageId":"369","endLine":4,"endColumn":23},{"ruleId":"366","severity":1,"message":"415","line":8,"column":35,"nodeType":"368","messageId":"369","endLine":8,"endColumn":46},{"ruleId":"366","severity":1,"message":"397","line":16,"column":22,"nodeType":"368","messageId":"369","endLine":16,"endColumn":27},{"ruleId":"366","severity":1,"message":"416","line":31,"column":22,"nodeType":"368","messageId":"369","endLine":31,"endColumn":34},{"ruleId":"366","severity":1,"message":"417","line":31,"column":43,"nodeType":"368","messageId":"369","endLine":31,"endColumn":53},{"ruleId":"366","severity":1,"message":"418","line":31,"column":55,"nodeType":"368","messageId":"369","endLine":31,"endColumn":67},{"ruleId":"366","severity":1,"message":"412","line":1,"column":17,"nodeType":"368","messageId":"369","endLine":1,"endColumn":25},{"ruleId":"366","severity":1,"message":"413","line":2,"column":10,"nodeType":"368","messageId":"369","endLine":2,"endColumn":14},{"ruleId":"366","severity":1,"message":"414","line":4,"column":10,"nodeType":"368","messageId":"369","endLine":4,"endColumn":23},{"ruleId":"366","severity":1,"message":"419","line":8,"column":10,"nodeType":"368","messageId":"369","endLine":8,"endColumn":20},{"ruleId":"366","severity":1,"message":"420","line":8,"column":22,"nodeType":"368","messageId":"369","endLine":8,"endColumn":30},{"ruleId":"366","severity":1,"message":"397","line":16,"column":22,"nodeType":"368","messageId":"369","endLine":16,"endColumn":27},{"ruleId":"366","severity":1,"message":"421","line":25,"column":22,"nodeType":"368","messageId":"369","endLine":25,"endColumn":35},{"ruleId":"366","severity":1,"message":"422","line":25,"column":44,"nodeType":"368","messageId":"369","endLine":25,"endColumn":55},{"ruleId":"366","severity":1,"message":"423","line":25,"column":57,"nodeType":"368","messageId":"369","endLine":25,"endColumn":63},{"ruleId":"366","severity":1,"message":"416","line":28,"column":22,"nodeType":"368","messageId":"369","endLine":28,"endColumn":34},{"ruleId":"366","severity":1,"message":"417","line":28,"column":43,"nodeType":"368","messageId":"369","endLine":28,"endColumn":53},{"ruleId":"366","severity":1,"message":"418","line":28,"column":55,"nodeType":"368","messageId":"369","endLine":28,"endColumn":67},{"ruleId":"366","severity":1,"message":"412","line":1,"column":17,"nodeType":"368","messageId":"369","endLine":1,"endColumn":25},{"ruleId":"366","severity":1,"message":"413","line":2,"column":10,"nodeType":"368","messageId":"369","endLine":2,"endColumn":14},{"ruleId":"366","severity":1,"message":"414","line":4,"column":10,"nodeType":"368","messageId":"369","endLine":4,"endColumn":23},{"ruleId":"366","severity":1,"message":"424","line":7,"column":26,"nodeType":"368","messageId":"369","endLine":7,"endColumn":43},{"ruleId":"366","severity":1,"message":"396","line":16,"column":13,"nodeType":"368","messageId":"369","endLine":16,"endColumn":20},{"ruleId":"366","severity":1,"message":"397","line":16,"column":22,"nodeType":"368","messageId":"369","endLine":16,"endColumn":27},{"ruleId":"366","severity":1,"message":"421","line":22,"column":22,"nodeType":"368","messageId":"369","endLine":22,"endColumn":35},{"ruleId":"366","severity":1,"message":"422","line":22,"column":44,"nodeType":"368","messageId":"369","endLine":22,"endColumn":55},{"ruleId":"366","severity":1,"message":"423","line":22,"column":57,"nodeType":"368","messageId":"369","endLine":22,"endColumn":63},{"ruleId":"366","severity":1,"message":"425","line":2,"column":10,"nodeType":"368","messageId":"369","endLine":2,"endColumn":14},{"ruleId":"366","severity":1,"message":"379","line":3,"column":24,"nodeType":"368","messageId":"369","endLine":3,"endColumn":27},{"ruleId":"366","severity":1,"message":"380","line":3,"column":29,"nodeType":"368","messageId":"369","endLine":3,"endColumn":32},{"ruleId":"366","severity":1,"message":"425","line":2,"column":10,"nodeType":"368","messageId":"369","endLine":2,"endColumn":14},{"ruleId":"366","severity":1,"message":"379","line":3,"column":24,"nodeType":"368","messageId":"369","endLine":3,"endColumn":27},{"ruleId":"366","severity":1,"message":"380","line":3,"column":29,"nodeType":"368","messageId":"369","endLine":3,"endColumn":32},{"ruleId":"366","severity":1,"message":"415","line":8,"column":10,"nodeType":"368","messageId":"369","endLine":8,"endColumn":21},{"ruleId":"366","severity":1,"message":"425","line":2,"column":10,"nodeType":"368","messageId":"369","endLine":2,"endColumn":14},{"ruleId":"366","severity":1,"message":"425","line":2,"column":10,"nodeType":"368","messageId":"369","endLine":2,"endColumn":14},{"ruleId":"366","severity":1,"message":"426","line":8,"column":10,"nodeType":"368","messageId":"369","endLine":8,"endColumn":23},{"ruleId":"366","severity":1,"message":"427","line":22,"column":27,"nodeType":"368","messageId":"369","endLine":22,"endColumn":35},{"ruleId":"366","severity":1,"message":"428","line":25,"column":11,"nodeType":"368","messageId":"369","endLine":25,"endColumn":15},{"ruleId":"388","severity":1,"message":"429","line":35,"column":6,"nodeType":"390","endLine":35,"endColumn":25,"suggestions":"430"},{"ruleId":"366","severity":1,"message":"396","line":13,"column":12,"nodeType":"368","messageId":"369","endLine":13,"endColumn":19},{"ruleId":"366","severity":1,"message":"397","line":13,"column":21,"nodeType":"368","messageId":"369","endLine":13,"endColumn":26},{"ruleId":"366","severity":1,"message":"431","line":13,"column":28,"nodeType":"368","messageId":"369","endLine":13,"endColumn":35},{"ruleId":"370","severity":1,"message":"432","line":16,"column":22,"nodeType":"372","messageId":"373","endLine":16,"endColumn":24},{"ruleId":"366","severity":1,"message":"413","line":2,"column":10,"nodeType":"368","messageId":"369","endLine":2,"endColumn":14},{"ruleId":"366","severity":1,"message":"414","line":4,"column":10,"nodeType":"368","messageId":"369","endLine":4,"endColumn":23},{"ruleId":"366","severity":1,"message":"424","line":7,"column":26,"nodeType":"368","messageId":"369","endLine":7,"endColumn":43},{"ruleId":"366","severity":1,"message":"385","line":8,"column":24,"nodeType":"368","messageId":"369","endLine":8,"endColumn":36},{"ruleId":"366","severity":1,"message":"433","line":9,"column":10,"nodeType":"368","messageId":"369","endLine":9,"endColumn":17},{"ruleId":"366","severity":1,"message":"434","line":12,"column":10,"nodeType":"368","messageId":"369","endLine":12,"endColumn":14},{"ruleId":"366","severity":1,"message":"435","line":12,"column":16,"nodeType":"368","messageId":"369","endLine":12,"endColumn":23},{"ruleId":"366","severity":1,"message":"436","line":13,"column":10,"nodeType":"368","messageId":"369","endLine":13,"endColumn":15},{"ruleId":"366","severity":1,"message":"437","line":13,"column":17,"nodeType":"368","messageId":"369","endLine":13,"endColumn":25},{"ruleId":"366","severity":1,"message":"438","line":14,"column":10,"nodeType":"368","messageId":"369","endLine":14,"endColumn":18},{"ruleId":"366","severity":1,"message":"439","line":14,"column":20,"nodeType":"368","messageId":"369","endLine":14,"endColumn":31},{"ruleId":"366","severity":1,"message":"440","line":15,"column":10,"nodeType":"368","messageId":"369","endLine":15,"endColumn":25},{"ruleId":"366","severity":1,"message":"441","line":15,"column":27,"nodeType":"368","messageId":"369","endLine":15,"endColumn":45},{"ruleId":"366","severity":1,"message":"442","line":16,"column":10,"nodeType":"368","messageId":"369","endLine":16,"endColumn":17},{"ruleId":"366","severity":1,"message":"443","line":16,"column":19,"nodeType":"368","messageId":"369","endLine":16,"endColumn":29},{"ruleId":"366","severity":1,"message":"397","line":21,"column":20,"nodeType":"368","messageId":"369","endLine":21,"endColumn":25},{"ruleId":"366","severity":1,"message":"431","line":27,"column":11,"nodeType":"368","messageId":"369","endLine":27,"endColumn":18},{"ruleId":"370","severity":1,"message":"371","line":83,"column":36,"nodeType":"372","messageId":"373","endLine":83,"endColumn":38},{"ruleId":"374","severity":1,"message":"375","line":87,"column":95,"nodeType":"376","messageId":"377","endLine":87,"endColumn":96},{"ruleId":"374","severity":1,"message":"375","line":88,"column":67,"nodeType":"376","messageId":"377","endLine":88,"endColumn":68},{"ruleId":"374","severity":1,"message":"375","line":92,"column":96,"nodeType":"376","messageId":"377","endLine":92,"endColumn":97},{"ruleId":"374","severity":1,"message":"375","line":94,"column":67,"nodeType":"376","messageId":"377","endLine":94,"endColumn":68},{"ruleId":"374","severity":1,"message":"375","line":95,"column":81,"nodeType":"376","messageId":"377","endLine":95,"endColumn":82},{"ruleId":"366","severity":1,"message":"444","line":7,"column":11,"nodeType":"368","messageId":"369","endLine":7,"endColumn":20},{"ruleId":"366","severity":1,"message":"396","line":8,"column":13,"nodeType":"368","messageId":"369","endLine":8,"endColumn":20},{"ruleId":"366","severity":1,"message":"397","line":8,"column":22,"nodeType":"368","messageId":"369","endLine":8,"endColumn":27},{"ruleId":"366","severity":1,"message":"445","line":8,"column":29,"nodeType":"368","messageId":"369","endLine":8,"endColumn":35},"no-native-reassign",["446"],"no-negated-in-lhs",["447"],"no-unused-vars","'data' is assigned a value but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","'Footer' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'PRODUCT_CREATE_REVIEW_RESET' is defined but never used.","'successProductReview' is assigned a value but never used.","'getUserDetails' is defined but never used.","'updateAllCart' is defined but never used.","'listMyOrders' is defined but never used.","'cartItemsFromStorage' is defined but never used.","'store' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loading'. Either include it or remove the dependency array.","ArrayExpression",["448"],"'setPostalCode' is assigned a value but never used.","'Navbar' is defined but never used.","'Nav' is defined but never used.","'Button' is defined but never used.","'loading' is assigned a value but never used.","'error' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'match.params.pathName'. Either include it or remove the dependency array.",["449"],"React Hook useEffect has missing dependencies: 'match.params.catePathName' and 'match.params.pathName'. Either include them or remove the dependency array.",["450"],"'Card' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'CardGroup' is defined but never used.","'Container' is defined but never used.","'CART_UPDATE_REQUEST' is defined but never used.","'ORDER_PAY_RESET' is defined but never used.","React Hook useEffect has a missing dependency: 'match.params.brandPathName'. Either include it or remove the dependency array.",["451"],"'useState' is defined but never used.","'Form' is defined but never used.","'LinkContainer' is defined but never used.","'addNewBrand' is defined but never used.","'loadingCates' is assigned a value but never used.","'errorCates' is assigned a value but never used.","'categoryList' is assigned a value but never used.","'listBrands' is defined but never used.","'listCate' is defined but never used.","'loadingBrands' is assigned a value but never used.","'errorBrands' is assigned a value but never used.","'brands' is assigned a value but never used.","'updateUserProfile' is defined but never used.","'Link' is defined but never used.","'addNewProduct' is defined but never used.","'userInfo' is assigned a value but never used.","'user' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'match.params.id'. Either include it or remove the dependency array.",["452"],"'success' is assigned a value but never used.","Expected '!==' and instead saw '!='.","'disable' is defined but never used.","'name' is assigned a value but never used.","'setName' is assigned a value but never used.","'email' is assigned a value but never used.","'setEmail' is assigned a value but never used.","'password' is assigned a value but never used.","'setPassword' is assigned a value but never used.","'confirmPassword' is assigned a value but never used.","'setConfirmPassword' is assigned a value but never used.","'message' is assigned a value but never used.","'setMessage' is assigned a value but never used.","'orderList' is assigned a value but never used.","'orders' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"453","fix":"454"},{"desc":"455","fix":"456"},{"desc":"457","fix":"458"},{"desc":"459","fix":"460"},{"desc":"461","fix":"462"},"Update the dependencies array to be: [dispatch, history, userInfo, redirect, user, loading]",{"range":"463","text":"464"},"Update the dependencies array to be: [dispatch, match.params.pathName]",{"range":"465","text":"466"},"Update the dependencies array to be: [dispatch, match.params.catePathName, match.params.pathName]",{"range":"467","text":"468"},"Update the dependencies array to be: [dispatch, match.params.brandPathName]",{"range":"469","text":"470"},"Update the dependencies array to be: [dispatch, history, match.params.id]",{"range":"471","text":"472"},[1440,1486],"[dispatch, history, userInfo, redirect, user, loading]",[584,594],"[dispatch, match.params.pathName]",[585,595],"[dispatch, match.params.catePathName, match.params.pathName]",[424,434],"[dispatch, match.params.brandPathName]",[1242,1261],"[dispatch, history, match.params.id]"]