[{"C:\\Users\\danha\\Downloads\\CSE-Software-Engineering-211-CSESE211-lun\\CSE-Software-Engineering-211-CSESE211\\BQ\\frontend\\src\\index.js":"1","C:\\Users\\danha\\Downloads\\CSE-Software-Engineering-211-CSESE211-lun\\CSE-Software-Engineering-211-CSESE211\\BQ\\frontend\\src\\store.js":"2","C:\\Users\\danha\\Downloads\\CSE-Software-Engineering-211-CSESE211-lun\\CSE-Software-Engineering-211-CSESE211\\BQ\\frontend\\src\\App.js":"3","C:\\Users\\danha\\Downloads\\CSE-Software-Engineering-211-CSESE211-lun\\CSE-Software-Engineering-211-CSESE211\\BQ\\frontend\\src\\reducers\\userReducers.js":"4","C:\\Users\\danha\\Downloads\\CSE-Software-Engineering-211-CSESE211-lun\\CSE-Software-Engineering-211-CSESE211\\BQ\\frontend\\src\\reducers\\productReducers.js":"5","C:\\Users\\danha\\Downloads\\CSE-Software-Engineering-211-CSESE211-lun\\CSE-Software-Engineering-211-CSESE211\\BQ\\frontend\\src\\reducers\\cartReducers.js":"6","C:\\Users\\danha\\Downloads\\CSE-Software-Engineering-211-CSESE211-lun\\CSE-Software-Engineering-211-CSESE211\\BQ\\frontend\\src\\reducers\\brandReducers.js":"7","C:\\Users\\danha\\Downloads\\CSE-Software-Engineering-211-CSESE211-lun\\CSE-Software-Engineering-211-CSESE211\\BQ\\frontend\\src\\reducers\\orderReducers.js":"8","C:\\Users\\danha\\Downloads\\CSE-Software-Engineering-211-CSESE211-lun\\CSE-Software-Engineering-211-CSESE211\\BQ\\frontend\\src\\components\\getListProductByCategoryOfBrand.js":"9","C:\\Users\\danha\\Downloads\\CSE-Software-Engineering-211-CSESE211-lun\\CSE-Software-Engineering-211-CSESE211\\BQ\\frontend\\src\\components\\ListBrand.js":"10","C:\\Users\\danha\\Downloads\\CSE-Software-Engineering-211-CSESE211-lun\\CSE-Software-Engineering-211-CSESE211\\BQ\\frontend\\src\\components\\getListProductOfBrand.js":"11","C:\\Users\\danha\\Downloads\\CSE-Software-Engineering-211-CSESE211-lun\\CSE-Software-Engineering-211-CSESE211\\BQ\\frontend\\src\\components\\Footer.js":"12","C:\\Users\\danha\\Downloads\\CSE-Software-Engineering-211-CSESE211-lun\\CSE-Software-Engineering-211-CSESE211\\BQ\\frontend\\src\\components\\OrderList.js":"13","C:\\Users\\danha\\Downloads\\CSE-Software-Engineering-211-CSESE211-lun\\CSE-Software-Engineering-211-CSESE211\\BQ\\frontend\\src\\components\\ListCategory.js":"14","C:\\Users\\danha\\Downloads\\CSE-Software-Engineering-211-CSESE211-lun\\CSE-Software-Engineering-211-CSESE211\\BQ\\frontend\\src\\screens\\ProductScreen.js":"15","C:\\Users\\danha\\Downloads\\CSE-Software-Engineering-211-CSESE211-lun\\CSE-Software-Engineering-211-CSESE211\\BQ\\frontend\\src\\screens\\AddBrandScreen.js":"16","C:\\Users\\danha\\Downloads\\CSE-Software-Engineering-211-CSESE211-lun\\CSE-Software-Engineering-211-CSESE211\\BQ\\frontend\\src\\screens\\AdminScreen.js":"17","C:\\Users\\danha\\Downloads\\CSE-Software-Engineering-211-CSESE211-lun\\CSE-Software-Engineering-211-CSESE211\\BQ\\frontend\\src\\screens\\AddProductScreen.js":"18","C:\\Users\\danha\\Downloads\\CSE-Software-Engineering-211-CSESE211-lun\\CSE-Software-Engineering-211-CSESE211\\BQ\\frontend\\src\\screens\\AddCateScreen.js":"19","C:\\Users\\danha\\Downloads\\CSE-Software-Engineering-211-CSESE211-lun\\CSE-Software-Engineering-211-CSESE211\\BQ\\frontend\\src\\screens\\HomeScreen.js":"20","C:\\Users\\danha\\Downloads\\CSE-Software-Engineering-211-CSESE211-lun\\CSE-Software-Engineering-211-CSESE211\\BQ\\frontend\\src\\screens\\AdminBrandScreen.js":"21","C:\\Users\\danha\\Downloads\\CSE-Software-Engineering-211-CSESE211-lun\\CSE-Software-Engineering-211-CSESE211\\BQ\\frontend\\src\\screens\\AdminProductScreen.js":"22","C:\\Users\\danha\\Downloads\\CSE-Software-Engineering-211-CSESE211-lun\\CSE-Software-Engineering-211-CSESE211\\BQ\\frontend\\src\\screens\\PaymentScreen.js":"23","C:\\Users\\danha\\Downloads\\CSE-Software-Engineering-211-CSESE211-lun\\CSE-Software-Engineering-211-CSESE211\\BQ\\frontend\\src\\screens\\LoginScreen.js":"24","C:\\Users\\danha\\Downloads\\CSE-Software-Engineering-211-CSESE211-lun\\CSE-Software-Engineering-211-CSESE211\\BQ\\frontend\\src\\screens\\CartScreen.js":"25","C:\\Users\\danha\\Downloads\\CSE-Software-Engineering-211-CSESE211-lun\\CSE-Software-Engineering-211-CSESE211\\BQ\\frontend\\src\\screens\\EditProductScreen.js":"26","C:\\Users\\danha\\Downloads\\CSE-Software-Engineering-211-CSESE211-lun\\CSE-Software-Engineering-211-CSESE211\\BQ\\frontend\\src\\screens\\ShippingScreen.js":"27","C:\\Users\\danha\\Downloads\\CSE-Software-Engineering-211-CSESE211-lun\\CSE-Software-Engineering-211-CSESE211\\BQ\\frontend\\src\\screens\\ForgotPassScreen.js":"28","C:\\Users\\danha\\Downloads\\CSE-Software-Engineering-211-CSESE211-lun\\CSE-Software-Engineering-211-CSESE211\\BQ\\frontend\\src\\screens\\OrderScreen.js":"29","C:\\Users\\danha\\Downloads\\CSE-Software-Engineering-211-CSESE211-lun\\CSE-Software-Engineering-211-CSESE211\\BQ\\frontend\\src\\screens\\SearchScreen.js":"30","C:\\Users\\danha\\Downloads\\CSE-Software-Engineering-211-CSESE211-lun\\CSE-Software-Engineering-211-CSESE211\\BQ\\frontend\\src\\screens\\ClerkScreen.js":"31","C:\\Users\\danha\\Downloads\\CSE-Software-Engineering-211-CSESE211-lun\\CSE-Software-Engineering-211-CSESE211\\BQ\\frontend\\src\\screens\\CartBrandScreen.js":"32","C:\\Users\\danha\\Downloads\\CSE-Software-Engineering-211-CSESE211-lun\\CSE-Software-Engineering-211-CSESE211\\BQ\\frontend\\src\\components\\Header.js":"33","C:\\Users\\danha\\Downloads\\CSE-Software-Engineering-211-CSESE211-lun\\CSE-Software-Engineering-211-CSESE211\\BQ\\frontend\\src\\screens\\ProfileScreen.js":"34","C:\\Users\\danha\\Downloads\\CSE-Software-Engineering-211-CSESE211-lun\\CSE-Software-Engineering-211-CSESE211\\BQ\\frontend\\src\\screens\\RegisterScreen.js":"35","C:\\Users\\danha\\Downloads\\CSE-Software-Engineering-211-CSESE211-lun\\CSE-Software-Engineering-211-CSESE211\\BQ\\frontend\\src\\screens\\PlaceOrderScreen.js":"36","C:\\Users\\danha\\Downloads\\CSE-Software-Engineering-211-CSESE211-lun\\CSE-Software-Engineering-211-CSESE211\\BQ\\frontend\\src\\constants\\brandConstants.js":"37","C:\\Users\\danha\\Downloads\\CSE-Software-Engineering-211-CSESE211-lun\\CSE-Software-Engineering-211-CSESE211\\BQ\\frontend\\src\\constants\\productConstants.js":"38","C:\\Users\\danha\\Downloads\\CSE-Software-Engineering-211-CSESE211-lun\\CSE-Software-Engineering-211-CSESE211\\BQ\\frontend\\src\\constants\\userConstants.js":"39","C:\\Users\\danha\\Downloads\\CSE-Software-Engineering-211-CSESE211-lun\\CSE-Software-Engineering-211-CSESE211\\BQ\\frontend\\src\\constants\\cartConstant.js":"40","C:\\Users\\danha\\Downloads\\CSE-Software-Engineering-211-CSESE211-lun\\CSE-Software-Engineering-211-CSESE211\\BQ\\frontend\\src\\constants\\orderConstants.js":"41","C:\\Users\\danha\\Downloads\\CSE-Software-Engineering-211-CSESE211-lun\\CSE-Software-Engineering-211-CSESE211\\BQ\\frontend\\src\\components\\Message.js":"42","C:\\Users\\danha\\Downloads\\CSE-Software-Engineering-211-CSESE211-lun\\CSE-Software-Engineering-211-CSESE211\\BQ\\frontend\\src\\components\\Product.js":"43","C:\\Users\\danha\\Downloads\\CSE-Software-Engineering-211-CSESE211-lun\\CSE-Software-Engineering-211-CSESE211\\BQ\\frontend\\src\\components\\Brand.js":"44","C:\\Users\\danha\\Downloads\\CSE-Software-Engineering-211-CSESE211-lun\\CSE-Software-Engineering-211-CSESE211\\BQ\\frontend\\src\\components\\Cate.js":"45","C:\\Users\\danha\\Downloads\\CSE-Software-Engineering-211-CSESE211-lun\\CSE-Software-Engineering-211-CSESE211\\BQ\\frontend\\src\\components\\Loader.js":"46","C:\\Users\\danha\\Downloads\\CSE-Software-Engineering-211-CSESE211-lun\\CSE-Software-Engineering-211-CSESE211\\BQ\\frontend\\src\\components\\Advertisement.js":"47","C:\\Users\\danha\\Downloads\\CSE-Software-Engineering-211-CSESE211-lun\\CSE-Software-Engineering-211-CSESE211\\BQ\\frontend\\src\\components\\Rating.js":"48","C:\\Users\\danha\\Downloads\\CSE-Software-Engineering-211-CSESE211-lun\\CSE-Software-Engineering-211-CSESE211\\BQ\\frontend\\src\\components\\ListBrandCart.js":"49","C:\\Users\\danha\\Downloads\\CSE-Software-Engineering-211-CSESE211-lun\\CSE-Software-Engineering-211-CSESE211\\BQ\\frontend\\src\\components\\Category.js":"50","C:\\Users\\danha\\Downloads\\CSE-Software-Engineering-211-CSESE211-lun\\CSE-Software-Engineering-211-CSESE211\\BQ\\frontend\\src\\components\\FormContainer.js":"51","C:\\Users\\danha\\Downloads\\CSE-Software-Engineering-211-CSESE211-lun\\CSE-Software-Engineering-211-CSESE211\\BQ\\frontend\\src\\components\\CheckoutSteps.js":"52","C:\\Users\\danha\\Downloads\\CSE-Software-Engineering-211-CSESE211-lun\\CSE-Software-Engineering-211-CSESE211\\BQ\\frontend\\src\\actions\\orderActions.js":"53","C:\\Users\\danha\\Downloads\\CSE-Software-Engineering-211-CSESE211-lun\\CSE-Software-Engineering-211-CSESE211\\BQ\\frontend\\src\\actions\\brandActions.js":"54","C:\\Users\\danha\\Downloads\\CSE-Software-Engineering-211-CSESE211-lun\\CSE-Software-Engineering-211-CSESE211\\BQ\\frontend\\src\\actions\\productActions.js":"55","C:\\Users\\danha\\Downloads\\CSE-Software-Engineering-211-CSESE211-lun\\CSE-Software-Engineering-211-CSESE211\\BQ\\frontend\\src\\actions\\cartActions.js":"56","C:\\Users\\danha\\Downloads\\CSE-Software-Engineering-211-CSESE211-lun\\CSE-Software-Engineering-211-CSESE211\\BQ\\frontend\\src\\actions\\userActions.js":"57","C:\\Users\\danha\\Downloads\\CSE-Software-Engineering-211-CSESE211-lun\\CSE-Software-Engineering-211-CSESE211\\BQ\\frontend\\src\\components\\SearchBox.js":"58","C:\\Users\\danha\\Downloads\\CSE-Software-Engineering-211-CSESE211-lun\\CSE-Software-Engineering-211-CSESE211\\BQ\\frontend\\src\\components\\BrandCart.js":"59"},{"size":335,"mtime":1638024832453,"results":"60","hashOfConfig":"61"},{"size":3014,"mtime":1638024832463,"results":"62","hashOfConfig":"61"},{"size":3841,"mtime":1638279050198,"results":"63","hashOfConfig":"61"},{"size":2542,"mtime":1638024832454,"results":"64","hashOfConfig":"61"},{"size":2963,"mtime":1638024832453,"results":"65","hashOfConfig":"61"},{"size":3250,"mtime":1638024832453,"results":"66","hashOfConfig":"61"},{"size":3817,"mtime":1638024832453,"results":"67","hashOfConfig":"61"},{"size":3607,"mtime":1638024832453,"results":"68","hashOfConfig":"61"},{"size":1473,"mtime":1638072246536,"results":"69","hashOfConfig":"61"},{"size":1009,"mtime":1638072275423,"results":"70","hashOfConfig":"61"},{"size":1493,"mtime":1638072264587,"results":"71","hashOfConfig":"61"},{"size":1201,"mtime":1638024832447,"results":"72","hashOfConfig":"61"},{"size":504,"mtime":1638024832450,"results":"73","hashOfConfig":"61"},{"size":1002,"mtime":1638024832449,"results":"74","hashOfConfig":"61"},{"size":7334,"mtime":1638288137735,"results":"75","hashOfConfig":"61"},{"size":3508,"mtime":1638072424520,"results":"76","hashOfConfig":"61"},{"size":4641,"mtime":1638072965448,"results":"77","hashOfConfig":"61"},{"size":4253,"mtime":1638072540967,"results":"78","hashOfConfig":"61"},{"size":3632,"mtime":1638072488928,"results":"79","hashOfConfig":"61"},{"size":891,"mtime":1638075178786,"results":"80","hashOfConfig":"61"},{"size":5326,"mtime":1638072839734,"results":"81","hashOfConfig":"61"},{"size":6031,"mtime":1638073678407,"results":"82","hashOfConfig":"61"},{"size":2143,"mtime":1638076991054,"results":"83","hashOfConfig":"61"},{"size":2905,"mtime":1638024832458,"results":"84","hashOfConfig":"61"},{"size":3560,"mtime":1638077416938,"results":"85","hashOfConfig":"61"},{"size":5026,"mtime":1638073969176,"results":"86","hashOfConfig":"61"},{"size":2301,"mtime":1638083422274,"results":"87","hashOfConfig":"61"},{"size":4557,"mtime":1638024832457,"results":"88","hashOfConfig":"61"},{"size":6578,"mtime":1638285905391,"results":"89","hashOfConfig":"61"},{"size":1241,"mtime":1638075334643,"results":"90","hashOfConfig":"61"},{"size":4525,"mtime":1638072993422,"results":"91","hashOfConfig":"61"},{"size":4524,"mtime":1638077441386,"results":"92","hashOfConfig":"61"},{"size":2638,"mtime":1638279050200,"results":"93","hashOfConfig":"61"},{"size":9415,"mtime":1638279050201,"results":"94","hashOfConfig":"61"},{"size":5259,"mtime":1638280238685,"results":"95","hashOfConfig":"61"},{"size":6632,"mtime":1638279050200,"results":"96","hashOfConfig":"61"},{"size":1625,"mtime":1638024832451,"results":"97","hashOfConfig":"61"},{"size":1235,"mtime":1638024832452,"results":"98","hashOfConfig":"61"},{"size":1682,"mtime":1638024832452,"results":"99","hashOfConfig":"61"},{"size":810,"mtime":1638024832451,"results":"100","hashOfConfig":"61"},{"size":1160,"mtime":1638024832451,"results":"101","hashOfConfig":"61"},{"size":252,"mtime":1638024832449,"results":"102","hashOfConfig":"61"},{"size":737,"mtime":1638024832450,"results":"103","hashOfConfig":"61"},{"size":488,"mtime":1638072225223,"results":"104","hashOfConfig":"61"},{"size":532,"mtime":1638072232134,"results":"105","hashOfConfig":"61"},{"size":410,"mtime":1638024832449,"results":"106","hashOfConfig":"61"},{"size":1576,"mtime":1638074872206,"results":"107","hashOfConfig":"61"},{"size":1953,"mtime":1638024832450,"results":"108","hashOfConfig":"61"},{"size":1027,"mtime":1638075537079,"results":"109","hashOfConfig":"61"},{"size":1373,"mtime":1638024832446,"results":"110","hashOfConfig":"61"},{"size":381,"mtime":1638024832447,"results":"111","hashOfConfig":"61"},{"size":1325,"mtime":1638024832446,"results":"112","hashOfConfig":"61"},{"size":4950,"mtime":1638024832424,"results":"113","hashOfConfig":"61"},{"size":6492,"mtime":1638024832424,"results":"114","hashOfConfig":"61"},{"size":4575,"mtime":1638024832425,"results":"115","hashOfConfig":"61"},{"size":3900,"mtime":1638024832424,"results":"116","hashOfConfig":"61"},{"size":4796,"mtime":1638279050199,"results":"117","hashOfConfig":"61"},{"size":907,"mtime":1638024832450,"results":"118","hashOfConfig":"61"},{"size":485,"mtime":1638075613010,"results":"119","hashOfConfig":"61"},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},"j1tgxs",{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"122"},{"filePath":"134","messages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"136","messages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"138","messages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"122"},{"filePath":"141","messages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"143","messages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"145","messages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"147","messages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"122"},{"filePath":"150","messages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"122"},{"filePath":"153","messages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"155","messages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"122"},{"filePath":"158","messages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"122"},{"filePath":"161","messages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"122"},{"filePath":"164","messages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"122"},{"filePath":"167","messages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"122"},{"filePath":"170","messages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"122"},{"filePath":"173","messages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"122"},{"filePath":"176","messages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"122"},{"filePath":"179","messages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"122"},{"filePath":"182","messages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"122"},{"filePath":"185","messages":"186","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"122"},{"filePath":"188","messages":"189","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"122"},{"filePath":"191","messages":"192","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"122"},{"filePath":"194","messages":"195","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"122"},{"filePath":"197","messages":"198","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"122"},{"filePath":"200","messages":"201","errorCount":0,"fatalErrorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"122"},{"filePath":"203","messages":"204","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"122"},{"filePath":"206","messages":"207","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"122"},{"filePath":"209","messages":"210","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"122"},{"filePath":"212","messages":"213","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"214","messages":"215","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"122"},{"filePath":"217","messages":"218","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"219","messages":"220","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"221","messages":"222","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"223","messages":"224","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"225","messages":"226","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"227","messages":"228","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"229","messages":"230","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"231","usedDeprecatedRules":"122"},{"filePath":"232","messages":"233","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"234","usedDeprecatedRules":"122"},{"filePath":"235","messages":"236","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"237","usedDeprecatedRules":"122"},{"filePath":"238","messages":"239","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"240","messages":"241","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"242","messages":"243","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"244","messages":"245","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"246","messages":"247","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"248","usedDeprecatedRules":"122"},{"filePath":"249","messages":"250","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"251","messages":"252","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"253","messages":"254","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"255","usedDeprecatedRules":"122"},{"filePath":"256","messages":"257","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"258","usedDeprecatedRules":"122"},{"filePath":"259","messages":"260","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"261","messages":"262","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"263","messages":"264","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"265","usedDeprecatedRules":"122"},{"filePath":"266","messages":"267","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"268","messages":"269","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"270","usedDeprecatedRules":"122"},"C:\\Users\\danha\\Downloads\\CSE-Software-Engineering-211-CSESE211-lun\\CSE-Software-Engineering-211-CSESE211\\BQ\\frontend\\src\\index.js",[],["271","272"],"C:\\Users\\danha\\Downloads\\CSE-Software-Engineering-211-CSESE211-lun\\CSE-Software-Engineering-211-CSESE211\\BQ\\frontend\\src\\store.js",[],"C:\\Users\\danha\\Downloads\\CSE-Software-Engineering-211-CSESE211-lun\\CSE-Software-Engineering-211-CSESE211\\BQ\\frontend\\src\\App.js",[],"C:\\Users\\danha\\Downloads\\CSE-Software-Engineering-211-CSESE211-lun\\CSE-Software-Engineering-211-CSESE211\\BQ\\frontend\\src\\reducers\\userReducers.js",[],"C:\\Users\\danha\\Downloads\\CSE-Software-Engineering-211-CSESE211-lun\\CSE-Software-Engineering-211-CSESE211\\BQ\\frontend\\src\\reducers\\productReducers.js",[],"C:\\Users\\danha\\Downloads\\CSE-Software-Engineering-211-CSESE211-lun\\CSE-Software-Engineering-211-CSESE211\\BQ\\frontend\\src\\reducers\\cartReducers.js",["273","274"],"import { \r\n        CART_ADD_ITEM, \r\n        CART_REMOVE_ITEM, \r\n        CART_REMOVE_ALL_ITEM,\r\n        CART_SAVE_SHIPPING_ADDRESS,\r\n        CART_SAVE_PAYMENT_METHOD,\r\n        CART_LIST_MY_REQUEST,\r\n        CART_LIST_MY_SUCCESS,\r\n        CART_LIST_MY_FAIL,\r\n        CART_LIST_MY_RESET,\r\n        CART_UPDATE_SUCCESS,\r\n        CART_UPDATE_FAIL,\r\n        CART_UPDATE_REQUEST,\r\n        CART_UPDATE_ALL_ITEM,\r\n        REMOVE_OR_CR,\r\n    } from '../constants/cartConstant'\r\n\r\n\r\n\r\nexport const cartReducer = (state = { cartItems: [], shippingAdress:{},orderCreate:{} }, action) => {\r\n    switch(action.type){\r\n        case CART_ADD_ITEM:\r\n            const item = action.payload\r\n\r\n            const existItem = state.cartItems.find(x => x.product === item.product)\r\n\r\n            if(existItem){\r\n                return {\r\n                    ...state,\r\n                    cartItems: state.cartItems.map(x => x.product === existItem.product ? item : x)\r\n                }\r\n            } else {\r\n                return {\r\n                    ...state,\r\n                    cartItems: [...state.cartItems, item]\r\n                }\r\n            }\r\n        case CART_REMOVE_ITEM:\r\n            return {\r\n                ...state,\r\n                cartItems: state.cartItems.filter(x => x.product !== action.payload),\r\n            }\r\n        case CART_SAVE_SHIPPING_ADDRESS:\r\n        return {\r\n            ...state,\r\n            shippingAddress: action.payload,\r\n        }\r\n        case CART_SAVE_PAYMENT_METHOD:\r\n        return {\r\n            ...state,\r\n            paymentMethod: action.payload,\r\n        }\r\n        case CART_REMOVE_ALL_ITEM:\r\n            return{\r\n            ...state,\r\n            cartItems: []\r\n        }\r\n        case CART_UPDATE_ALL_ITEM:\r\n            //console.log(action.payload)\r\n            const data = localStorage.getItem('cartItems')? JSON.parse(localStorage.getItem('cartItems')): []\r\n            return{\r\n            ...state,\r\n            cartItems:  action.payload\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const cartListMyReducer = (\r\n    state = { cart:[] },\r\n    action\r\n  ) => {\r\n    switch (action.type) {\r\n      case CART_LIST_MY_REQUEST:\r\n        return {\r\n          loading: true \r\n        };\r\n      case CART_LIST_MY_SUCCESS:\r\n          console.log(action.payload)\r\n        return { \r\n          loading: false, \r\n          cart: action.payload,\r\n        };\r\n  \r\n      case CART_LIST_MY_FAIL:\r\n        return {\r\n          loading: false,\r\n          error: action.payload,\r\n        };\r\n      case CART_LIST_MY_RESET:\r\n        return {\r\n            cart: []\r\n        };\r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n\r\n  export const updateCartReducer = ( state = {}, action) => {\r\n    switch(action.type){\r\n        case CART_UPDATE_REQUEST:\r\n            return{\r\n                loading: true\r\n            }\r\n        case CART_UPDATE_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true,\r\n                cart: action.payload,\r\n            }\r\n        case CART_UPDATE_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload,\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","C:\\Users\\danha\\Downloads\\CSE-Software-Engineering-211-CSESE211-lun\\CSE-Software-Engineering-211-CSESE211\\BQ\\frontend\\src\\reducers\\brandReducers.js",[],"C:\\Users\\danha\\Downloads\\CSE-Software-Engineering-211-CSESE211-lun\\CSE-Software-Engineering-211-CSESE211\\BQ\\frontend\\src\\reducers\\orderReducers.js",[],"C:\\Users\\danha\\Downloads\\CSE-Software-Engineering-211-CSESE211-lun\\CSE-Software-Engineering-211-CSESE211\\BQ\\frontend\\src\\components\\getListProductByCategoryOfBrand.js",["275"],"import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { listProductsOfCate } from \"../actions/brandActions\";\r\nimport { Row, Col } from \"react-bootstrap\";\r\nimport Product from \"./Product\";\r\nimport Advertisement from \"./Advertisement\";\r\nimport Cate from \"./Cate\";\r\nimport { listCate } from \"../actions/brandActions\";\r\nfunction AfterPickCategory({ match }) {\r\n  const dispatch = useDispatch();\r\n  const productsListOfCate = useSelector((state) => state.productsListOfCate);\r\n  const { productsOfCate } = productsListOfCate;\r\n  const cateList = useSelector((state) => state.cateList);\r\n  const { categoryList } = cateList;\r\n\r\n  useEffect(() => {\r\n    dispatch(\r\n      listProductsOfCate(match.params.pathName, match.params.catePathName)\r\n    );\r\n    dispatch(listCate(match.params.pathName));\r\n  }, [dispatch, match]);\r\n  return (\r\n    <>\r\n      <Advertisement />\r\n\r\n    <div className=\"title-\">\r\n    <div id=\"food-title\">\r\n        {(categoryList || []).map((cate) => (\r\n            <Cate cate={cate} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n          <div className=\"food-overlay\">\r\n          <div id=\"food-list\">\r\n        {productsOfCate &&\r\n          productsOfCate.map((product) => (\r\n            <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\r\n              <Product product={product} />\r\n            </Col>\r\n          ))}\r\n      </div>\r\n          </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AfterPickCategory;\r\n","C:\\Users\\danha\\Downloads\\CSE-Software-Engineering-211-CSESE211-lun\\CSE-Software-Engineering-211-CSESE211\\BQ\\frontend\\src\\components\\ListBrand.js",[],"C:\\Users\\danha\\Downloads\\CSE-Software-Engineering-211-CSESE211-lun\\CSE-Software-Engineering-211-CSESE211\\BQ\\frontend\\src\\components\\getListProductOfBrand.js",[],"C:\\Users\\danha\\Downloads\\CSE-Software-Engineering-211-CSESE211-lun\\CSE-Software-Engineering-211-CSESE211\\BQ\\frontend\\src\\components\\Footer.js",[],"C:\\Users\\danha\\Downloads\\CSE-Software-Engineering-211-CSESE211-lun\\CSE-Software-Engineering-211-CSESE211\\BQ\\frontend\\src\\components\\OrderList.js",["276","277","278","279"],"import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getOrderList } from '../actions/orderActions'\r\n\r\nfunction OrderList() {\r\n    const dispatch = useDispatch()\r\n    const orderList = useSelector(state => state.orderList)\r\n    const { loading, error, orders } = OrderList\r\n    useEffect(() => {\r\n        dispatch(getOrderList())\r\n    }, [dispatch])\r\n\r\n    return (\r\n        <div>\r\n            b\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OrderList\r\n","C:\\Users\\danha\\Downloads\\CSE-Software-Engineering-211-CSESE211-lun\\CSE-Software-Engineering-211-CSESE211\\BQ\\frontend\\src\\components\\ListCategory.js",["280"],"import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { listCate } from \"../actions/brandActions\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport Cate from \"./Cate\";\r\n\r\nfunction ListCategory({ match }) {\r\n  const dispatch = useDispatch();\r\n  const cateList = useSelector((state) => state.cateList);\r\n  const { loading, error, categoryList } = cateList;\r\n  console.log(\"huhu\", categoryList)\r\n  useEffect(() => {\r\n    dispatch(listCate(match.params.brandPathName));\r\n  }, [dispatch]);\r\n\r\n\r\n  \r\n  return (\r\n    <>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant=\"danger\">{error}</Message>\r\n      ) : (\r\n        <div id=\"food-list\">\r\n          {(categoryList || []).map((cate) => (\r\n            <div key={cate._id}>\r\n              <Cate cate={cate}/>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ListCategory;\r\n","C:\\Users\\danha\\Downloads\\CSE-Software-Engineering-211-CSESE211-lun\\CSE-Software-Engineering-211-CSESE211\\BQ\\frontend\\src\\screens\\ProductScreen.js",["281","282"],"C:\\Users\\danha\\Downloads\\CSE-Software-Engineering-211-CSESE211-lun\\CSE-Software-Engineering-211-CSESE211\\BQ\\frontend\\src\\screens\\AddBrandScreen.js",["283","284","285"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {  Row, Col } from \"react-bootstrap\";\r\nimport { Form, Button, Image } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport { addNewBrand } from \"../actions/brandActions\";\r\nimport axios from \"axios\";\r\n\r\nconst AddBranchScreen = ({ location, history }) => {\r\n  const [brandName, setBrandName] = useState(\"\");\r\n  const [pathName, setPathName] = useState(\"\");\r\n  const [image, setImage] = useState(\"\");\r\n\r\n  const [uploading, setUploading] = useState(false)\r\n  const dispatch = useDispatch();\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { loading, error, userInfo } = userLogin;\r\n\r\n  const userDetails = useSelector((state) => state.userDetails);\r\n  const {  user } = userDetails;\r\n \r\n  const uploadFileHandle = async (e) => {\r\n    const file = e.target.files[0]\r\n    const formData = new FormData()\r\n    formData.append('image', file)\r\n    setUploading(true)\r\n    console.log(formData)\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        }\r\n        const { data } = await axios.post('/api/upload', formData, config)\r\n        setImage(data)\r\n        setUploading(false)\r\n    } catch (error) {\r\n        setUploading(false)\r\n    }\r\n  }\r\n\r\n  const redirect = location.search ? location.search.split(\"=\")[1] : \"/\";\r\n\r\n  useEffect(() => {\r\n    if (!userInfo || !userInfo.isAdmin) {\r\n      history.push('/login')\r\n    }\r\n    \r\n  }, [dispatch, history, userInfo, redirect, user ]);\r\n\r\n  \r\n\r\n \r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(addNewBrand(\r\n      brandName,\r\n      pathName,\r\n      image\r\n    ))\r\n    history.push('/admin/brand')\r\n  };\r\n\r\n  return (\r\n    <FormContainer>\r\n      <h1>Add Brand </h1>\r\n      {error && <Message variant=\"danger\">{error} </Message>}\r\n      {loading && <Loader />}\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group controlId=\"email\">\r\n          <Form.Label> Brand Name </Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Enter brand name\"\r\n            onChange={(e) => setBrandName(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"email\">\r\n          <Form.Label> Brand pathName </Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Enter pathbrand name\"\r\n            onChange={(e) => setPathName(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"Image\">\r\n          <Form.Label> Image URL </Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Enter image url\"\r\n            onChange={(e) => setImage(e.target.value)}\r\n            value={image}\r\n          ></Form.Control>\r\n          <Form.Control type='file' id='image-file' label='Choose file' custom onChange={uploadFileHandle}></Form.Control>\r\n          {uploading && <Loader />}\r\n        </Form.Group>\r\n        <br></br>\r\n        <Image src={image} alt=\"image\" fluid rounded></Image>\r\n        <br></br>\r\n        <Button type=\"submit\" variant=\"primary\">\r\n          Confirm\r\n        </Button>\r\n      </Form>\r\n    </FormContainer>\r\n  );\r\n};\r\n\r\nexport default AddBranchScreen;\r\n","C:\\Users\\danha\\Downloads\\CSE-Software-Engineering-211-CSESE211-lun\\CSE-Software-Engineering-211-CSESE211\\BQ\\frontend\\src\\screens\\AdminScreen.js",["286","287","288","289","290","291","292","293"],"import React, { useState, useEffect } from \"react\";\r\nimport { Form, Button, Row, Col, Table } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport { getUserDetails} from \"../actions/userActions\";\r\nimport { listBrands, deleteBrand, addNewBrand} from \"../actions/brandActions\";\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst AdminScreen = ({ history }) => {\r\n  \r\n    const dispatch = useDispatch();\r\n  \r\n    const userDetails = useSelector((state) => state.userDetails);\r\n    const { loading, error, user } = userDetails;\r\n  \r\n    const userLogin = useSelector((state) => state.userLogin);\r\n    const { userInfo } = userLogin;\r\n\r\n    const deleteOneBrand = useSelector((state) => state.deleteOneBrand)\r\n    const {success: successDeleteBrand} = deleteOneBrand\r\n\r\n    const addOneBrand = useSelector((state) => state.addOneBrand)\r\n    const {success: successAddBrand} = addOneBrand\r\n\r\n    const brandList = useSelector((state) => state.brandList || {})\r\n    const { loading: loadingBrands, error: errorBrands, brands} = brandList\r\n\r\n    const cateList = useSelector((state) => state.cateList || {})\r\n    const { loading: loadingCates, error: errorCates, categoryList} = cateList\r\n\r\n    \r\n\r\n    useEffect(() => {\r\n      if (!userInfo) {\r\n        history.push(\"/login\");\r\n      }\r\n      else {\r\n        if (!user?.name) {\r\n          dispatch(getUserDetails('profile'));\r\n        }  \r\n        dispatch(listBrands());\r\n\r\n        \r\n        if(successDeleteBrand){\r\n            dispatch(listBrands());\r\n        }\r\n    }\r\n    }, [dispatch, history, userInfo, user, successDeleteBrand, successAddBrand]);\r\n  \r\n\r\n    const removeBrandHandler = (pathName) => {\r\n        console.log(\"delete brand\")\r\n        dispatch(deleteBrand(pathName));\r\n    }\r\n\r\n\r\n    return (\r\n        loading ? <></> : (!user?.isAdmin ? <h1>BẠN KHÔNG CÓ QUYỀN TRUY CẬP VÀO TRANG NÀY !!! </h1> : (\r\n            <Row style={{ marginTop: \"100px\" }}>\r\n                <Row>\r\n                    {loadingBrands ? <Loader /> : errorBrands ? <Message variant='danger'>{errorBrands}</Message> : (\r\n                        <Col>\r\n                            <div>\r\n                                <div className=\"add-brand\">\r\n                                        <h2>Brands</h2>\r\n                                        <button type=\"button\" className=\"add-brand-btn\"><Link to={`/admin/add/brand`}>Add Brand +</Link></button>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"add-brand-overlay\">\r\n                                <div className=\"add-brand-title\">\r\n                                    <Col md={10}>\r\n                                        <Table striped bordered hover responsive className='table-sm'>\r\n                                            <thead>\r\n                                                <tr>\r\n                                                    <th>ID</th>\r\n                                                    <th>Name Brand</th>\r\n                                                    <th>\r\n\r\n                                                    </th>\r\n                                                </tr>\r\n                                            </thead>\r\n                                            <tbody>\r\n                                                {brands.map(brand => (\r\n                                                    <tr key={brand._id}>\r\n                                                        <td>{brand._id}</td>\r\n                                                        <td><Link to={`/admin/cate/${brand.pathName}`}>{brand.brandName}</Link></td>\r\n                                                        <td>\r\n                                                            <Button type='button' variant='light' onClick={() => removeBrandHandler(brand.pathName)}><i className='fas fa-trash'></i></Button>\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                ))}\r\n                                            </tbody>\r\n                                        </Table>\r\n                                    </Col>\r\n                                </div>\r\n                            </div>\r\n                        </Col>\r\n\r\n                    )}\r\n                </Row>\r\n            </Row>\r\n        )\r\n        ))\r\n}\r\n\r\n\r\n\r\n\r\nexport default AdminScreen;\r\n","C:\\Users\\danha\\Downloads\\CSE-Software-Engineering-211-CSESE211-lun\\CSE-Software-Engineering-211-CSESE211\\BQ\\frontend\\src\\screens\\AddProductScreen.js",["294"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Form, Button, Image } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport { addNewProduct } from \"../actions/productActions\";\r\nimport axios from \"axios\";\r\n\r\n\r\nconst AddProductScreen = ({ location, history, match }) => {\r\n  const [name, setName] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [image, setImage] = useState(\"\");\r\n  const [price, setPrice] = useState(\"\");\r\n  const [countInStock, setCountInStock] = useState(\"\");\r\n  const [uploading, setUploading] = useState(false)\r\n\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { loading, error, userInfo } = userLogin;\r\n\r\n  const userDetails = useSelector((state) => state.userDetails);\r\n  const {  user } = userDetails;\r\n \r\n  const uploadFileHandle = async (e) => {\r\n    const file = e.target.files[0]\r\n    const formData = new FormData()\r\n    formData.append('image', file)\r\n    setUploading(true)\r\n    console.log(formData)\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        }\r\n        const { data } = await axios.post('/api/upload', formData, config)\r\n        setImage(data)\r\n        setUploading(false)\r\n    } catch (error) {\r\n        setUploading(false)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!userInfo || !userInfo.isAdmin) {\r\n      history.push('/login')\r\n    } \r\n    \r\n  }, [dispatch, history, userInfo, user ]);\r\n\r\n  \r\n\r\n \r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    console.log(match.params.catename)\r\n    dispatch(addNewProduct(name, image, description, price, countInStock, match.params.pathname, match.params.catename))\r\n    console.log(match.params.pathname)\r\n    history.push(`/admin/product/${match.params.pathname}/${match.params.catename}`)\r\n  };\r\n\r\n  return (\r\n    <FormContainer>\r\n      <h1>Add Product </h1>\r\n      {error && <Message variant=\"danger\">{error} </Message>}\r\n      {loading && <Loader />}\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group controlId=\"text\">\r\n          <Form.Label> Product Name </Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Enter brand name\"\r\n            onChange={(e) => setName(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"text\">\r\n          <Form.Label>Description</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Enter Description for product\"\r\n            onChange={(e) => setDescription(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"Image\">\r\n          <Form.Label> Image URL </Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Enter image url\"\r\n            onChange={(e) => setImage(e.target.value)}\r\n            value={image}\r\n          ></Form.Control>\r\n          <Form.Control type='file' id='image-file' label='Choose file' custom onChange={uploadFileHandle}></Form.Control>\r\n          {uploading && <Loader />}\r\n        </Form.Group>\r\n        <br></br>\r\n        <Image src={image} alt={name} fluid rounded></Image>\r\n        <br></br>\r\n        <Form.Group controlId=\"text\">\r\n          <Form.Label> Price </Form.Label>\r\n          <Form.Control\r\n            type=\"number\"\r\n            placeholder=\"Enter Price\"\r\n            onChange={(e) => setPrice(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"text\">\r\n          <Form.Label>Count In Stock </Form.Label>\r\n          <Form.Control\r\n            type=\"number\"\r\n            placeholder=\"Enter Count In Stock\"\r\n            onChange={(e) => setCountInStock(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Button type=\"submit\" variant=\"primary\">\r\n          Confirm\r\n        </Button>\r\n      </Form>\r\n    </FormContainer>\r\n  );\r\n};\r\n\r\nexport default AddProductScreen;\r\n","C:\\Users\\danha\\Downloads\\CSE-Software-Engineering-211-CSESE211-lun\\CSE-Software-Engineering-211-CSESE211\\BQ\\frontend\\src\\screens\\AddCateScreen.js",["295","296","297","298"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Form, Button, Row, Col } from \"react-bootstrap\";\r\nimport { Image } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport { addNewBrand, addNewCate } from \"../actions/brandActions\";\r\nimport axios from \"axios\";\r\n\r\nconst AddCateScreen = ({ location, history, match }) => {\r\n  const [cateName, setCateName] = useState(\"\");\r\n  const [catePathName, setCatePathName] = useState(\"\");\r\n  const [image, setImage] = useState(\"\");\r\n  const [uploading, setUploading] = useState(false)\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { loading, error, userInfo } = userLogin;\r\n\r\n  const userDetails = useSelector((state) => state.userDetails);\r\n  const {  user } = userDetails;\r\n \r\n  const uploadFileHandle = async (e) => {\r\n    const file = e.target.files[0]\r\n    const formData = new FormData()\r\n    formData.append('image', file)\r\n    setUploading(true)\r\n    console.log(formData)\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        }\r\n        const { data } = await axios.post('/api/upload', formData, config)\r\n        setImage(data)\r\n        setUploading(false)\r\n    } catch (error) {\r\n        setUploading(false)\r\n    }\r\n  }\r\n\r\n  const redirect = location.search ? location.search.split(\"=\")[1] : \"/\";\r\n\r\n  useEffect(() => {\r\n    if (!userInfo || !userInfo.isAdmin) {\r\n      history.push('/login')\r\n    }    \r\n  }, [dispatch, history, userInfo, redirect, user ]);\r\n\r\n  \r\n\r\n \r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(addNewCate(\r\n      cateName,\r\n      catePathName,\r\n      match.params.pathname,\r\n      image\r\n    ))\r\n    console.log(match.params.pathname)\r\n    history.push(`/admin/cate/${match.params.pathname}`)\r\n  };\r\n\r\n  return (\r\n    <FormContainer>\r\n      <h1>Add Category </h1>\r\n      {error && <Message variant=\"danger\">{error} </Message>}\r\n      {loading && <Loader />}\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group controlId=\"text\">\r\n          <Form.Label> Category Name </Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Enter brand name\"\r\n            onChange={(e) => setCateName(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"text\">\r\n          <Form.Label> Category pathName </Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Enter pathbrand name\"\r\n            onChange={(e) => setCatePathName(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"Image\">\r\n          <Form.Label> Image URL </Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Enter image url\"\r\n            onChange={(e) => setImage(e.target.value)}\r\n            value={image}\r\n          ></Form.Control>\r\n          <Form.Control type='file' id='image-file' label='Choose file' custom onChange={uploadFileHandle}></Form.Control>\r\n          {uploading && <Loader />}\r\n        </Form.Group>\r\n        <br></br>\r\n        <Image src={image} alt=\"image\" fluid rounded></Image>\r\n        <br></br>\r\n        <Button type=\"submit\" variant=\"primary\">\r\n          Confirm\r\n        </Button>\r\n      </Form>\r\n    </FormContainer>\r\n  );\r\n};\r\n\r\nexport default AddCateScreen;\r\n","C:\\Users\\danha\\Downloads\\CSE-Software-Engineering-211-CSESE211-lun\\CSE-Software-Engineering-211-CSESE211\\BQ\\frontend\\src\\screens\\HomeScreen.js",["299","300","301","302","303","304"],"import React, { useEffect } from \"react\";\r\nimport \"./HomeScreenStyle.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Product from \"../components/Product\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport ListBrand from \"../components/ListBrand\";\r\nimport { listProducts } from \"../actions/productActions\";\r\nimport Advertisement from \"../components/Advertisement\";\r\n\r\nconst HomeScreen = ({ match }) => {\r\n  const keyword = match.params.keyword\r\n  const dispatch = useDispatch();\r\n\r\n  const productList = useSelector((state) => state.productList || {});\r\n\r\n  const { loading, error, products } = productList;\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    dispatch(listProducts(keyword));\r\n  }, [dispatch, keyword]);\r\n\r\n\r\n  return (\r\n    <>\r\n      <Advertisement />\r\n      <ListBrand />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HomeScreen;\r\n","C:\\Users\\danha\\Downloads\\CSE-Software-Engineering-211-CSESE211-lun\\CSE-Software-Engineering-211-CSESE211\\BQ\\frontend\\src\\screens\\AdminBrandScreen.js",["305","306","307","308","309","310","311","312","313"],"import React, { useState, useEffect } from \"react\";\r\nimport { Form, Button, Row, Col, Table } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport { getUserDetails, updateUserProfile } from \"../actions/userActions\";\r\nimport {  listCate, listBrands, deleteCategory } from \"../actions/brandActions\";\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst AdminBrandScreen = ({ history, match }) => {\r\n    \r\n    const dispatch = useDispatch();\r\n\r\n    const userDetails = useSelector((state) => state.userDetails);\r\n    const { loading, error, user } = userDetails;\r\n\r\n  \r\n    const userLogin = useSelector((state) => state.userLogin);\r\n    const { userInfo } = userLogin;\r\n\r\n    const brandList = useSelector((state) => state.brandList || {})\r\n    const { loading: loadingBrands, error: errorBrands, brands} = brandList\r\n\r\n    const deleteOneCategory = useSelector((state) => state.deleteOneCategory)\r\n    const {success: successDeleteCate} = deleteOneCategory\r\n\r\n    const addOneCategory = useSelector((state) => state.addOneCategory)\r\n    const {success: successAddCate} = addOneCategory\r\n\r\n\r\n    const cateList = useSelector((state) => state.cateList || {})\r\n    const { loading: loadingCates, error: errorCates, categoryList} = cateList\r\n    console.log(categoryList)\r\n    console.log(match.params.name)\r\n\r\n    useEffect(() => {\r\n      if (!userInfo) {\r\n        history.push(\"/login\");\r\n      }\r\n      else {\r\n        if (!user?.name) {\r\n          dispatch(getUserDetails('profile'));\r\n        } \r\n        console.log('listcase')\r\n        dispatch(listCate(match.params.name))\r\n        dispatch(listBrands());\r\n        \r\n    }\r\n    }, [dispatch,match, history, userInfo, user, successDeleteCate, successAddCate]);\r\n  \r\n\r\n    const removeCateHandler = (catePathName) => {\r\n        console.log(\"delete cate\")\r\n        dispatch(deleteCategory(catePathName))\r\n    }\r\n\r\n    return (\r\n        loadingCates ? <Loader /> : (!user?.isAdmin ? <h1>BẠN KHÔNG CÓ QUYỀN TRUY CẬP VÀO TRANG NÀY !!! </h1> : (\r\n            <Row style={{ marginTop: \"100px\" }}>\r\n                <Row>\r\n                    {loadingCates ? <Loader /> : errorCates ? <Message variant='danger'>{errorCates}</Message> : (\r\n                        <Col>\r\n                            <div className=\"admin-categ\">\r\n                                <div className=\"admin-categ-header\">\r\n                                   \r\n                                        <button type=\"button\" className=\"add-brand-btn\"><Link to={'/admin/brand'}>Back </Link></button>\r\n                                  \r\n                                  \r\n                                        <h2>{`Catagorys of ${match.params.name}`}</h2>\r\n                                   \r\n                                \r\n                                        <button type=\"button\" className=\"add-brand-btn\"><Link to={`/admin/add/category/${match.params.name}`}>Add Category + </Link></button>\r\n                                  \r\n                                </div>\r\n                            </div>\r\n                            <div className=\"admin-categ\">\r\n                                <div className=\"admin-categ-overlay\">\r\n                                    <Col md={10}>\r\n                                        <Table striped bordered hover responsive className='table-sm'>\r\n                                            <thead>\r\n                                                <tr>\r\n                                                    <th>ID</th>\r\n                                                    <th>Name Category</th>\r\n                                                    <th>\r\n                                                        Delete\r\n                                                    </th>\r\n                                                </tr>\r\n                                            </thead>\r\n                                            <tbody>\r\n                                                {categoryList && categoryList.map(cate => (\r\n                                                    <tr key={cate._id}>\r\n                                                        <td>{cate._id}</td>\r\n                                                        <td><Link to={`/admin/product/${match.params.name}/${cate.catePathName}`}>{cate.cateName}</Link></td>\r\n                                                        <td>\r\n                                                            <Button type='button' variant='light' onClick={() => removeCateHandler(cate.catePathName)}><i className='fas fa-trash'></i></Button>\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                ))}\r\n                                            </tbody>\r\n                                        </Table>\r\n                                    </Col>\r\n                                </div>\r\n                            </div>\r\n                        </Col>\r\n\r\n                    )}\r\n                </Row>\r\n            </Row>\r\n        )\r\n        ))\r\n}\r\n\r\n\r\n\r\n\r\nexport default AdminBrandScreen;\r\n","C:\\Users\\danha\\Downloads\\CSE-Software-Engineering-211-CSESE211-lun\\CSE-Software-Engineering-211-CSESE211\\BQ\\frontend\\src\\screens\\AdminProductScreen.js",["314","315","316","317","318","319","320","321","322","323","324","325"],"import React, { useState, useEffect } from \"react\";\r\nimport { Form, Button, Row, Col, Table } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport { getUserDetails} from \"../actions/userActions\";\r\nimport { listBrands, listCate, listProductsOfCate} from \"../actions/brandActions\";\r\nimport { Link } from 'react-router-dom'\r\nimport {deleteProduct} from  \"../actions/productActions\";\r\n\r\nconst AdminScreen = ({ history, match }) => {\r\n  \r\n    const dispatch = useDispatch();\r\n  \r\n    const userDetails = useSelector((state) => state.userDetails);\r\n    const { loading, error, user } = userDetails;\r\n  \r\n    const userLogin = useSelector((state) => state.userLogin);\r\n    const { userInfo } = userLogin;\r\n\r\n    const addOneProduct = useSelector((state) => state.addOneProduct)\r\n    const {success: successAddProduct} = addOneProduct\r\n\r\n    const brandList = useSelector((state) => state.brandList || {})\r\n    const { loading: loadingBrands, error: errorBrands, brands} = brandList\r\n\r\n    const cateList = useSelector((state) => state.cateList || {})\r\n    const { loading: loadingCates, error: errorCates, categoryList} = cateList\r\n\r\n    const productList = useSelector((state => state.productsListOfCate) || {})\r\n    const { loading: loadingProducts, error: errorProducts, productsOfCate} = productList\r\n\r\n    const deleteOneProduct = useSelector(state => state.deleteOneProduct)\r\n    const { success: successDeleteProduct} = deleteOneProduct\r\n\r\n    useEffect(() => {\r\n      if (!userInfo) {\r\n        history.push(\"/login\");\r\n      }\r\n      else {\r\n        if (!user?.name) {\r\n          dispatch(getUserDetails('profile'));\r\n         \r\n        }  \r\n        dispatch(listProductsOfCate(match.params.pathname, match.params.catename))\r\n    }\r\n    }, [dispatch,match, history, userInfo, user,successAddProduct, successDeleteProduct]);\r\n  \r\n\r\n    const removeProductHandler = (id) => {\r\n        dispatch(deleteProduct(id))\r\n        console.log(\"delete product\")\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        loading ? <></> : (!user?.isAdmin ? <h1>BẠN KHÔNG CÓ QUYỀN TRUY CẬP VÀO TRANG NÀY !!! </h1> : (\r\n            <Row style={{ marginTop: \"100px\" }}>\r\n                <Row>\r\n                    {loadingProducts ? <Loader /> : errorProducts ? <Message variant='danger'>{errorProducts}</Message> : (\r\n                        <Col>\r\n                            <div className=\"admin-categ\">\r\n                                <div className=\"admin-categ-header\">\r\n                                   \r\n                                        <button type=\"button\" className=\"add-brand-btn\"><Link to={`/admin/cate/${match.params.pathname}`}>Back </Link></button>\r\n                                   \r\n                                    \r\n                                        <h2>{`Products of Category ${match.params.catename} of Brand ${match.params.pathname}`}</h2>\r\n                                  \r\n                                        <button type=\"button\" className=\"add-brand-btn\"><Link to={`/admin/add/product/${match.params.catename}/${match.params.pathname}`}>Add Product + </Link></button>\r\n                                 \r\n                                </div>\r\n                            </div>\r\n                            <div className=\"admin-categ\">\r\n                                <div className=\"admin-categ-overlay\">\r\n                                    <Col md={10}>\r\n                                        <Table striped bordered hover responsive className='table-sm'>\r\n                                            <thead>\r\n                                                <tr>\r\n                                                    <th>ID</th>\r\n                                                    <th>Name Product</th>\r\n                                                    <th>Price</th>\r\n                                                    <th>Count In Stock</th>\r\n                                                    <th>Edit</th>\r\n                                                    <th>Delete</th>\r\n                                                </tr>\r\n                                            </thead>\r\n                                            <tbody>\r\n                                                {productsOfCate.map(product => (\r\n                                                    <tr key={product._id}>\r\n                                                        <td>{product._id}</td>\r\n                                                        <td>{product.name}</td>\r\n                                                        <td>{product.price}</td>\r\n                                                        <td>{product.countInStock}</td>\r\n                                                        <td>\r\n                                                            <Button type='button' variant='light' href={`/admin/edit/product/${product._id}/${match.params.pathname}/${match.params.catename}`}><i className='fas fa-edit'></i></Button>\r\n                                                        </td>\r\n                                                        <td>\r\n                                                            <Button type='button' variant='light' onClick={() => removeProductHandler(product._id)}><i className='fas fa-trash'></i></Button>\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                ))}\r\n                                            </tbody>\r\n                                        </Table>\r\n                                    </Col>\r\n                                </div>\r\n                            </div>\r\n                        </Col>\r\n\r\n                    )}\r\n                </Row>\r\n            </Row>\r\n        )\r\n        ))\r\n}\r\n\r\n\r\n\r\n\r\nexport default AdminScreen;\r\n","C:\\Users\\danha\\Downloads\\CSE-Software-Engineering-211-CSESE211-lun\\CSE-Software-Engineering-211-CSESE211\\BQ\\frontend\\src\\screens\\PaymentScreen.js",["326"],"import React, { useState } from 'react'\r\nimport { Form, Button, Col, Row } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport CheckoutSteps from '../components/CheckoutSteps';\r\nimport { savePaymentMethod } from '../actions/cartActions';\r\n\r\n\r\n\r\nconst PaymentScreen = ({ history,match }) => {\r\n    const cart = useSelector(state => state.cart)\r\n    const { shippingAddress} = cart\r\n\r\n    if(!shippingAddress){\r\n        history.push(`/shipping/${match.params.brandname}`)\r\n    }\r\n\r\n    const [paymentMethod, setPaymentMethod] = useState('PayPal')\r\n     \r\n    const dispatch = useDispatch()\r\n\r\n    const submitHandler = (e) => {\r\n      e.preventDefault()\r\n      dispatch(savePaymentMethod( paymentMethod ))\r\n      history.push(`/placeorder/${match.params.brandname}`)\r\n    }\r\n\r\n    return (\r\n    <FormContainer>\r\n        <h1>Payment Method</h1>\r\n        <Form onSubmit={submitHandler}>\r\n            <Form.Group>\r\n                <Form.Label as='legend'>Select Method</Form.Label>\r\n            \r\n            <Col>\r\n                <Row>\r\n                    <Form.Check \r\n                    type='radio' \r\n                    label='PayPal or Credit Card' \r\n                    id='PayPal' \r\n                    name='paymentMethod' \r\n                    value='PayPal'\r\n                    \r\n                    onChange={(e) => setPaymentMethod(e.target.value)}\r\n                    ></Form.Check>\r\n                </Row>\r\n                <Row>\r\n                    <Form.Check \r\n                    type='radio' \r\n                    label='Trực tiếp' \r\n                    id='Trực tiếp' \r\n                    name='paymentMethod' \r\n                    value='Trực tiếp'\r\n                    onChange={(e) => setPaymentMethod(e.target.value)}\r\n                    ></Form.Check>\r\n                </Row>\r\n            </Col>\r\n            </Form.Group>\r\n\r\n        <Button type='submit' variant='primary'>\r\n          Continue\r\n        </Button>\r\n        \r\n        </Form>\r\n    </FormContainer>\r\n    \r\n    )}\r\n\r\nexport default PaymentScreen","C:\\Users\\danha\\Downloads\\CSE-Software-Engineering-211-CSESE211-lun\\CSE-Software-Engineering-211-CSESE211\\BQ\\frontend\\src\\screens\\LoginScreen.js",["327","328","329"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Form, Button, Row, Col } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport { getUserDetails, login } from \"../actions/userActions\";\r\nimport { listMyCart, updateAllCart } from \"../actions/cartActions\";\r\n\r\nconst LoginScreen = ({ location, history }) => {\r\n  const [userName, setuserName] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { loading, error, userInfo } = userLogin;\r\n\r\n  const userDetails = useSelector((state) => state.userDetails);\r\n  const {  user } = userDetails;\r\n \r\n\r\n  const redirect = location.search ? location.search.split(\"=\")[1] : \"/\";\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      if(!loading){\r\n        dispatch(listMyCart())\r\n      }\r\n      if(userInfo.isAdmin){\r\n        history.push('/admin/brand')\r\n      }\r\n      else if (userInfo.isClerk){\r\n        history.push('/clerk')\r\n      }\r\n      else{\r\n         history.push(redirect);\r\n      }\r\n    }\r\n    \r\n  }, [dispatch, history, userInfo, redirect, user ]);\r\n\r\n  \r\n\r\n \r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(login(userName, password));\r\n  };\r\n\r\n  return (\r\n    <FormContainer>\r\n      <h1> Sign In </h1>\r\n      {error && <Message variant=\"danger\">{error} </Message>}\r\n      {loading && <Loader />}\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group controlId=\"userName\">\r\n          <Form.Label> User Name</Form.Label>\r\n          <Form.Control\r\n            type=\"userName\"\r\n            placeholder=\"Enter userName\"\r\n            value={userName}\r\n            onChange={(e) => setuserName(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"password\">\r\n          <Form.Label> Password </Form.Label>\r\n          <Form.Control\r\n            type=\"password\"\r\n            placeholder=\"Enter password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Button type=\"submit\" variant=\"primary\">\r\n          Sign In\r\n        </Button>\r\n      </Form>\r\n\r\n      <Row className=\"py\">\r\n        <Col>\r\n          New Customer ?{\" \"}\r\n          <Link\r\n            to={redirect ? `/register?redirect=${redirect}` : \"/register\"}\r\n          >\r\n            Register\r\n          </Link>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n      <Col>\r\n        Forgot password?{\" \"}\r\n        <Link to={`/forgotpass`}>\r\n          Reset it\r\n        </Link>\r\n        </Col>\r\n      </Row>\r\n    </FormContainer>\r\n  );\r\n};\r\n\r\nexport default LoginScreen;\r\n","C:\\Users\\danha\\Downloads\\CSE-Software-Engineering-211-CSESE211-lun\\CSE-Software-Engineering-211-CSESE211\\BQ\\frontend\\src\\screens\\CartScreen.js",["330"],"import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col, ListGroup, Image, Form, Button, Card  } from 'react-bootstrap'\r\nimport Message from '../components/Message'\r\nimport { addToCart, removeFromCart, } from '../actions/cartActions'\r\nimport ListBrandCart from '../components/ListBrandCart'\r\n\r\nconst CartScreen = ({match, location, history}) => {\r\n    const productId = match.params.id\r\n\r\n    const qty = location.search ? Number(location.search.split('=')[1]):1\r\n\r\n    const dispatch = useDispatch()\r\n\r\n\r\n    const cart = useSelector((state) => state.cart)\r\n    const { cartItems} = cart\r\n   // const brandCartItems = cartItems.find(x => x.brandName === )\r\n\r\n    useEffect(() => {\r\n        if(productId){\r\n            dispatch(addToCart(productId, qty))\r\n        }\r\n    }, [dispatch, productId, qty])\r\n\r\n    const removeFromCartHandler = (id) => {\r\n        dispatch(removeFromCart(id))\r\n    }\r\n\r\n    const checkoutHandler = () => {\r\n        history.push('/login?/redirect=shipping')\r\n    }\r\n\r\n    return (<Col>\r\n    <Row>\r\n        <ListBrandCart/>\r\n    </Row>\r\n    <Row>\r\n        <Col md={8}><h1 style={{fontWeight:\"700\"}}>Shopping Cart</h1>\r\n            </Col>\r\n        <Col md={8}>\r\n            \r\n            {cartItems.length === 0 ? <Message>Your cart is empty <Link to='/'>Go Back</Link></Message> : (\r\n                <ListGroup variant = 'flush'>\r\n                    {cartItems.map(item => (\r\n                        <ListGroup.Item key={item.product}>\r\n                            <Row>\r\n                                <Col md={2}>\r\n                                    <Image src={item.image} alt={item.name} fluid rounded></Image>\r\n                                </Col>\r\n                                <Col md={5}>\r\n                                    <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                </Col>\r\n                                <Col md={2}>{item.price} VND</Col>\r\n                                <Col md={2}>\r\n                                <Form.Control as='select' value={item.qty} onChange={(e) => dispatch(addToCart(item.product, Number(e.target.value)))}>\r\n                                {[...Array(item.countInStock).keys()].map((x) => (\r\n                                    <option key={x+1} value={x+1}>\r\n                                    {x + 1}\r\n                                    </option>\r\n                                ))}\r\n                                </Form.Control>\r\n                                </Col>\r\n                                <Col md={1}>\r\n                                    <Button type='button' variant='light' onClick={() => removeFromCartHandler(item.product)}><i className='fas fa-trash'></i></Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </ListGroup.Item>\r\n                    ))}\r\n                </ListGroup>\r\n            )}\r\n        </Col>\r\n        <Col md={4}>\r\n            <Card>\r\n                <ListGroup variant='flush'>\r\n                    <ListGroup.Item>\r\n                        <h2>Đơn hàng: {cartItems.reduce((acc, item) => acc + item.qty, 0)} món</h2>\r\n                        <p style={{textAlign:\"center\"}}>{cartItems.reduce((acc, item) => acc + item.qty*item.price, 0).toFixed(2)} VND</p>\r\n                    </ListGroup.Item>\r\n                </ListGroup>\r\n            </Card>\r\n        </Col>\r\n    </Row>\r\n    </Col>\r\n    )\r\n}\r\n\r\nexport default CartScreen","C:\\Users\\danha\\Downloads\\CSE-Software-Engineering-211-CSESE211-lun\\CSE-Software-Engineering-211-CSESE211\\BQ\\frontend\\src\\screens\\EditProductScreen.js",["331","332","333","334","335"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Form, Button, Image } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport { addNewProduct, listProductDetails, updateProduct } from \"../actions/productActions\";\r\nimport axios from \"axios\";\r\n\r\nconst EditProductScreen = ({ history, match }) => {\r\n  const [name, setName] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  const [image, setImage] = useState('');\r\n  const [price, setPrice] = useState('');\r\n  const [countInStock, setCountInStock] = useState('');\r\n  const [uploading, setUploading] = useState(false)\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { loading, error, userInfo } = userLogin;\r\n\r\n  const userDetails = useSelector((state) => state.userDetails);\r\n  const { user } = userDetails;\r\n\r\n  const productDetails = useSelector((state) => state.productDetails);\r\n  const { loading: loadingPr, product } = productDetails;\r\n\r\n  const uploadFileHandle = async (e) => {\r\n    const file = e.target.files[0]\r\n    const formData = new FormData()\r\n    formData.append('image', file)\r\n    setUploading(true)\r\n    console.log(formData)\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        }\r\n        const { data } = await axios.post('/api/upload', formData, config)\r\n        setImage(data)\r\n        setUploading(false)\r\n    } catch (error) {\r\n        setUploading(false)\r\n    }\r\n  }\r\n\r\n  console.log(product)\r\n\r\n  useEffect(() => {\r\n    dispatch(listProductDetails(match.params.id))\r\n  }, [dispatch, history]);\r\n\r\n  useEffect(() => {\r\n    if (product) {\r\n      setName(product.name);\r\n      setDescription(product.description);\r\n      setImage(product.image);\r\n      setPrice(product.price);\r\n      setCountInStock(product.countInStock);\r\n    }\r\n  }, [product])\r\n\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    console.log(match.params.catename)\r\n    dispatch(updateProduct(\r\n      match.params.id,\r\n      {\r\n        name: name,\r\n        image: image,\r\n        description: description,\r\n        price: price,\r\n        countInStock: countInStock,\r\n      }\r\n    ))\r\n    history.push(`/admin/product/${match.params.pathname}/${match.params.catename}`)\r\n  };\r\n\r\n  return (\r\n    loadingPr ? <></> :\r\n      <FormContainer>\r\n        <h1>Edit Product </h1>\r\n        {error && <Message variant=\"danger\">{error} </Message>}\r\n        {loading && <Loader />}\r\n        <Form onSubmit={submitHandler}>\r\n          <Form.Group controlId=\"text\">\r\n            <Form.Label> Product Name </Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"Enter brand name\"\r\n              value={name}\r\n              onChange={(e) => setName(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n          <br></br>\r\n          <Form.Group controlId=\"text\">\r\n            <Form.Label>Description</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"Enter Description for product\"\r\n              value={description}\r\n              onChange={(e) => setDescription(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n          <br></br>\r\n          <Form.Group controlId=\"Image\">\r\n            <Form.Label> Image URL </Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"Enter image url\"\r\n              value={image}\r\n              onChange={(e) => setImage(e.target.value)}\r\n            ></Form.Control>\r\n            <Form.Control type='file' id='image-file' label='Choose file' custom onChange={uploadFileHandle}></Form.Control>\r\n            {uploading && <Loader />}\r\n          </Form.Group>\r\n\r\n          <br></br>\r\n          <Image src={image} alt={name} fluid rounded></Image>\r\n          <br></br>\r\n\r\n          <Form.Group controlId=\"text\">\r\n            <Form.Label> Price </Form.Label>\r\n            <Form.Control\r\n              type=\"number\"\r\n              placeholder=\"Enter Price\"\r\n              value={price}\r\n              onChange={(e) => setPrice(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n          <br></br>\r\n          <Form.Group controlId=\"text\">\r\n            <Form.Label>Count In Stock </Form.Label>\r\n            <Form.Control\r\n              type=\"number\"\r\n              placeholder=\"Enter Count In Stock\"\r\n              value={countInStock}\r\n              onChange={(e) => setCountInStock(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n          <br></br>\r\n          <Button type=\"submit\" variant=\"primary\">\r\n            Confirm\r\n          </Button>\r\n        </Form>\r\n      </FormContainer>\r\n  );\r\n};\r\n\r\nexport default EditProductScreen;\r\n","C:\\Users\\danha\\Downloads\\CSE-Software-Engineering-211-CSESE211-lun\\CSE-Software-Engineering-211-CSESE211\\BQ\\frontend\\src\\screens\\ShippingScreen.js",["336","337"],"import React, { useState } from 'react'\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport CheckoutSteps from '../components/CheckoutSteps';\r\nimport { saveShippingAddress } from '../actions/cartActions';\r\n\r\n\r\n\r\nconst ShippingScreen = ({ history,match }) => {\r\n    const cart = useSelector(state => state.cart)\r\n    console.log(cart)\r\n    const { shippingAddress} = cart\r\n\r\n    const [address, setAddress] = useState(shippingAddress.address)\r\n    const [city, setCity] = useState(shippingAddress.city)\r\n    const [postalCode, setPostalCode] = useState(shippingAddress.postalCode)\r\n    const [country, setCountry] = useState(shippingAddress.country)\r\n     \r\n    const dispatch = useDispatch()\r\n    const submitHandler = (e) => {\r\n      e.preventDefault()\r\n      dispatch(saveShippingAddress({ address, city, postalCode, country }))\r\n      history.push(`/payment/${match.params.brandname}`)\r\n    }\r\n\r\n    return (\r\n    <FormContainer>\r\n        <h1>Shipping</h1>\r\n        <Form onSubmit={submitHandler}>\r\n        <Form.Group controlId=\"address\">\r\n          <Form.Label>Địa chỉ</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Nhập địa chỉ\"\r\n            value={address}\r\n            onChange={(e) => setAddress(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"city\">\r\n          <Form.Label>Thành phố</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Nhập thành phố\"\r\n            value={city}\r\n            onChange={(e) => setCity(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n        <h1>On The Spot</h1>\r\n        <Form.Group controlId=\"country\">\r\n          <Form.Label>Bàn</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Nhập số bàn\"\r\n            value={country}\r\n            onChange={(e) => setCountry(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n\r\n\r\n        <Button type='submit' variant='primary'>\r\n          Continue\r\n        </Button>\r\n        \r\n        </Form>\r\n    </FormContainer>\r\n    \r\n    )}\r\n\r\nexport default ShippingScreen","C:\\Users\\danha\\Downloads\\CSE-Software-Engineering-211-CSESE211-lun\\CSE-Software-Engineering-211-CSESE211\\BQ\\frontend\\src\\screens\\ForgotPassScreen.js",["338"],"import React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { resetNewPass } from '../actions/userActions'\r\nimport { Link } from 'react-router-dom'\r\nimport FormContainer from '../components/FormContainer';\r\nimport Message from '../components/Message';\r\nimport { Col, Form, FormControl, FormGroup, FormLabel, Row, Button } from 'react-bootstrap';\r\nimport Loader from '../components/Loader';\r\nfunction ForgotPassScreen() {\r\n    const dispatch = useDispatch()\r\n    const [email, setEmail] = useState('')\r\n    const [userName, setUsername] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState(null)\r\n    const resetPass = useSelector(state => state.resetPass)\r\n    const {loading, error, success} = resetPass\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        if (password != confirmPassword) {\r\n            setMessage(\"Mật khẩu không khớp\")\r\n        }\r\n        else {\r\n            dispatch(resetNewPass({userName, email, password}))\r\n        }\r\n    }\r\n    return (\r\n        <FormContainer>\r\n            <h1>Reset Password</h1>\r\n            {message && <Message variant=\"danger\">{message}</Message>}\r\n            {error && <Message variant=\"danger\">{error}</Message>}\r\n            {loading && <Loader />}\r\n            {success && <Message variant=\"success\">Đặt lại mật khẩu thành công</Message>}\r\n            <Form onSubmit={handleSubmit}>\r\n                <FormGroup controlId=\"username\">\r\n                    <FormLabel>Username</FormLabel>\r\n                    <FormControl type=\"username\"\r\n                    placeholder=\"Nhập username của bạn\"\r\n                    onChange={(e) => setUsername(e.target.value)}>\r\n                    </FormControl>\r\n                </FormGroup>\r\n\r\n                <FormGroup controlId=\"email\">\r\n                    <FormLabel>Email</FormLabel>\r\n                    <FormControl type=\"email\"\r\n                    placeholder=\"Nhập email của bạn\"\r\n                    onChange={(e) => setEmail(e.target.value)}>\r\n                    </FormControl>\r\n                </FormGroup>\r\n\r\n                <FormGroup controlId=\"password\">\r\n                    <FormLabel>Mật khẩu</FormLabel>\r\n                    <FormControl type=\"password\"\r\n                    placeholder=\"Nhập mật khẩu mới\"\r\n                    onChange={(e) => setPassword(e.target.value)}>\r\n                    </FormControl>\r\n                </FormGroup>\r\n\r\n                <FormGroup controlId=\"passwordconfirm\">\r\n                    <FormLabel>Xác nhận mật khẩu</FormLabel>\r\n                    <FormControl type=\"password\"\r\n                    placeholder=\"Xác nhận mật khẩu mới\"\r\n                    onChange={(e) => setConfirmPassword(e.target.value)}>\r\n                    </FormControl>\r\n                </FormGroup>\r\n                \r\n                <br></br>\r\n                <Row>\r\n                <Col md={6}>\r\n                <Link to ='/login'>\r\n                    <Button type='button'> Quay lại </Button>\r\n                </Link>\r\n                </Col>\r\n                <Col md={6}>\r\n                <Button type=\"submit\" variant=\"primary\"> Xác nhận</Button>\r\n                </Col>\r\n                </Row>\r\n            </Form>\r\n        </FormContainer>\r\n        // <div>\r\n        //     <form>\r\n        //         <input className=\"ForgotPassimpBx\" type=\"text\" required placeholder=\"Username\" \r\n        //         onChange={(e) => setUsername(e.target.value)}/>\r\n        //         <input className=\"ForgotPassimpBx\" type=\"email\" placeholder=\"Email\"\r\n        //         required onChange={(e) => setEmail(e.target.value)}></input>\r\n        //         <input className=\"ForgotPassimpBx\" type=\"password\" placeholder=\"New password\"\r\n        //         required onChange={(e) => setPassword(e.target.value)}></input>\r\n        //         <input className=\"ForgotPassimpBx\" type=\"password\" placeholder=\"Confirm new password\"\r\n        //         required onChange={(e) => setConfirmPassword(e.target.value)}></input>\r\n        //     </form>\r\n        //     <button type=\"submit\" className=\"ForgotPasstoggle-btn1\" \r\n        //         onClick={(e) => handleSubmit(e)}>Reset</button>\r\n        //     <Link to='/login'>\r\n        //         <button type=\"button\" className=\"ForgotPasstoggle-btn2\">Cancel</button>\r\n        //     </Link>\r\n        // </div>\r\n    )\r\n}\r\n\r\nexport default ForgotPassScreen\r\n","C:\\Users\\danha\\Downloads\\CSE-Software-Engineering-211-CSESE211-lun\\CSE-Software-Engineering-211-CSESE211\\BQ\\frontend\\src\\screens\\OrderScreen.js",["339"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { PayPalButton } from 'react-paypal-button-v2'\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button, Row, Col, ListGroup, Image, Card } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport { getOrderDetails, payOrder } from \"../actions/orderActions\";\r\nimport { ORDER_PAY_RESET } from \"../constants/orderConstants\";\r\n\r\nconst OrderScreen = ({ match }) => {\r\n  const orderId = match.params.id;\r\n\r\n  const [sdkReady, setSdkReady] = useState(false)\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const orderDetails = useSelector((state) => state.orderDetails);\r\n  const { order, loading, error } = orderDetails;\r\n\r\n  const orderPay = useSelector((state) => state.orderPay);\r\n  const { loading:loadingPay, success:successPay } = orderPay;\r\n\r\n  console.log(\"order\",order);\r\n\r\n  if (!loading) {\r\n    //Calculate prices\r\n    const addDecimals = (num) => {\r\n      return (Math.round(num * 100) / 100).toFixed(0);\r\n    };\r\n    order.itemsPrice = addDecimals(\r\n      order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0)\r\n    );\r\n  }\r\n\r\n  useEffect(() => {\r\n    const addPayPalScript = async () => {\r\n      const { data: clientId } = await axios.get('/api/config/paypal')\r\n      const script = document.createElement('script')\r\n      script.type = 'text/javascript'\r\n      script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`\r\n      script.async = true\r\n      script.onload = () => {\r\n        setSdkReady(true)\r\n      }\r\n      document.body.appendChild(script)\r\n    }\r\n\r\n    if(!order || successPay || order._id !== orderId){\r\n      dispatch({ type: ORDER_PAY_RESET })\r\n      dispatch(getOrderDetails(orderId));\r\n    } else if(!order.isPay){\r\n      if(!window.paypal){\r\n        addPayPalScript()\r\n      } else {\r\n        setSdkReady(true)\r\n      }\r\n    }\r\n  \r\n  }, [dispatch,orderId,successPay,order]);\r\n\r\n  const successPaymentHandler = (paymentResult) => {\r\n    console.log(paymentResult)\r\n    dispatch(payOrder(orderId, paymentResult))\r\n  }\r\n\r\n  return loading ? (\r\n    <Loader />\r\n  ) : error ? (\r\n    <Message variant=\"danger\">{error}</Message>\r\n  ) : (\r\n    <>\r\n      <h1>Order {order._id}</h1>\r\n      <Row>\r\n        <Col md={8}>\r\n          <ListGroup variant=\"flush\">\r\n            <ListGroup.Item>\r\n              <h2> Hóa đơn </h2>\r\n              <p>\r\n                <strong>Name: </strong> {order.user.name}\r\n              </p>\r\n              <p>\r\n                <strong>Email: </strong> <a href={`mailto:${order.user.email}`}>{order.user.email}</a>\r\n              </p>\r\n              <p>\r\n                <strong>Địa chỉ: </strong>\r\n                {order.shippingAddress.address},{order.shippingAddress.city} ,\r\n                {order.shippingAddress.postalCode},{\" \"}\r\n                {order.shippingAddress.country}\r\n              </p>\r\n              {order.status ===\"Đã giao hàng\"?(\r\n                  <Message variant = 'success'>Delivered {order.deliveredAt}</Message>\r\n              ):(\r\n                  <Message variant = 'danger'>Not Delivered</Message>\r\n              )}\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2> Hình thức thanh toán</h2>\r\n              <p>\r\n              <strong>Hình thức: </strong>\r\n              {order.paymentMethod}\r\n              </p>\r\n              {order.isPaid?(\r\n                  <Message variant = 'success'>Paid </Message>\r\n              ):(\r\n                  <Message variant = 'danger'>Not Paid</Message>\r\n              )}\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Sản phẩm mua</h2>\r\n              {order.orderItems.length === 0 ? (\r\n                <Message>Order is empty</Message>\r\n              ) : (\r\n                <ListGroup variant=\"flush\">\r\n                  {order.orderItems.map((item, index) => (\r\n                    <ListGroup.Item key={index}>\r\n                      <Row>\r\n                        <Col md={1}>\r\n                          <Image\r\n                            src={item.image}\r\n                            alt={item.name}\r\n                            fluid\r\n                            rounded\r\n                          />\r\n                        </Col>\r\n                        <Col>\r\n                          <Link to={`/product/${item.product}`}>\r\n                            {item.name}\r\n                          </Link>\r\n                        </Col>\r\n\r\n                        <Col md={5}>\r\n                          {item.qty} x{item.price} VND = {item.qty * item.price}{\" \"}\r\n                          VND\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  ))}\r\n                </ListGroup>\r\n              )}\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n        <Col md={3}>\r\n          <Card>\r\n            <ListGroup variant=\"flush\">\r\n              <ListGroup.Item>\r\n                <h2>Tổng hóa đơn</h2>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col> Items </Col>\r\n                  <Col>{order.itemsPrice} VND</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col> Thuế GTGT </Col>\r\n                  <Col>{order.shippingPrice} VND</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Total</Col>\r\n                  <Col>{order.totalPrice} VND</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              {!order.isPaid && (order.paymentMethod === \"PayPal\")&& (\r\n                <ListGroup.Item>\r\n                  {loadingPay && <Loader/> }\r\n                  {!sdkReady ? <Loader/> : (\r\n                    <PayPalButton amount={(parseInt(order.totalPrice / 23000))}\r\n                    onSuccess={successPaymentHandler}/>\r\n                  )}\r\n                </ListGroup.Item>\r\n              )}\r\n              {order.paymentMethod === \"Trực tiếp\" && (\r\n                <Message variant = 'success' ><div style={{width:\"100%\"}}><p style={{textAlign:\"center\"}}>PLEASE PAY FOR RECEPTIONIST</p></div></Message>\r\n              )}\r\n            </ListGroup>\r\n            \r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default OrderScreen;\r\n","C:\\Users\\danha\\Downloads\\CSE-Software-Engineering-211-CSESE211-lun\\CSE-Software-Engineering-211-CSESE211\\BQ\\frontend\\src\\screens\\SearchScreen.js",["340","341"],"import React, { useEffect } from \"react\";\r\nimport \"./HomeScreenStyle.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Product from \"../components/Product\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport Advertisement from \"../components/Advertisement\";\r\nimport Category from \"../components/Category\";\r\nimport { listProducts } from \"../actions/productActions\";\r\n\r\nconst HomeScreen = ({ match }) => {\r\n  const keyword = match.params.keyword\r\n  const dispatch = useDispatch();\r\n\r\n  const productList = useSelector((state) => state.productList || {});\r\n\r\n  const { loading, error, products } = productList;\r\n\r\n  useEffect(() => {\r\n    dispatch(listProducts(keyword));\r\n  }, [dispatch, keyword]);\r\n\r\n  return (\r\n    <>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant=\"danger\">{error}</Message>\r\n      ) : (\r\n        <div className=\"food-overlay\">\r\n                  <div id=\"food-list\">\r\n          {products.map((product) => (\r\n            <div key={product._id}>\r\n              <Product product={product} />\r\n            </div>\r\n          ))}\r\n        </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HomeScreen;","C:\\Users\\danha\\Downloads\\CSE-Software-Engineering-211-CSESE211-lun\\CSE-Software-Engineering-211-CSESE211\\BQ\\frontend\\src\\screens\\ClerkScreen.js",["342","343","344","345","346","347","348","349","350","351","352","353","354","355","356","357","358","359","360","361","362","363","364"],"import React, { useState, useEffect } from \"react\";\r\nimport { Form, Button, Row, Col, Table } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport { getUserDetails, updateUserProfile } from \"../actions/userActions\";\r\nimport { getOrderList, listMyOrders, updateOrder } from \"../actions/orderActions\";\r\nimport { disable } from \"colors\";\r\n\r\nconst ClerkScreen = ({ history }) => {\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [message, setMessage] = useState(null);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userDetails = useSelector((state) => state.userDetails);\r\n  const { loading, error, user } = userDetails;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const userUpdateProfile = useSelector((state) => state.userUpdateProfile);\r\n  const { success } = userUpdateProfile;\r\n\r\n  const orderList = useSelector((state) => state.orderList);\r\n  const { loading: loadingOrders, error: errorOrders, orders } = orderList;\r\n\r\n  const updateOrderStatus = useSelector((state) => state.updateOrderStatus);\r\n  const {success: successUpdateOrder} = updateOrderStatus\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push(\"/login\");\r\n    } else {\r\n      if (!user?.name) {\r\n        dispatch(getUserDetails('profile'));\r\n        dispatch(getOrderList())\r\n      }\r\n      if(successUpdateOrder){\r\n        dispatch(getOrderList())\r\n      }\r\n    }\r\n  }, [dispatch, history, userInfo, user,successUpdateOrder]);\r\n\r\n  const confirmHandler = (id) => {\r\n    console.log(\"cf\")\r\n    dispatch(updateOrder(id, \"Đã xác nhận\"))\r\n  };\r\n\r\n  const confirmPayHandler = (id) => {\r\n    console.log(\"cf\")\r\n    dispatch(updateOrder(id, \"Đã thanh toán\"))\r\n  };\r\n\r\n  return(\r\n    loading?<></>:(!user?.isClerk?<h1>BẠN KHÔNG CÓ QUYỀN TRUY CẬP VÀO TRANG NÀY !!! </h1>:(<Row style = {{marginTop:\"100px\"}}>\r\n      <Col md={12}>\r\n        <h2>QUẢN LÝ ĐƠN HÀNG</h2>\r\n        {loadingOrders ? <Loader/> : errorOrders ? <Message variant='danger'>{errorOrders}</Message> : (\r\n<div className=\"clerk-overlay\">\r\n<div className=\"clerk-list\">\r\n                      <Table striped bordered hover responsive className='table-sm'>\r\n            <thead>\r\n              <tr>\r\n                <th>ID</th>\r\n                <th>TOTAL</th>\r\n                <th>PAID</th>\r\n                <th>DELIVERED</th>\r\n                <th>PAID</th>\r\n                <th>CONFIRM</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {orders.map(order => (\r\n                <tr key={order._id}>\r\n                  <td>{order._id}</td>\r\n                  <td>{order.totalPrice}</td>\r\n                  <td>{order.isPaid ? <i className='fas fa-check' style={{color: 'green'}}></i>: (\r\n                    <i className='fas fa-times' style={{color: 'red'}}></i>\r\n                  )}</td>\r\n                  <td>{order.status==\"Đã giao hàng\" ?<i className='fas fa-check' style={{color: 'green'}}></i> : (\r\n                    <i className='fas fa-times' style={{color: 'red'}}></i>\r\n                  )}</td>\r\n                  <td>\r\n                    {order.isPaid?<Button type='button' variant='light' style={{color: 'gray'},{width:'100%'}}>Đã thanh toán</Button>:\r\n                    <Button type='button'  style={{color: 'green'},{width:'100%'}} onClick={() => confirmPayHandler(order._id)}>Thanh toán</Button>\r\n                    }\r\n                  </td>\r\n                  <td>\r\n                    {!order.isPaid?<Button type='button' variant='light' style={{color: 'gray'},{width:'100%'}}>Chưa thanh toán</Button>:\r\n                    order.status === \"Chưa xác nhận\"?\r\n                    <Button type='button'  style={{color: 'green'},{width:'100%'}} onClick={() => confirmHandler(order._id)}>Xác nhận</Button>:\r\n                    <Button type='button' variant='light' style={{color: 'blue'},{width:'100%'}} >Đã xác nhận</Button>\r\n                    }\r\n                    \r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n          </div>\r\n</div>\r\n        )}\r\n      </Col>\r\n    </Row>\r\n  )\r\n  ))\r\n}\r\n\r\nexport default ClerkScreen;\r\n","C:\\Users\\danha\\Downloads\\CSE-Software-Engineering-211-CSESE211-lun\\CSE-Software-Engineering-211-CSESE211\\BQ\\frontend\\src\\screens\\CartBrandScreen.js",["365","366"],"import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col, ListGroup, Image, Form, Button, Card } from 'react-bootstrap'\r\nimport Message from '../components/Message'\r\nimport { addToCart, removeFromCart, } from '../actions/cartActions'\r\nimport ListBrandCart from '../components/ListBrandCart'\r\n\r\nconst CartBrandScreen = ({ match, location, history }) => {\r\n    const productId = match.params.id\r\n\r\n    const qty = location.search ? Number(location.search.split('=')[1]) : 1\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userLogin = useSelector((state) => state.userLogin);\r\n    const { userInfo } = userLogin;\r\n\r\n\r\n    const cart = useSelector((state) => state.cart)\r\n    const { cartItems } = cart\r\n    console.log(cartItems)\r\n    var temp = []\r\n    const brandItems = cartItems.map((x) => {\r\n        if (x.brandName === match.params.brandname) {\r\n            temp = [...temp, x]\r\n        }\r\n    })\r\n    const brandCartItems = temp\r\n\r\n\r\n    useEffect(() => {\r\n        if (productId) {\r\n            dispatch(addToCart(productId, qty))\r\n        }\r\n    }, [dispatch, productId, qty, match])\r\n\r\n    const removeFromCartHandler = (id) => {\r\n        dispatch(removeFromCart(id))\r\n    }\r\n\r\n    const checkoutHandler = () => {\r\n        if (!userInfo) {\r\n            history.push('/login')\r\n        }\r\n        else {\r\n            history.push(`/shipping/${match.params.brandname}`)\r\n        }\r\n\r\n    }\r\n\r\n    return (<Col>\r\n        <Row>\r\n            <ListBrandCart />\r\n        </Row>\r\n        <Row>\r\n            <Col md={8}><h1 style={{fontWeight:\"600\"}}>Shopping Cart</h1>\r\n            </Col>\r\n            <Col md={8}>\r\n\r\n                {brandCartItems.length === 0 ? <Message>Your cart is empty <Link to='/'>Go Back</Link></Message> : (\r\n                    <ListGroup variant='flush'>\r\n                        {brandCartItems.map(item => (\r\n                            <ListGroup.Item key={item.product}>\r\n                                <Row>\r\n                                    <Col md={2}>\r\n                                        <Image src={item.image} alt={item.name} fluid rounded></Image>\r\n                                    </Col>\r\n                                    <Col md={5}>\r\n                                        <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                    </Col>\r\n                                    <Col md={2}>{item.price} VND</Col>\r\n                                    <Col md={2}>\r\n                                        <Form.Control as='select' value={item.qty} onChange={(e) => dispatch(addToCart(item.product, Number(e.target.value)))}>\r\n                                            {[...Array(item.countInStock).keys()].map((x) => (\r\n                                                <option key={x + 1} value={x + 1}>\r\n                                                    {x + 1}\r\n                                                </option>\r\n                                            ))}\r\n                                        </Form.Control>\r\n                                    </Col>\r\n                                    <Col md={1}>\r\n                                        <Button type='button' variant='light' onClick={() => removeFromCartHandler(item.product)}><i className='fas fa-trash'></i></Button>\r\n                                    </Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                        ))}\r\n                    </ListGroup>\r\n                )}\r\n            </Col>\r\n            <Col md={4}>\r\n                <Card>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                        <h2>Đơn hàng: {brandCartItems.reduce((acc, item) => acc + item.qty, 0)} món</h2>\r\n                            <p style={{textAlign:\"center\"}}>{brandCartItems.reduce((acc, item) => acc + item.qty * item.price, 0).toFixed(2)} VND</p>\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <Button type='button' className='btn-block' disable={brandCartItems.length === 0} onClick={checkoutHandler}>\r\n                                Check out\r\n                            </Button>\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Card>\r\n            </Col>\r\n        </Row>\r\n    </Col>\r\n    )\r\n}\r\n\r\nexport default CartBrandScreen","C:\\Users\\danha\\Downloads\\CSE-Software-Engineering-211-CSESE211-lun\\CSE-Software-Engineering-211-CSESE211\\BQ\\frontend\\src\\components\\Header.js",["367","368"],"import React from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { Navbar, Nav, NavDropdown } from \"react-bootstrap\";\r\nimport SearchBox from \"./SearchBox\";\r\nimport { logout } from \"../actions/userActions\";\r\nimport { updateCart, removeAllCart } from \"../actions/cartActions\";\r\nimport \"./MyStyle.css\";\r\n\r\nfunction Header() {\r\n  const dispatch = useDispatch();\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n  const cart = useSelector((state) => state.cart);\r\n  const { cartItems } = cart;\r\n\r\n  const logoutHandler = () => {\r\n    dispatch(updateCart(cartItems));\r\n    dispatch(removeAllCart());\r\n    dispatch(logout());\r\n  };\r\n\r\n  return (\r\n    <div className=\"header\">\r\n      <Link to=\"/\">\r\n        <img src=\"https://res.cloudinary.com/vitamim/image/upload/v1638074055/BQ/logo_kuroio.png\" alt=\"logo\" className=\"logo\" />\r\n      </Link>\r\n      {/*<input type=\"text\" className=\"search-bar\" placeholder=\"Search\" />*/}\r\n      <Route render={({ history }) => <SearchBox history={history} />} />\r\n      <div className=\"space\"></div>\r\n      <div className=\"cart-info\">\r\n        <Link to=\"/cart\">\r\n          <img src=\"https://res.cloudinary.com/vitamim/image/upload/v1638074114/BQ/cart_mfmks6.png\" alt=\"\" className=\"cart\" />\r\n        </Link>\r\n      </div>\r\n      {userInfo ? (\r\n        <>\r\n          <NavDropdown title={userInfo.name} id=\"username\">\r\n            <LinkContainer to=\"/profile\">\r\n              <NavDropdown.Item>Profile</NavDropdown.Item>\r\n            </LinkContainer>\r\n            <NavDropdown.Item onClick={logoutHandler}>\r\n              {\" \"}\r\n              Logout{\" \"}\r\n            </NavDropdown.Item>\r\n          </NavDropdown>\r\n        </>\r\n      ) : (\r\n        <Link to=\"/login\">\r\n          <p className=\"login\">Login</p>\r\n        </Link>\r\n      )}\r\n      {userInfo && userInfo.isAdmin && (\r\n        <NavDropdown title=\"Admin\" id=\"adminmenu\">\r\n          <LinkContainer to=\"/admin/brand\">\r\n            <NavDropdown.Item>Quản lý brand</NavDropdown.Item>\r\n          </LinkContainer>\r\n        </NavDropdown>\r\n      )}\r\n      {userInfo && userInfo.isClerk && (\r\n        \r\n        <NavDropdown title=\"Clerk\" id=\"clerkmenu\">\r\n          <LinkContainer to=\"/clerk\">\r\n            <NavDropdown.Item>Quản lý order</NavDropdown.Item>\r\n          </LinkContainer>\r\n        </NavDropdown>\r\n      )}\r\n      \r\n\r\n      <img className=\"bar\" src=\"images/bar.png\" alt=\"bar\" />\r\n    </div>\r\n  );\r\n}\r\nexport default Header;\r\n","C:\\Users\\danha\\Downloads\\CSE-Software-Engineering-211-CSESE211-lun\\CSE-Software-Engineering-211-CSESE211\\BQ\\frontend\\src\\screens\\ProfileScreen.js",["369","370","371","372","373","374","375","376","377"],"import React, { useState, useEffect } from \"react\";\r\nimport { Form, Button, Row, Col, Table } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport { getUserDetails, updateUserProfile } from \"../actions/userActions\";\r\nimport { listMyOrders, updateOrder } from \"../actions/orderActions\";\r\n\r\nconst ProfileScreen = ({ history }) => {\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [userName, setUserName] = useState(\"\");\r\n  const [phoneNumber, setPhoneNumber] = useState(\"\");\r\n  const [gender, setGender] = useState(\"\");\r\n  const [dateOfBirth, setdateOfBirth] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [message, setMessage] = useState(null);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userDetails = useSelector((state) => state.userDetails);\r\n  const { loading, error, user } = userDetails;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const userUpdateProfile = useSelector((state) => state.userUpdateProfile);\r\n  const { success } = userUpdateProfile;\r\n\r\n  const orderListMy = useSelector((state) => state.orderListMy);\r\n  const { loading: loadingOrders, error: errorOrders, orders } = orderListMy;\r\n\r\n  const updateOrderStatus = useSelector((state) => state.updateOrderStatus);\r\n  const {success: successUpdateOrder} = updateOrderStatus\r\n\r\n  console.log(user)\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push(\"/login\");\r\n    } else {\r\n      if (!user?.name) {\r\n        dispatch(getUserDetails('profile'));\r\n        dispatch(listMyOrders())\r\n        \r\n      } else {\r\n        setName(user.name);\r\n        setEmail(user.email);\r\n        setUserName(user.userName);\r\n        setGender(user.gender);\r\n        setPhoneNumber(user.phoneNumber);\r\n        setdateOfBirth(user.dateOfBirth);\r\n      }\r\n      if(successUpdateOrder){\r\n        dispatch(listMyOrders())\r\n      }\r\n    }\r\n  }, [dispatch, history, userInfo, user,successUpdateOrder]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    if (password !== confirmPassword) {\r\n      setMessage(\"MẬT KHẨU KHÔNG KHỚP\");\r\n    } else {\r\n      dispatch(updateUserProfile({ id: user._id, name, email, password, userName, phoneNumber, gender, dateOfBirth }));\r\n    }\r\n  };\r\n\r\n  const confirmHandler = (id) => {\r\n    console.log(\"cf\")\r\n    dispatch(updateOrder(id, \"Đã giao hàng\"))\r\n  };\r\n\r\n  return (\r\n    <Row style={{ marginTop: \"100px\" }}>\r\n      <Col md={3}>\r\n        <div className=\"prof-overlay\">\r\n          <div className=\"prof-in4\">\r\n            <div className=\"prof-user\">\r\n              <h6>USER PROFILE</h6>\r\n              {message && <Message variant=\"danger\">{message}</Message>}\r\n              {error && <Message variant=\"danger\">{error}</Message>}\r\n              {success && (\r\n                <Message variant=\"success\">\r\n\r\n                  Cập nhật thay đổi thành công</Message>\r\n              )}\r\n              {loading && <Loader />}\r\n              <img src=\"images/avt.png\" alt=\"avt\" />\r\n\r\n                </div>\r\n              <Form onSubmit={submitHandler}>\r\n\r\n                <Form.Group controlId=\"userName\">\r\n                  <Form.Label>User Name</Form.Label>\r\n                <Form.Control\r\n                  type=\"userName\"\r\n                  placeholder=\"user Name\"\r\n                  value={userName}\r\n                  onChange={(e) => setUserName(e.target.value)}\r\n                ></Form.Control>\r\n              </Form.Group>\r\n\r\n              <Form.Group controlId=\"name\">\r\n                <Form.Label>Tên người dùng</Form.Label>\r\n                <Form.Control\r\n                  type=\"name\"\r\n                  placeholder=\"Nhập tên người dùng\"\r\n                  value={name}\r\n                  onChange={(e) => setName(e.target.value)}\r\n                ></Form.Control>\r\n              </Form.Group>\r\n\r\n              <label for=\"gender\">Sex</label>\r\n        <select name=\"Gender\" id=\"gender\" defaultValue={gender} onChange={(e) => setGender(e.target.value)}>\r\n          <option value=\"None\" selected={gender=='None' ? true: false}>None</option>\r\n          <option value=\"Female\" selected={gender=='Female' ? true: false}>Female</option>\r\n          <option value=\"Male\" selected={gender=='Male' ? true: false}>Male</option>\r\n        </select>\r\n\r\n              <Form.Group controlId=\"phoneNumber\">\r\n                <Form.Label>Phone Number</Form.Label>\r\n                <Form.Control\r\n                  type=\"phoneNumber\"\r\n                  placeholder=\"Phone Number\"\r\n                  value={phoneNumber}\r\n                  onChange={(e) => setPhoneNumber(e.target.value)}\r\n                ></Form.Control>\r\n              </Form.Group>\r\n\r\n              <Form.Group controlId=\"dateOfBirth\">\r\n                <Form.Label>Date Of Birth </Form.Label>\r\n                <Form.Control\r\n                  type=\"date\"\r\n                  placeholder=\"Date Of Birth\"\r\n                  value={dateOfBirth.split('T')[0]}\r\n                  onChange={(e) => setdateOfBirth(e.target.value)}\r\n                ></Form.Control>\r\n              </Form.Group>\r\n\r\n              <Form.Group controlId=\"email\">\r\n                <Form.Label>Địa chỉ Email</Form.Label>\r\n                <Form.Control\r\n                  type=\"email\"\r\n                  placeholder=\"Nhập email\"\r\n                  value={email}\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                ></Form.Control>\r\n              </Form.Group>\r\n\r\n              <Form.Group controlId=\"password\">\r\n                <Form.Label>Nhập mật khẩu mới</Form.Label>\r\n                <Form.Control\r\n                  type=\"password\"\r\n                  placeholder=\"Nhập mật khẩu\"\r\n                  value={password}\r\n                  onChange={(e) => setPassword(e.target.value)}\r\n                ></Form.Control>\r\n              </Form.Group>\r\n\r\n              <Form.Group controlId=\"confirmPassword\">\r\n                <Form.Label>Xác nhận mật khẩu</Form.Label>\r\n                <Form.Control\r\n                  type=\"password\"\r\n                  placeholder=\"Xác nhận mật khẩu\"\r\n                  value={confirmPassword}\r\n                  onChange={(e) => setConfirmPassword(e.target.value)}\r\n                ></Form.Control>\r\n              </Form.Group>\r\n\r\n              <Button type=\"submit\" variant=\"primary\">\r\n                Cập nhật\r\n              </Button>\r\n            </Form>\r\n          </div>\r\n        </div>\r\n      </Col>\r\n      <Col md={9}>\r\n        <div className=\"bill-overlay\">\r\n          <div className=\"bill-list\">\r\n            <h2>Đơn hàng đã đặt</h2>\r\n            {loadingOrders ? <Loader /> : errorOrders ? <Message variant='danger'>{errorOrders}</Message> : (\r\n              <Table striped bordered hover responsive className='table-sm'>\r\n                <thead>\r\n                  <tr>\r\n                    <th>ID</th>\r\n                    <th>TOTAL</th>\r\n                    <th>PAID</th>\r\n                    <th>DELIVERED</th>\r\n                    <th></th>\r\n                    <th></th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {orders.map(order => (\r\n                    <tr key={order._id}>\r\n                      <td>{order._id}</td>\r\n                      <td>{order.totalPrice}</td>\r\n                      <td>{order.isPaid ? <i className='fas fa-check' style={{ color: 'green' }}></i> : (\r\n                        <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                      )}</td>\r\n                      <td>{order.status == \"Đã giao hàng\" ? <i className='fas fa-check' style={{ color: 'green' }}></i> : (\r\n                        <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                      )}</td>\r\n                      <td>\r\n                        <LinkContainer to={`/order/${order._id}`}>\r\n                          <Button type='button' variant='light' style={{ color: 'gray' }, { width: '50%' }}>Details</Button>\r\n                        </LinkContainer>\r\n                      </td>\r\n                      <td>\r\n                        {!order.isPaid ?\r\n                          <Button type='button' variant='light' style={{ color: 'gray' }, { width: '100%' }}>Chưa thanh toán</Button> :\r\n                          order.status === \"Chưa xác nhận\" ?\r\n                            <Button type='button' style={{ color: 'green' }, { width: '100%' }} >Chưa được xác nhận</Button> :\r\n                            !(order.status === \"Đã giao hàng\") ?\r\n                              <Button type='button' style={{ color: 'green' }, { width: '100%' }} onClick={() => confirmHandler(order._id)}>Đã nhận hàng</Button> :\r\n                              <Button type='button' variant='light' style={{ color: 'blue' }, { width: '100%' }} >Đã nhận hàng</Button>\r\n                        }\r\n\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </Table>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </Col>\r\n    </Row>\r\n  )\r\n}\r\n\r\nexport default ProfileScreen;\r\n","C:\\Users\\danha\\Downloads\\CSE-Software-Engineering-211-CSESE211-lun\\CSE-Software-Engineering-211-CSESE211\\BQ\\frontend\\src\\screens\\RegisterScreen.js",[],"C:\\Users\\danha\\Downloads\\CSE-Software-Engineering-211-CSESE211-lun\\CSE-Software-Engineering-211-CSESE211\\BQ\\frontend\\src\\screens\\PlaceOrderScreen.js",["378","379","380","381","382"],"import React, { useEffect } from 'react';\r\nimport { Button, Row, Col, ListGroup, Image, Card } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from '../components/Message';\r\nimport CheckoutSteps from '../components/CheckoutSteps';\r\nimport { Link } from 'react-router-dom';\r\nimport { createOrder } from '../actions/orderActions';\r\nimport { removeFromCart, removeOrderCreate } from '../actions/cartActions';\r\nimport { REMOVE_OR_CR } from '../constants/cartConstant';\r\n\r\nconst PlaceOrderScreen = ({history,match}) => {\r\n    const dispatch = useDispatch()\r\n\r\n    const cart = useSelector(state => state.cart)\r\n    const { cartItems} = cart\r\n    console.log(cartItems)\r\n    var temp =[]\r\n    const brandItems = cartItems.map((x) => {\r\n        if(x.brandName === match.params.brandname){\r\n            temp=[...temp,x]\r\n        }} )\r\n    const brandCartItems = temp\r\n\r\n    //Calculate prices\r\n    cart.itemsPrice = brandCartItems.reduce((acc, item) => acc + item.price*item.qty, 0)\r\n    cart.shippingPrice = cart.itemsPrice/10\r\n    cart.totalPrice = cart.itemsPrice + cart.shippingPrice\r\n\r\n    const orderCreate = useSelector(state => state.orderCreate)\r\n    const { order, success, error } = orderCreate\r\n\r\n    useEffect(() => {\r\n        if(success){\r\n            dispatch({type: REMOVE_OR_CR})\r\n            history.push(`/order/${order._id}`)\r\n            brandCartItems.map((item) => {\r\n                console.log(item.product)\r\n                dispatch(removeFromCart(item.product))\r\n            })\r\n        }\r\n        // eslint-disable-next-line\r\n    },[success])\r\n\r\n    const placeOrderHandler = () => {\r\n       \r\n        dispatch(createOrder({\r\n            orderItems: brandCartItems,\r\n            shippingAddress: cart.shippingAddress,\r\n            paymentMethod: cart.paymentMethod,\r\n            itemsPrice: cart.itemsPrice,\r\n            shippingPrice: cart.shippingPrice,\r\n            totalPrice: cart.totalPrice,\r\n        })) \r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col md={8}>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2 style={{textAlign:\"left\"}}>Shipping</h2>\r\n                            <p>\r\n                                <strong>Address: </strong>\r\n                                {cart.shippingAddress.address}, \r\n                                {cart.shippingAddress.city}, \r\n                                {cart.shippingAddress.postalCode},{' '}\r\n                            </p>\r\n                            <p>\r\n                            <strong>Bàn : </strong>\r\n                                {cart.shippingAddress.country}\r\n                            </p>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2  style={{textAlign:\"left\"}}>Payment Method</h2>\r\n                            <strong>Method: </strong>\r\n                            {cart.paymentMethod}\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2 style={{textAlign:\"left\"}}>Order Items</h2>\r\n                            {cartItems.length === 0 ? <Message>Your cart is empty</Message>:(\r\n                                <ListGroup variant='flush'>\r\n                                    {brandCartItems.map((item, index) => (\r\n                                        <ListGroup.Item key={index}>\r\n                                            <Row>\r\n                                                <Col md={1}>\r\n                                                    <Image src={item.image} alt={item.name} fluid rounded/>\r\n                                                </Col>\r\n                                                <Col>\r\n                                                    <Link to={`/product/${item.product}`}>\r\n                                                        {item.name}\r\n                                                    </Link>\r\n                                                </Col>\r\n                                                <Col md={5}>\r\n                                                    {item.qty} x {item.price} VND = {item.qty*item.price} VND\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </ListGroup.Item>\r\n                                    ))}\r\n                                </ListGroup>\r\n                            )}\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Col>\r\n                <Col md={3}>\r\n                    <Card>\r\n                        <ListGroup variant='flush'>\r\n                            <ListGroup.Item>\r\n                                <h2  style={{textAlign:\"left\"}}>Tổng hóa đơn</h2>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Items</Col>\r\n                                    <Col>{cart.itemsPrice} VND</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Thuế GTGT</Col>\r\n                                    <Col>{cart.shippingPrice} VND</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Total</Col>\r\n                                    <Col>{cart.totalPrice} VND</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                {error && <Message variant='danger'>{error}</Message>}\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Button \r\n                                    type='button' \r\n                                    className='btn-block' \r\n                                    disable={brandCartItems === 0} \r\n                                    onClick={placeOrderHandler}\r\n                                    >Place Order</Button>\r\n                            </ListGroup.Item>\r\n                        </ListGroup>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PlaceOrderScreen","C:\\Users\\danha\\Downloads\\CSE-Software-Engineering-211-CSESE211-lun\\CSE-Software-Engineering-211-CSESE211\\BQ\\frontend\\src\\constants\\brandConstants.js",[],"C:\\Users\\danha\\Downloads\\CSE-Software-Engineering-211-CSESE211-lun\\CSE-Software-Engineering-211-CSESE211\\BQ\\frontend\\src\\constants\\productConstants.js",[],"C:\\Users\\danha\\Downloads\\CSE-Software-Engineering-211-CSESE211-lun\\CSE-Software-Engineering-211-CSESE211\\BQ\\frontend\\src\\constants\\userConstants.js",[],"C:\\Users\\danha\\Downloads\\CSE-Software-Engineering-211-CSESE211-lun\\CSE-Software-Engineering-211-CSESE211\\BQ\\frontend\\src\\constants\\cartConstant.js",[],"C:\\Users\\danha\\Downloads\\CSE-Software-Engineering-211-CSESE211-lun\\CSE-Software-Engineering-211-CSESE211\\BQ\\frontend\\src\\constants\\orderConstants.js",[],"C:\\Users\\danha\\Downloads\\CSE-Software-Engineering-211-CSESE211-lun\\CSE-Software-Engineering-211-CSESE211\\BQ\\frontend\\src\\components\\Message.js",[],"C:\\Users\\danha\\Downloads\\CSE-Software-Engineering-211-CSESE211-lun\\CSE-Software-Engineering-211-CSESE211\\BQ\\frontend\\src\\components\\Product.js",["383"],"import React from \"react\";\r\nimport {Link} from 'react-router-dom'\r\nimport Rating from './Rating'\r\nimport \"./MyStyle.css\"\r\n\r\nconst Product = ({ product }) => {\r\n  return (\r\n    <>\r\n      <Link to={`/product/${product._id}`}>\r\n        <img className=\"product-image\" src={product.image} variant=\"top\" />\r\n      </Link>\r\n        <Link to = {`/product/${product._id}`}>\r\n          <div className=\"product-name\">\r\n            <strong>{product.name}</strong>\r\n          </div>\r\n        </Link>\r\n        <div>\r\n          <Rating value = {product.rating}\r\n          text = {`${product.numReviews} reviews`}/>\r\n        </div>\r\n      <div className=\"product-price\">{product.price/1000}.000 VND </div>\r\n      </>\r\n  );\r\n};\r\n\r\nexport default Product;","C:\\Users\\danha\\Downloads\\CSE-Software-Engineering-211-CSESE211-lun\\CSE-Software-Engineering-211-CSESE211\\BQ\\frontend\\src\\components\\Brand.js",["384","385"],"import { Link } from \"react-router-dom\";\r\nimport React, { useEffect } from \"react\";\r\nimport \"./MyStyle.css\";\r\n\r\nconst Brand = ({ brand }) => {\r\n\r\n  return (\r\n    //\r\n    <div className=\"brand-info\">\r\n      <Link to ={`brand/${brand.pathName}/list_product`}>\r\n        <img className=\"brand-image\" src={brand.image} variant=\"top\" />\r\n      </Link>\r\n      <div className=\"brand-name\">\r\n        <strong>{brand.brandName}</strong>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Brand;\r\n","C:\\Users\\danha\\Downloads\\CSE-Software-Engineering-211-CSESE211-lun\\CSE-Software-Engineering-211-CSESE211\\BQ\\frontend\\src\\components\\Cate.js",["386","387"],"import React from \"react\";\r\nimport { Link } from 'react-router-dom';\r\nimport AfterPickCategory from './getListProductByCategoryOfBrand';\r\nimport \"./MyStyle.css\"\r\n\r\nconst Cate= ({ cate}) => {\r\n  return (\r\n      <Link  className=\"categ\" to={`/brand/${cate.brandName}/list_product_sort_by/${cate.catePathName}`}>\r\n        <img className=\"categ-image\" src={cate.image} variant=\"top\" />\r\n        <div className=\"categ-name\">\r\n            <strong>{cate.cateName}</strong>\r\n          </div>\r\n      </Link>\r\n  );\r\n};\r\n\r\nexport default Cate;","C:\\Users\\danha\\Downloads\\CSE-Software-Engineering-211-CSESE211-lun\\CSE-Software-Engineering-211-CSESE211\\BQ\\frontend\\src\\components\\Loader.js",[],"C:\\Users\\danha\\Downloads\\CSE-Software-Engineering-211-CSESE211-lun\\CSE-Software-Engineering-211-CSESE211\\BQ\\frontend\\src\\components\\Advertisement.js",[],"C:\\Users\\danha\\Downloads\\CSE-Software-Engineering-211-CSESE211-lun\\CSE-Software-Engineering-211-CSESE211\\BQ\\frontend\\src\\components\\Rating.js",[],"C:\\Users\\danha\\Downloads\\CSE-Software-Engineering-211-CSESE211-lun\\CSE-Software-Engineering-211-CSESE211\\BQ\\frontend\\src\\components\\ListBrandCart.js",[],"C:\\Users\\danha\\Downloads\\CSE-Software-Engineering-211-CSESE211-lun\\CSE-Software-Engineering-211-CSESE211\\BQ\\frontend\\src\\components\\Category.js",["388","389","390","391"],"import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nconst Category = () => {\r\n  return (\r\n    <div className=\"content\">\r\n      <div className=\"prefer\">\r\n        <p>Bạn thích gì nèo :3</p>\r\n\r\n        <div className=\"select-prefer-foods\">\r\n          <div className=\"select-prefer-food\">\r\n            <Link to={``}>\r\n              <img src=\"/images/cate_favourite.png \" />\r\n            </Link>\r\n\r\n            <Link to={``}>\r\n              <p>Best seller</p>\r\n            </Link>\r\n          </div>\r\n          <div className=\"select-prefer-food\">\r\n            <Link to={``}>\r\n              <img src=\"/images/cg_coffee_web.png \" />\r\n            </Link>\r\n\r\n            <Link to={``}>\r\n              <p>Cà phê</p>\r\n            </Link>\r\n          </div>\r\n          <div className=\"select-prefer-food\">\r\n            <Link to={``}>\r\n              <img src=\"/images/cg_frappu_web.png\" />\r\n            </Link>\r\n\r\n            <Link to={``}>\r\n              <p>Trà/Trà sữa</p>\r\n            </Link>\r\n          </div>\r\n          <div className=\"select-prefer-food\">\r\n            <Link to={``}>\r\n              <img src=\"/images/cg_tea_milk_tea_web.png \" />\r\n            </Link>\r\n\r\n            <Link to={``}>\r\n              <p>Đá xay</p>\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Category;\r\n","C:\\Users\\danha\\Downloads\\CSE-Software-Engineering-211-CSESE211-lun\\CSE-Software-Engineering-211-CSESE211\\BQ\\frontend\\src\\components\\FormContainer.js",[],"C:\\Users\\danha\\Downloads\\CSE-Software-Engineering-211-CSESE211-lun\\CSE-Software-Engineering-211-CSESE211\\BQ\\frontend\\src\\components\\CheckoutSteps.js",[],"C:\\Users\\danha\\Downloads\\CSE-Software-Engineering-211-CSESE211-lun\\CSE-Software-Engineering-211-CSESE211\\BQ\\frontend\\src\\actions\\orderActions.js",["392"],"import axios from 'axios'\r\nimport { \r\n    ORDER_CREATE_REQUEST,\r\n    ORDER_CREATE_SUCCESS,\r\n    ORDER_CREATE_FAIL, \r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_SUCCESS,\r\n    ORDER_DETAILS_FAIL,\r\n    ORDER_PAY_REQUEST,\r\n    ORDER_PAY_SUCCESS,\r\n    ORDER_PAY_FAIL,\r\n    ORDER_PAY_RESET,\r\n    ORDER_LIST_MY_REQUEST,\r\n    ORDER_LIST_MY_SUCCESS,\r\n    ORDER_LIST_MY_FAIL,\r\n    GET_ALL_ORDER_REQUEST,\r\n    GET_ALL_ORDER_SUCCESS,\r\n    GET_ALL_ORDER_FAIL,\r\n    UPDATE_ORDER_REQUEST,\r\n    UPDATE_ORDER_SUCCESS,\r\n    UPDATE_ORDER_FAIL,\r\n} from '../constants/orderConstants';\r\n\r\n\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n    try {\r\n      dispatch({\r\n        type: ORDER_CREATE_REQUEST,\r\n      });\r\n\r\n      const {\r\n        userLogin: {userInfo},\r\n      } = getState()\r\n    //   const userInfo=getState().userLogin.userInfo;\r\n     \r\n  \r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      };\r\n  \r\n      const { data } = await axios.post(`/api/orders`, order, config);\r\n  \r\n      dispatch({\r\n        type: ORDER_CREATE_SUCCESS,\r\n        payload: data,\r\n      });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: ORDER_CREATE_FAIL,\r\n        payload:\r\n          error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n      });\r\n    }\r\n  };\r\n\r\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_DETAILS_REQUEST,\r\n    });\r\n\r\n    const userInfo = getState().userLogin.userInfo;\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(`/api/orders/${id}`, config);\r\n    console.log(\"data\",data);\r\n    dispatch({\r\n      type: ORDER_DETAILS_SUCCESS,\r\n      payload: data,\r\n    });\r\n    \r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_DETAILS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const payOrder = (orderId, paymentResult) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_PAY_REQUEST,\r\n    });\r\n\r\n    const userInfo = getState().userLogin.userInfo;\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.put(`/api/orders/${orderId}/pay`,paymentResult, config);\r\n\r\n    dispatch({\r\n      type: ORDER_PAY_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_PAY_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const listMyOrders = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_LIST_MY_REQUEST,\r\n    });\r\n\r\n    const userInfo = getState().userLogin.userInfo;\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(`/api/orders/myorders`,config );\r\n\r\n    dispatch({\r\n      type: ORDER_LIST_MY_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_LIST_MY_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getOrderList = () => async (dispatch, getState) => {\r\n try {\r\n  dispatch({\r\n    type: GET_ALL_ORDER_REQUEST\r\n  })\r\n  const userInfo = getState().userLogin.userInfo;\r\n  const config = {\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      Authorization: `Bearer ${userInfo.token}`,\r\n    },\r\n  };\r\n  const { data } = await axios.get('/api/orders', config)\r\n  dispatch({\r\n    type: GET_ALL_ORDER_SUCCESS,\r\n    payload: data\r\n  })\r\n } catch (error) {\r\n  dispatch({\r\n    type: GET_ALL_ORDER_FAIL,\r\n    payload:\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message,\r\n  });\r\n } \r\n}\r\n\r\n\r\n\r\nexport const updateOrder = (id,status) => async (dispatch, getState) => {\r\n try {\r\n  dispatch({\r\n    type: UPDATE_ORDER_REQUEST\r\n  })\r\n  const userInfo = getState().userLogin.userInfo;\r\n  const config = {\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      Authorization: `Bearer ${userInfo.token}`,\r\n    },\r\n  };\r\n  await axios.put(`/api/orders/${id}`, {status}, config)\r\n  dispatch({\r\n    type: UPDATE_ORDER_SUCCESS\r\n  })\r\n } catch (error) {\r\n  dispatch({\r\n    type: UPDATE_ORDER_FAIL,\r\n    payload:\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message,\r\n  });\r\n } \r\n}\r\n","C:\\Users\\danha\\Downloads\\CSE-Software-Engineering-211-CSESE211-lun\\CSE-Software-Engineering-211-CSESE211\\BQ\\frontend\\src\\actions\\brandActions.js",["393","394","395","396","397"],"import axios from \"axios\";\r\nimport {\r\n  BRAND_LIST_FAIL,\r\n  BRAND_LIST_PRODUCTS_FAIL,\r\n  BRAND_LIST_PRODUCTS_REQUEST,\r\n  BRAND_LIST_PRODUCTS_SUCCESS,\r\n  BRAND_LIST_REQUEST,\r\n  BRAND_LIST_SUCCESS,\r\n  CATEGORY_PRODUCTS_FAIL,\r\n  CATEGORY_PRODUCTS_REQUEST,\r\n  CATEGORY_PRODUCTS_SUCCESS,\r\n  SAVE_BRAND_FAIL,\r\n  SAVE_BRAND_REQUEST,\r\n  CATE_LIST_PRODUCTS_FAIL,\r\n  CATE_LIST_PRODUCTS_REQUEST,\r\n  CATE_LIST_PRODUCTS_SUCCESS,\r\n  CREATE_BRAND_FAIL,\r\n  CREATE_BRAND_REQUEST,\r\n  CREATE_BRAND_SUCCESS,\r\n  CREATE_CATEGORY_FAIL,\r\n  CREATE_CATEGORY_REQUEST,\r\n  CREATE_CATEGORY_SUCCESS,\r\n  DELETE_BRAND_FAIL,\r\n  DELETE_BRAND_REQUEST,\r\n  DELETE_BRAND_SUCCESS,\r\n  DELETE_CATEGORY_FAIL,\r\n  DELETE_CATEGORY_REQUEST,\r\n  DELETE_CATEGORY_SUCCESS,\r\n  CATEGORY_LIST_REQUEST,\r\n  CATEGORY_LIST_SUCCESS,\r\n  CATEGORY_LIST_FAIL,\r\n\r\n} from \"../constants/brandConstants\";\r\n\r\nexport const listBrands = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: BRAND_LIST_REQUEST });\r\n    const { data } = await axios.get(\"/api/brands\");\r\n    dispatch({\r\n      type: BRAND_LIST_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: BRAND_LIST_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\nexport const listCate = (brandPathName) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: CATEGORY_LIST_REQUEST })\r\n    const { data } = await axios.get(`/api/brands/catelist/${brandPathName}`)\r\n    dispatch({ type: CATEGORY_LIST_SUCCESS, payload: data })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: CATEGORY_LIST_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\n\r\n\r\nexport const listProductsOfBrand = (pathName) => async (dispatch) => {\r\n  try {/*\r\n  \r\n    dispatch({ type: BRAND_LIST_PRODUCTS_REQUEST });\r\n    const { data } = await axios.get(`/api/brands/getproducts/${pathName}`);\r\n    const temp_id = data.hasProducts;\r\n    let ans = [];\r\n    for (let i = 0; i < temp_id.length; i++) {\r\n      ans.push((await axios.get(`/api/products/${temp_id[i]}`)).data);\r\n    }\r\n    dispatch({\r\n      type: BRAND_LIST_PRODUCTS_SUCCESS,\r\n      payload: ans,\r\n    });\r\n  */\r\n  dispatch({ type: BRAND_LIST_PRODUCTS_REQUEST });\r\n    const { data } = await axios.get(`/api/brands/getproducts/${pathName}`);\r\n    dispatch({\r\n      type: BRAND_LIST_PRODUCTS_SUCCESS,\r\n      payload: data,\r\n    });} catch (error) {\r\n    dispatch({\r\n      type: BRAND_LIST_PRODUCTS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n\r\n  }\r\n}\r\n\r\n\r\nexport const listProductsOfCate = (pathName, cateName) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: CATE_LIST_PRODUCTS_REQUEST });\r\n    const { data } = await axios.get(\r\n      `/api/brands/getproducts/${pathName}/${cateName}`\r\n    );\r\n    dispatch({\r\n      type: CATE_LIST_PRODUCTS_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: CATE_LIST_PRODUCTS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const addNewBrand =\r\n  (brandName, pathName, image) => async (dispatch, getState) => {\r\n    try {\r\n      dispatch({\r\n        type: CREATE_BRAND_REQUEST,\r\n      });\r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState();\r\n\r\n      const config = {\r\n        headers: {\r\n          \"Content-type\": \"application/json\",\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      };\r\n      await axios.post(\r\n        \"/api/brands/add\",\r\n        { brandName, pathName, image },\r\n        config\r\n      );\r\n\r\n      dispatch({\r\n        type: CREATE_BRAND_SUCCESS,\r\n      });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: CREATE_BRAND_FAIL,\r\n        payload:\r\n          error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n      });\r\n    }\r\n  };\r\nexport const addNewCate =\r\n  (cateName, catePathName, brandName, image) => async (dispatch, getState) => {\r\n    try {\r\n      dispatch({\r\n        type: CREATE_CATEGORY_REQUEST,\r\n      });\r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState();\r\n\r\n      const config = {\r\n        headers: {\r\n          \"Content-type\": \"application/json\",\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      };\r\n      await axios.post(\r\n        \"/api/brands/addCategory\",\r\n        { cateName, catePathName, brandName, image },\r\n        config\r\n      );\r\n\r\n      dispatch({\r\n        type: CREATE_CATEGORY_SUCCESS,\r\n      });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: CREATE_CATEGORY_FAIL,\r\n        payload:\r\n          error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n      });\r\n    }\r\n  };\r\n\r\nexport const deleteBrand = (brandPathName) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: DELETE_BRAND_REQUEST,\r\n    });\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    await axios.delete(`/api/brands/${brandPathName}`, config)\r\n    dispatch({\r\n      type: DELETE_BRAND_SUCCESS\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: DELETE_BRAND_FAIL,\r\n      payload: error.response && error.response.data.message\r\n      ? error.response.data.message\r\n      : error.message,\r\n    })\r\n  }\r\n};\r\nexport const deleteCategory = (catePathName) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: DELETE_CATEGORY_REQUEST,\r\n    });\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n const config = {\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    await axios.delete(`/api/brands/deleteCate/${catePathName}`, config)\r\n    dispatch({\r\n      type: DELETE_CATEGORY_SUCCESS\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: DELETE_CATEGORY_FAIL,\r\n      payload: error.response && error.response.data.message\r\n      ? error.response.data.message\r\n      : error.message,\r\n    })\r\n  }\r\n};\r\n","C:\\Users\\danha\\Downloads\\CSE-Software-Engineering-211-CSESE211-lun\\CSE-Software-Engineering-211-CSESE211\\BQ\\frontend\\src\\actions\\productActions.js",[],"C:\\Users\\danha\\Downloads\\CSE-Software-Engineering-211-CSESE211-lun\\CSE-Software-Engineering-211-CSESE211\\BQ\\frontend\\src\\actions\\cartActions.js",[],"C:\\Users\\danha\\Downloads\\CSE-Software-Engineering-211-CSESE211-lun\\CSE-Software-Engineering-211-CSESE211\\BQ\\frontend\\src\\actions\\userActions.js",["398"],"import {\r\n  USER_LOGIN_REQUEST, \r\n  USER_LOGIN_SUCCESS, \r\n  USER_LOGIN_FAIL, \r\n  USER_LOGOUT,\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_REGISTER_FAIL,\r\n  USER_DETAILS_REQUEST,\r\n  USER_DETAILS_SUCCESS,\r\n  USER_DETAILS_FAIL,\r\n  USER_DETAILS_RESET,\r\n  USER_UPDATE_PROFILE_REQUEST,\r\n  USER_UPDATE_PROFILE_SUCCESS,\r\n  USER_UPDATE_PROFILE_FAIL,\r\n  RESET_PASS_REQUEST,\r\n  RESET_PASS_SUCCESS,\r\n  RESET_PASS_FAIL,\r\n\r\n} from \"../constants/userConstants\"\r\nimport { ORDER_LIST_MY_RESET, ORDER_PAY_RESET } from \"../constants/orderConstants\"\r\nimport axios from 'axios'\r\nimport { CART_UPDATE_REQUEST } from \"../constants/cartConstant\"\r\n\r\n\r\nexport const login = (userName, password) => async(dispatch) => {\r\n    try{\r\n        dispatch({\r\n            type: USER_LOGIN_REQUEST\r\n        })\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n        const {data} = await axios.post('/api/users/login', {userName, password}, config)\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n\r\n\r\n        })\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n    \r\n    }\r\n\r\n    catch(error) {\r\n        dispatch({\r\n      type: USER_LOGIN_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n    }\r\n}\r\n\r\nexport const logout = () => (dispatch) => {\r\n    localStorage.removeItem('userInfo')\r\n    dispatch({type: USER_LOGOUT})\r\n    dispatch({type: USER_DETAILS_RESET})\r\n    dispatch({type: ORDER_LIST_MY_RESET})\r\n    dispatch({type: ORDER_PAY_RESET})\r\n}\r\n\r\n\r\nexport const register = (name,userName, email, password, phoneNumber, gender, dateOfBirth) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_REGISTER_REQUEST,\r\n    });\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.post(\r\n      \"/api/users\",\r\n      {name,userName, email, password, phoneNumber, gender, dateOfBirth },\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: USER_REGISTER_SUCCESS,\r\n      payload: data,\r\n    });\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_REGISTER_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_DETAILS_REQUEST,\r\n    });\r\n    \r\n    const userInfo = getState().userLogin.userInfo; \r\n    const config = {\r\n      \r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n    \r\n    const { data } = await axios.get(`/api/users/${id}`, config);\r\n   \r\n    dispatch({\r\n      type: USER_DETAILS_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_DETAILS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_REQUEST,\r\n    });\r\n    const userInfo=getState().userLogin.userInfo;\r\n   \r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.put(`/api/users/profile`, user, config);\r\n\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\n\r\nexport const resetNewPass = (inform) => async (dispatch) => {\r\n  try {\r\n      dispatch({\r\n          type: RESET_PASS_REQUEST,\r\n      });\r\n\r\n      const config = {\r\n          headers: {\r\n              \"Content-type\": \"application/json\",\r\n          }\r\n      }\r\n      const { data } = await axios.put(`/api/users/reset`, inform, config);\r\n\r\n      dispatch({\r\n          type: RESET_PASS_SUCCESS,\r\n          payload: data,\r\n      });\r\n  } catch (error) {\r\n      dispatch({\r\n          type: RESET_PASS_FAIL,\r\n          payload:\r\n              error.response && error.response.data.message\r\n                  ? error.response.data.message\r\n                  : error.message,\r\n      });\r\n  }\r\n};","C:\\Users\\danha\\Downloads\\CSE-Software-Engineering-211-CSESE211-lun\\CSE-Software-Engineering-211-CSESE211\\BQ\\frontend\\src\\components\\SearchBox.js",[],"C:\\Users\\danha\\Downloads\\CSE-Software-Engineering-211-CSESE211-lun\\CSE-Software-Engineering-211-CSESE211\\BQ\\frontend\\src\\components\\BrandCart.js",["399","400"],"import { Link } from \"react-router-dom\";\r\nimport React, { useEffect } from \"react\";\r\nimport \"./MyStyle.css\";\r\n\r\nconst BrandCart = ({ brand }) => {\r\n\r\n  return (\r\n    //\r\n    <div className=\"brand-info\" >\r\n      <Link to ={`/${brand.brandName}/cart`}>\r\n        <img className=\"brand-image\" src={brand.image} variant=\"top\" />\r\n      </Link>\r\n      <div className=\"brand-name\">\r\n        <strong>{brand.brandName}</strong>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BrandCart;\r\n",{"ruleId":"401","replacedBy":"402"},{"ruleId":"403","replacedBy":"404"},{"ruleId":"405","severity":1,"message":"406","line":15,"column":9,"nodeType":"407","messageId":"408","endLine":15,"endColumn":21},{"ruleId":"405","severity":1,"message":"409","line":60,"column":19,"nodeType":"407","messageId":"408","endLine":60,"endColumn":23},{"ruleId":"405","severity":1,"message":"410","line":4,"column":10,"nodeType":"407","messageId":"408","endLine":4,"endColumn":13},{"ruleId":"405","severity":1,"message":"411","line":7,"column":11,"nodeType":"407","messageId":"408","endLine":7,"endColumn":20},{"ruleId":"405","severity":1,"message":"412","line":8,"column":13,"nodeType":"407","messageId":"408","endLine":8,"endColumn":20},{"ruleId":"405","severity":1,"message":"413","line":8,"column":22,"nodeType":"407","messageId":"408","endLine":8,"endColumn":27},{"ruleId":"405","severity":1,"message":"414","line":8,"column":29,"nodeType":"407","messageId":"408","endLine":8,"endColumn":35},{"ruleId":"415","severity":1,"message":"416","line":15,"column":6,"nodeType":"417","endLine":15,"endColumn":16,"suggestions":"418"},{"ruleId":"405","severity":1,"message":"419","line":21,"column":10,"nodeType":"407","messageId":"408","endLine":21,"endColumn":37},{"ruleId":"405","severity":1,"message":"420","line":38,"column":20,"nodeType":"407","messageId":"408","endLine":38,"endColumn":40},{"ruleId":"405","severity":1,"message":"421","line":2,"column":10,"nodeType":"407","messageId":"408","endLine":2,"endColumn":14},{"ruleId":"405","severity":1,"message":"410","line":3,"column":11,"nodeType":"407","messageId":"408","endLine":3,"endColumn":14},{"ruleId":"405","severity":1,"message":"422","line":3,"column":16,"nodeType":"407","messageId":"408","endLine":3,"endColumn":19},{"ruleId":"405","severity":1,"message":"423","line":1,"column":17,"nodeType":"407","messageId":"408","endLine":1,"endColumn":25},{"ruleId":"405","severity":1,"message":"424","line":2,"column":10,"nodeType":"407","messageId":"408","endLine":2,"endColumn":14},{"ruleId":"405","severity":1,"message":"425","line":4,"column":10,"nodeType":"407","messageId":"408","endLine":4,"endColumn":23},{"ruleId":"405","severity":1,"message":"426","line":8,"column":35,"nodeType":"407","messageId":"408","endLine":8,"endColumn":46},{"ruleId":"405","severity":1,"message":"413","line":16,"column":22,"nodeType":"407","messageId":"408","endLine":16,"endColumn":27},{"ruleId":"405","severity":1,"message":"427","line":31,"column":22,"nodeType":"407","messageId":"408","endLine":31,"endColumn":34},{"ruleId":"405","severity":1,"message":"428","line":31,"column":43,"nodeType":"407","messageId":"408","endLine":31,"endColumn":53},{"ruleId":"405","severity":1,"message":"429","line":31,"column":55,"nodeType":"407","messageId":"408","endLine":31,"endColumn":67},{"ruleId":"405","severity":1,"message":"421","line":2,"column":10,"nodeType":"407","messageId":"408","endLine":2,"endColumn":14},{"ruleId":"405","severity":1,"message":"421","line":2,"column":10,"nodeType":"407","messageId":"408","endLine":2,"endColumn":14},{"ruleId":"405","severity":1,"message":"410","line":3,"column":24,"nodeType":"407","messageId":"408","endLine":3,"endColumn":27},{"ruleId":"405","severity":1,"message":"422","line":3,"column":29,"nodeType":"407","messageId":"408","endLine":3,"endColumn":32},{"ruleId":"405","severity":1,"message":"426","line":9,"column":10,"nodeType":"407","messageId":"408","endLine":9,"endColumn":21},{"ruleId":"405","severity":1,"message":"430","line":4,"column":8,"nodeType":"407","messageId":"408","endLine":4,"endColumn":15},{"ruleId":"405","severity":1,"message":"431","line":5,"column":8,"nodeType":"407","messageId":"408","endLine":5,"endColumn":15},{"ruleId":"405","severity":1,"message":"432","line":6,"column":8,"nodeType":"407","messageId":"408","endLine":6,"endColumn":14},{"ruleId":"405","severity":1,"message":"412","line":17,"column":11,"nodeType":"407","messageId":"408","endLine":17,"endColumn":18},{"ruleId":"405","severity":1,"message":"413","line":17,"column":20,"nodeType":"407","messageId":"408","endLine":17,"endColumn":25},{"ruleId":"405","severity":1,"message":"433","line":17,"column":27,"nodeType":"407","messageId":"408","endLine":17,"endColumn":35},{"ruleId":"405","severity":1,"message":"423","line":1,"column":17,"nodeType":"407","messageId":"408","endLine":1,"endColumn":25},{"ruleId":"405","severity":1,"message":"424","line":2,"column":10,"nodeType":"407","messageId":"408","endLine":2,"endColumn":14},{"ruleId":"405","severity":1,"message":"425","line":4,"column":10,"nodeType":"407","messageId":"408","endLine":4,"endColumn":23},{"ruleId":"405","severity":1,"message":"434","line":7,"column":26,"nodeType":"407","messageId":"408","endLine":7,"endColumn":43},{"ruleId":"405","severity":1,"message":"412","line":16,"column":13,"nodeType":"407","messageId":"408","endLine":16,"endColumn":20},{"ruleId":"405","severity":1,"message":"413","line":16,"column":22,"nodeType":"407","messageId":"408","endLine":16,"endColumn":27},{"ruleId":"405","severity":1,"message":"435","line":23,"column":22,"nodeType":"407","messageId":"408","endLine":23,"endColumn":35},{"ruleId":"405","severity":1,"message":"436","line":23,"column":44,"nodeType":"407","messageId":"408","endLine":23,"endColumn":55},{"ruleId":"405","severity":1,"message":"437","line":23,"column":57,"nodeType":"407","messageId":"408","endLine":23,"endColumn":63},{"ruleId":"405","severity":1,"message":"423","line":1,"column":17,"nodeType":"407","messageId":"408","endLine":1,"endColumn":25},{"ruleId":"405","severity":1,"message":"424","line":2,"column":10,"nodeType":"407","messageId":"408","endLine":2,"endColumn":14},{"ruleId":"405","severity":1,"message":"425","line":4,"column":10,"nodeType":"407","messageId":"408","endLine":4,"endColumn":23},{"ruleId":"405","severity":1,"message":"438","line":8,"column":10,"nodeType":"407","messageId":"408","endLine":8,"endColumn":20},{"ruleId":"405","severity":1,"message":"439","line":8,"column":22,"nodeType":"407","messageId":"408","endLine":8,"endColumn":30},{"ruleId":"405","severity":1,"message":"413","line":17,"column":22,"nodeType":"407","messageId":"408","endLine":17,"endColumn":27},{"ruleId":"405","severity":1,"message":"435","line":26,"column":22,"nodeType":"407","messageId":"408","endLine":26,"endColumn":35},{"ruleId":"405","severity":1,"message":"436","line":26,"column":44,"nodeType":"407","messageId":"408","endLine":26,"endColumn":55},{"ruleId":"405","severity":1,"message":"437","line":26,"column":57,"nodeType":"407","messageId":"408","endLine":26,"endColumn":63},{"ruleId":"405","severity":1,"message":"427","line":29,"column":22,"nodeType":"407","messageId":"408","endLine":29,"endColumn":34},{"ruleId":"405","severity":1,"message":"428","line":29,"column":43,"nodeType":"407","messageId":"408","endLine":29,"endColumn":53},{"ruleId":"405","severity":1,"message":"429","line":29,"column":55,"nodeType":"407","messageId":"408","endLine":29,"endColumn":67},{"ruleId":"405","severity":1,"message":"440","line":5,"column":8,"nodeType":"407","messageId":"408","endLine":5,"endColumn":21},{"ruleId":"405","severity":1,"message":"441","line":8,"column":10,"nodeType":"407","messageId":"408","endLine":8,"endColumn":24},{"ruleId":"405","severity":1,"message":"442","line":9,"column":22,"nodeType":"407","messageId":"408","endLine":9,"endColumn":35},{"ruleId":"415","severity":1,"message":"443","line":42,"column":6,"nodeType":"417","endLine":42,"endColumn":52,"suggestions":"444"},{"ruleId":"405","severity":1,"message":"445","line":31,"column":11,"nodeType":"407","messageId":"408","endLine":31,"endColumn":26},{"ruleId":"405","severity":1,"message":"421","line":2,"column":10,"nodeType":"407","messageId":"408","endLine":2,"endColumn":14},{"ruleId":"405","severity":1,"message":"446","line":8,"column":10,"nodeType":"407","messageId":"408","endLine":8,"endColumn":23},{"ruleId":"405","severity":1,"message":"447","line":22,"column":27,"nodeType":"407","messageId":"408","endLine":22,"endColumn":35},{"ruleId":"405","severity":1,"message":"448","line":25,"column":11,"nodeType":"407","messageId":"408","endLine":25,"endColumn":15},{"ruleId":"415","severity":1,"message":"449","line":54,"column":6,"nodeType":"417","endLine":54,"endColumn":25,"suggestions":"450"},{"ruleId":"405","severity":1,"message":"440","line":5,"column":8,"nodeType":"407","messageId":"408","endLine":5,"endColumn":21},{"ruleId":"405","severity":1,"message":"451","line":17,"column":24,"nodeType":"407","messageId":"408","endLine":17,"endColumn":37},{"ruleId":"452","severity":1,"message":"453","line":20,"column":22,"nodeType":"454","messageId":"455","endLine":20,"endColumn":24},{"ruleId":"405","severity":1,"message":"456","line":5,"column":10,"nodeType":"407","messageId":"408","endLine":5,"endColumn":16},{"ruleId":"405","severity":1,"message":"457","line":7,"column":8,"nodeType":"407","messageId":"408","endLine":7,"endColumn":21},{"ruleId":"405","severity":1,"message":"458","line":8,"column":8,"nodeType":"407","messageId":"408","endLine":8,"endColumn":16},{"ruleId":"405","severity":1,"message":"424","line":2,"column":10,"nodeType":"407","messageId":"408","endLine":2,"endColumn":14},{"ruleId":"405","severity":1,"message":"425","line":4,"column":10,"nodeType":"407","messageId":"408","endLine":4,"endColumn":23},{"ruleId":"405","severity":1,"message":"434","line":7,"column":26,"nodeType":"407","messageId":"408","endLine":7,"endColumn":43},{"ruleId":"405","severity":1,"message":"459","line":8,"column":24,"nodeType":"407","messageId":"408","endLine":8,"endColumn":36},{"ruleId":"405","severity":1,"message":"460","line":9,"column":10,"nodeType":"407","messageId":"408","endLine":9,"endColumn":17},{"ruleId":"405","severity":1,"message":"461","line":12,"column":10,"nodeType":"407","messageId":"408","endLine":12,"endColumn":14},{"ruleId":"405","severity":1,"message":"462","line":12,"column":16,"nodeType":"407","messageId":"408","endLine":12,"endColumn":23},{"ruleId":"405","severity":1,"message":"463","line":13,"column":10,"nodeType":"407","messageId":"408","endLine":13,"endColumn":15},{"ruleId":"405","severity":1,"message":"464","line":13,"column":17,"nodeType":"407","messageId":"408","endLine":13,"endColumn":25},{"ruleId":"405","severity":1,"message":"465","line":14,"column":10,"nodeType":"407","messageId":"408","endLine":14,"endColumn":18},{"ruleId":"405","severity":1,"message":"466","line":14,"column":20,"nodeType":"407","messageId":"408","endLine":14,"endColumn":31},{"ruleId":"405","severity":1,"message":"467","line":15,"column":10,"nodeType":"407","messageId":"408","endLine":15,"endColumn":25},{"ruleId":"405","severity":1,"message":"468","line":15,"column":27,"nodeType":"407","messageId":"408","endLine":15,"endColumn":45},{"ruleId":"405","severity":1,"message":"469","line":16,"column":10,"nodeType":"407","messageId":"408","endLine":16,"endColumn":17},{"ruleId":"405","severity":1,"message":"470","line":16,"column":19,"nodeType":"407","messageId":"408","endLine":16,"endColumn":29},{"ruleId":"405","severity":1,"message":"413","line":21,"column":20,"nodeType":"407","messageId":"408","endLine":21,"endColumn":25},{"ruleId":"405","severity":1,"message":"471","line":27,"column":11,"nodeType":"407","messageId":"408","endLine":27,"endColumn":18},{"ruleId":"452","severity":1,"message":"472","line":85,"column":36,"nodeType":"454","messageId":"455","endLine":85,"endColumn":38},{"ruleId":"473","severity":1,"message":"474","line":89,"column":95,"nodeType":"475","messageId":"476","endLine":89,"endColumn":96},{"ruleId":"473","severity":1,"message":"474","line":90,"column":67,"nodeType":"475","messageId":"476","endLine":90,"endColumn":68},{"ruleId":"473","severity":1,"message":"474","line":94,"column":96,"nodeType":"475","messageId":"476","endLine":94,"endColumn":97},{"ruleId":"473","severity":1,"message":"474","line":96,"column":67,"nodeType":"475","messageId":"476","endLine":96,"endColumn":68},{"ruleId":"473","severity":1,"message":"474","line":97,"column":81,"nodeType":"475","messageId":"476","endLine":97,"endColumn":82},{"ruleId":"405","severity":1,"message":"477","line":24,"column":11,"nodeType":"407","messageId":"408","endLine":24,"endColumn":21},{"ruleId":"478","severity":1,"message":"479","line":24,"column":42,"nodeType":"480","messageId":"481","endLine":24,"endColumn":44},{"ruleId":"405","severity":1,"message":"482","line":6,"column":10,"nodeType":"407","messageId":"408","endLine":6,"endColumn":16},{"ruleId":"405","severity":1,"message":"483","line":6,"column":18,"nodeType":"407","messageId":"408","endLine":6,"endColumn":21},{"ruleId":"452","severity":1,"message":"472","line":117,"column":48,"nodeType":"454","messageId":"455","endLine":117,"endColumn":50},{"ruleId":"452","severity":1,"message":"472","line":118,"column":50,"nodeType":"454","messageId":"455","endLine":118,"endColumn":52},{"ruleId":"452","severity":1,"message":"472","line":119,"column":48,"nodeType":"454","messageId":"455","endLine":119,"endColumn":50},{"ruleId":"452","severity":1,"message":"472","line":203,"column":41,"nodeType":"454","messageId":"455","endLine":203,"endColumn":43},{"ruleId":"473","severity":1,"message":"474","line":208,"column":89,"nodeType":"475","messageId":"476","endLine":208,"endColumn":90},{"ruleId":"473","severity":1,"message":"474","line":213,"column":89,"nodeType":"475","messageId":"476","endLine":213,"endColumn":90},{"ruleId":"473","severity":1,"message":"474","line":215,"column":76,"nodeType":"475","messageId":"476","endLine":215,"endColumn":77},{"ruleId":"473","severity":1,"message":"474","line":217,"column":78,"nodeType":"475","messageId":"476","endLine":217,"endColumn":79},{"ruleId":"473","severity":1,"message":"474","line":218,"column":93,"nodeType":"475","messageId":"476","endLine":218,"endColumn":94},{"ruleId":"405","severity":1,"message":"440","line":5,"column":8,"nodeType":"407","messageId":"408","endLine":5,"endColumn":21},{"ruleId":"405","severity":1,"message":"484","line":8,"column":26,"nodeType":"407","messageId":"408","endLine":8,"endColumn":43},{"ruleId":"405","severity":1,"message":"477","line":18,"column":11,"nodeType":"407","messageId":"408","endLine":18,"endColumn":21},{"ruleId":"478","severity":1,"message":"479","line":18,"column":42,"nodeType":"480","messageId":"481","endLine":18,"endColumn":44},{"ruleId":"478","severity":1,"message":"479","line":36,"column":39,"nodeType":"480","messageId":"481","endLine":36,"endColumn":41},{"ruleId":"485","severity":1,"message":"486","line":10,"column":9,"nodeType":"487","endLine":10,"endColumn":76},{"ruleId":"405","severity":1,"message":"488","line":2,"column":17,"nodeType":"407","messageId":"408","endLine":2,"endColumn":26},{"ruleId":"485","severity":1,"message":"486","line":11,"column":9,"nodeType":"487","endLine":11,"endColumn":72},{"ruleId":"405","severity":1,"message":"489","line":3,"column":8,"nodeType":"407","messageId":"408","endLine":3,"endColumn":25},{"ruleId":"485","severity":1,"message":"486","line":9,"column":9,"nodeType":"487","endLine":9,"endColumn":71},{"ruleId":"485","severity":1,"message":"486","line":14,"column":15,"nodeType":"487","endLine":14,"endColumn":56},{"ruleId":"485","severity":1,"message":"486","line":23,"column":15,"nodeType":"487","endLine":23,"endColumn":55},{"ruleId":"485","severity":1,"message":"486","line":32,"column":15,"nodeType":"487","endLine":32,"endColumn":54},{"ruleId":"485","severity":1,"message":"486","line":41,"column":15,"nodeType":"487","endLine":41,"endColumn":61},{"ruleId":"405","severity":1,"message":"490","line":12,"column":5,"nodeType":"407","messageId":"408","endLine":12,"endColumn":20},{"ruleId":"405","severity":1,"message":"491","line":9,"column":3,"nodeType":"407","messageId":"408","endLine":9,"endColumn":25},{"ruleId":"405","severity":1,"message":"492","line":10,"column":3,"nodeType":"407","messageId":"408","endLine":10,"endColumn":28},{"ruleId":"405","severity":1,"message":"493","line":11,"column":3,"nodeType":"407","messageId":"408","endLine":11,"endColumn":28},{"ruleId":"405","severity":1,"message":"494","line":12,"column":3,"nodeType":"407","messageId":"408","endLine":12,"endColumn":18},{"ruleId":"405","severity":1,"message":"495","line":13,"column":3,"nodeType":"407","messageId":"408","endLine":13,"endColumn":21},{"ruleId":"405","severity":1,"message":"496","line":23,"column":10,"nodeType":"407","messageId":"408","endLine":23,"endColumn":29},{"ruleId":"405","severity":1,"message":"488","line":2,"column":17,"nodeType":"407","messageId":"408","endLine":2,"endColumn":26},{"ruleId":"485","severity":1,"message":"486","line":11,"column":9,"nodeType":"487","endLine":11,"endColumn":72},"no-native-reassign",["497"],"no-negated-in-lhs",["498"],"no-unused-vars","'REMOVE_OR_CR' is defined but never used.","Identifier","unusedVar","'data' is assigned a value but never used.","'Row' is defined but never used.","'orderList' is assigned a value but never used.","'loading' is assigned a value but never used.","'error' is assigned a value but never used.","'orders' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'match.params.brandPathName'. Either include it or remove the dependency array.","ArrayExpression",["499"],"'PRODUCT_CREATE_REVIEW_RESET' is defined but never used.","'successProductReview' is assigned a value but never used.","'Link' is defined but never used.","'Col' is defined but never used.","'useState' is defined but never used.","'Form' is defined but never used.","'LinkContainer' is defined but never used.","'addNewBrand' is defined but never used.","'loadingCates' is assigned a value but never used.","'errorCates' is assigned a value but never used.","'categoryList' is assigned a value but never used.","'Product' is defined but never used.","'Message' is defined but never used.","'Loader' is defined but never used.","'products' is assigned a value but never used.","'updateUserProfile' is defined but never used.","'loadingBrands' is assigned a value but never used.","'errorBrands' is assigned a value but never used.","'brands' is assigned a value but never used.","'listBrands' is defined but never used.","'listCate' is defined but never used.","'CheckoutSteps' is defined but never used.","'getUserDetails' is defined but never used.","'updateAllCart' is defined but never used.","React Hook useEffect has a missing dependency: 'loading'. Either include it or remove the dependency array.",["500"],"'checkoutHandler' is assigned a value but never used.","'addNewProduct' is defined but never used.","'userInfo' is assigned a value but never used.","'user' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'match.params.id'. Either include it or remove the dependency array.",["501"],"'setPostalCode' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'Button' is defined but never used.","'Advertisement' is defined but never used.","'Category' is defined but never used.","'listMyOrders' is defined but never used.","'disable' is defined but never used.","'name' is assigned a value but never used.","'setName' is assigned a value but never used.","'email' is assigned a value but never used.","'setEmail' is assigned a value but never used.","'password' is assigned a value but never used.","'setPassword' is assigned a value but never used.","'confirmPassword' is assigned a value but never used.","'setConfirmPassword' is assigned a value but never used.","'message' is assigned a value but never used.","'setMessage' is assigned a value but never used.","'success' is assigned a value but never used.","Expected '===' and instead saw '=='.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","'brandItems' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'Navbar' is defined but never used.","'Nav' is defined but never used.","'removeOrderCreate' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useEffect' is defined but never used.","'AfterPickCategory' is defined but never used.","'ORDER_PAY_RESET' is defined but never used.","'CATEGORY_PRODUCTS_FAIL' is defined but never used.","'CATEGORY_PRODUCTS_REQUEST' is defined but never used.","'CATEGORY_PRODUCTS_SUCCESS' is defined but never used.","'SAVE_BRAND_FAIL' is defined but never used.","'SAVE_BRAND_REQUEST' is defined but never used.","'CART_UPDATE_REQUEST' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"502","fix":"503"},{"desc":"504","fix":"505"},{"desc":"506","fix":"507"},"Update the dependencies array to be: [dispatch, match.params.brandPathName]",{"range":"508","text":"509"},"Update the dependencies array to be: [dispatch, history, userInfo, redirect, user, loading]",{"range":"510","text":"511"},"Update the dependencies array to be: [dispatch, history, match.params.id]",{"range":"512","text":"513"},[574,584],"[dispatch, match.params.brandPathName]",[1309,1355],"[dispatch, history, userInfo, redirect, user, loading]",[1857,1876],"[dispatch, history, match.params.id]"]